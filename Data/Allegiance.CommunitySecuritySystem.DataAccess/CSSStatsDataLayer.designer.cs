#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Allegiance.CommunitySecuritySystem.DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CSSStats")]
	public partial class CSSStatsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGameChatLog(GameChatLog instance);
    partial void UpdateGameChatLog(GameChatLog instance);
    partial void DeleteGameChatLog(GameChatLog instance);
    partial void InsertGameEventType(GameEventType instance);
    partial void UpdateGameEventType(GameEventType instance);
    partial void DeleteGameEventType(GameEventType instance);
    partial void InsertGameServer(GameServer instance);
    partial void UpdateGameServer(GameServer instance);
    partial void DeleteGameServer(GameServer instance);
    partial void InsertGameServerIP(GameServerIP instance);
    partial void UpdateGameServerIP(GameServerIP instance);
    partial void DeleteGameServerIP(GameServerIP instance);
    partial void InsertStatsFaction(StatsFaction instance);
    partial void UpdateStatsFaction(StatsFaction instance);
    partial void DeleteStatsFaction(StatsFaction instance);
    partial void InsertStatsMetric(StatsMetric instance);
    partial void UpdateStatsMetric(StatsMetric instance);
    partial void DeleteStatsMetric(StatsMetric instance);
    partial void InsertGame(Game instance);
    partial void UpdateGame(Game instance);
    partial void DeleteGame(Game instance);
    partial void InsertGameTeam(GameTeam instance);
    partial void UpdateGameTeam(GameTeam instance);
    partial void DeleteGameTeam(GameTeam instance);
    partial void InsertGameEvent(GameEvent instance);
    partial void UpdateGameEvent(GameEvent instance);
    partial void DeleteGameEvent(GameEvent instance);
    partial void InsertGameTeamMember(GameTeamMember instance);
    partial void UpdateGameTeamMember(GameTeamMember instance);
    partial void DeleteGameTeamMember(GameTeamMember instance);
    partial void InsertLossFactor(LossFactor instance);
    partial void UpdateLossFactor(LossFactor instance);
    partial void DeleteLossFactor(LossFactor instance);
    partial void InsertWinFactor(WinFactor instance);
    partial void UpdateWinFactor(WinFactor instance);
    partial void DeleteWinFactor(WinFactor instance);
    partial void InsertExperianceExchange(ExperianceExchange instance);
    partial void UpdateExperianceExchange(ExperianceExchange instance);
    partial void DeleteExperianceExchange(ExperianceExchange instance);
    partial void InsertStatsLeaderboard(StatsLeaderboard instance);
    partial void UpdateStatsLeaderboard(StatsLeaderboard instance);
    partial void DeleteStatsLeaderboard(StatsLeaderboard instance);
    partial void InsertScoreQueue(ScoreQueue instance);
    partial void UpdateScoreQueue(ScoreQueue instance);
    partial void DeleteScoreQueue(ScoreQueue instance);
    #endregion
		
		public CSSStatsDataContext() : 
				base(global::Allegiance.CommunitySecuritySystem.DataAccess.Properties.Settings.Default.CSSStatsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CSSStatsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CSSStatsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CSSStatsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CSSStatsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<GameChatLog> GameChatLogs
		{
			get
			{
				return this.GetTable<GameChatLog>();
			}
		}
		
		public System.Data.Linq.Table<GameEventType> GameEventTypes
		{
			get
			{
				return this.GetTable<GameEventType>();
			}
		}
		
		public System.Data.Linq.Table<GameServer> GameServers
		{
			get
			{
				return this.GetTable<GameServer>();
			}
		}
		
		public System.Data.Linq.Table<GameServerIP> GameServerIPs
		{
			get
			{
				return this.GetTable<GameServerIP>();
			}
		}
		
		public System.Data.Linq.Table<StatsFaction> StatsFactions
		{
			get
			{
				return this.GetTable<StatsFaction>();
			}
		}
		
		public System.Data.Linq.Table<StatsMetric> StatsMetrics
		{
			get
			{
				return this.GetTable<StatsMetric>();
			}
		}
		
		public System.Data.Linq.Table<Game> Games
		{
			get
			{
				return this.GetTable<Game>();
			}
		}
		
		public System.Data.Linq.Table<GameTeam> GameTeams
		{
			get
			{
				return this.GetTable<GameTeam>();
			}
		}
		
		public System.Data.Linq.Table<AS_GamePlayerA> AS_GamePlayerAs
		{
			get
			{
				return this.GetTable<AS_GamePlayerA>();
			}
		}
		
		public System.Data.Linq.Table<GameEvent> GameEvents
		{
			get
			{
				return this.GetTable<GameEvent>();
			}
		}
		
		public System.Data.Linq.Table<GameTeamMember> GameTeamMembers
		{
			get
			{
				return this.GetTable<GameTeamMember>();
			}
		}
		
		public System.Data.Linq.Table<LossFactor> LossFactors
		{
			get
			{
				return this.GetTable<LossFactor>();
			}
		}
		
		public System.Data.Linq.Table<Level> Levels
		{
			get
			{
				return this.GetTable<Level>();
			}
		}
		
		public System.Data.Linq.Table<WinFactor> WinFactors
		{
			get
			{
				return this.GetTable<WinFactor>();
			}
		}
		
		public System.Data.Linq.Table<ExperianceExchange> ExperianceExchanges
		{
			get
			{
				return this.GetTable<ExperianceExchange>();
			}
		}
		
		public System.Data.Linq.Table<StatsLeaderboard> StatsLeaderboards
		{
			get
			{
				return this.GetTable<StatsLeaderboard>();
			}
		}
		
		public System.Data.Linq.Table<ScoreQueue> ScoreQueues
		{
			get
			{
				return this.GetTable<ScoreQueue>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ASGSServiceUpdateASRankings")]
		public ISingleResult<ASGSServiceUpdateASRankingsResult> ASGSServiceUpdateASRankings([global::System.Data.Linq.Mapping.ParameterAttribute(Name="GameID", DbType="Int")] System.Nullable<int> gameID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DebugMode", DbType="Int")] System.Nullable<int> debugMode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), gameID, debugMode);
			return ((ISingleResult<ASGSServiceUpdateASRankingsResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GameChatLog")]
	public partial class GameChatLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GameChatLogIdentID;
		
		private int _GameID;
		
		private System.DateTime _GameChatTime;
		
		private string _GameChatSpeakerName;
		
		private string _GameChatTargetName;
		
		private string _GameChatText;
		
		private EntityRef<Game> _Game;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGameChatLogIdentIDChanging(int value);
    partial void OnGameChatLogIdentIDChanged();
    partial void OnGameIDChanging(int value);
    partial void OnGameIDChanged();
    partial void OnGameChatTimeChanging(System.DateTime value);
    partial void OnGameChatTimeChanged();
    partial void OnGameChatSpeakerNameChanging(string value);
    partial void OnGameChatSpeakerNameChanged();
    partial void OnGameChatTargetNameChanging(string value);
    partial void OnGameChatTargetNameChanged();
    partial void OnGameChatTextChanging(string value);
    partial void OnGameChatTextChanged();
    #endregion
		
		public GameChatLog()
		{
			this._Game = default(EntityRef<Game>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameChatLogIdentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GameChatLogIdentID
		{
			get
			{
				return this._GameChatLogIdentID;
			}
			set
			{
				if ((this._GameChatLogIdentID != value))
				{
					this.OnGameChatLogIdentIDChanging(value);
					this.SendPropertyChanging();
					this._GameChatLogIdentID = value;
					this.SendPropertyChanged("GameChatLogIdentID");
					this.OnGameChatLogIdentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameID", DbType="Int NOT NULL")]
		public int GameID
		{
			get
			{
				return this._GameID;
			}
			set
			{
				if ((this._GameID != value))
				{
					if (this._Game.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGameIDChanging(value);
					this.SendPropertyChanging();
					this._GameID = value;
					this.SendPropertyChanged("GameID");
					this.OnGameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameChatTime", DbType="DateTime NOT NULL")]
		public System.DateTime GameChatTime
		{
			get
			{
				return this._GameChatTime;
			}
			set
			{
				if ((this._GameChatTime != value))
				{
					this.OnGameChatTimeChanging(value);
					this.SendPropertyChanging();
					this._GameChatTime = value;
					this.SendPropertyChanged("GameChatTime");
					this.OnGameChatTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameChatSpeakerName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GameChatSpeakerName
		{
			get
			{
				return this._GameChatSpeakerName;
			}
			set
			{
				if ((this._GameChatSpeakerName != value))
				{
					this.OnGameChatSpeakerNameChanging(value);
					this.SendPropertyChanging();
					this._GameChatSpeakerName = value;
					this.SendPropertyChanged("GameChatSpeakerName");
					this.OnGameChatSpeakerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameChatTargetName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GameChatTargetName
		{
			get
			{
				return this._GameChatTargetName;
			}
			set
			{
				if ((this._GameChatTargetName != value))
				{
					this.OnGameChatTargetNameChanging(value);
					this.SendPropertyChanging();
					this._GameChatTargetName = value;
					this.SendPropertyChanged("GameChatTargetName");
					this.OnGameChatTargetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameChatText", DbType="VarChar(2064) NOT NULL", CanBeNull=false)]
		public string GameChatText
		{
			get
			{
				return this._GameChatText;
			}
			set
			{
				if ((this._GameChatText != value))
				{
					this.OnGameChatTextChanging(value);
					this.SendPropertyChanging();
					this._GameChatText = value;
					this.SendPropertyChanged("GameChatText");
					this.OnGameChatTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Game_GameChatLog", Storage="_Game", ThisKey="GameID", OtherKey="GameIdentID", IsForeignKey=true)]
		public Game Game
		{
			get
			{
				return this._Game.Entity;
			}
			set
			{
				Game previousValue = this._Game.Entity;
				if (((previousValue != value) 
							|| (this._Game.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Game.Entity = null;
						previousValue.GameChatLogs.Remove(this);
					}
					this._Game.Entity = value;
					if ((value != null))
					{
						value.GameChatLogs.Add(this);
						this._GameID = value.GameIdentID;
					}
					else
					{
						this._GameID = default(int);
					}
					this.SendPropertyChanged("Game");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GameEventType")]
	public partial class GameEventType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GameEventTypeID;
		
		private int _GameEventID;
		
		private string _GameEventCode;
		
		private string _GameEventDesc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGameEventTypeIDChanging(int value);
    partial void OnGameEventTypeIDChanged();
    partial void OnGameEventIDChanging(int value);
    partial void OnGameEventIDChanged();
    partial void OnGameEventCodeChanging(string value);
    partial void OnGameEventCodeChanged();
    partial void OnGameEventDescChanging(string value);
    partial void OnGameEventDescChanged();
    #endregion
		
		public GameEventType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameEventTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GameEventTypeID
		{
			get
			{
				return this._GameEventTypeID;
			}
			set
			{
				if ((this._GameEventTypeID != value))
				{
					this.OnGameEventTypeIDChanging(value);
					this.SendPropertyChanging();
					this._GameEventTypeID = value;
					this.SendPropertyChanged("GameEventTypeID");
					this.OnGameEventTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameEventID", DbType="Int NOT NULL")]
		public int GameEventID
		{
			get
			{
				return this._GameEventID;
			}
			set
			{
				if ((this._GameEventID != value))
				{
					this.OnGameEventIDChanging(value);
					this.SendPropertyChanging();
					this._GameEventID = value;
					this.SendPropertyChanged("GameEventID");
					this.OnGameEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameEventCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GameEventCode
		{
			get
			{
				return this._GameEventCode;
			}
			set
			{
				if ((this._GameEventCode != value))
				{
					this.OnGameEventCodeChanging(value);
					this.SendPropertyChanging();
					this._GameEventCode = value;
					this.SendPropertyChanged("GameEventCode");
					this.OnGameEventCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameEventDesc", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string GameEventDesc
		{
			get
			{
				return this._GameEventDesc;
			}
			set
			{
				if ((this._GameEventDesc != value))
				{
					this.OnGameEventDescChanging(value);
					this.SendPropertyChanging();
					this._GameEventDesc = value;
					this.SendPropertyChanged("GameEventDesc");
					this.OnGameEventDescChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GameServer")]
	public partial class GameServer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GameServerID;
		
		private string _GameServerName;
		
		private string _GameServerOwnerName;
		
		private EntitySet<GameServerIP> _GameServerIPs;
		
		private EntitySet<Game> _Games;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGameServerIDChanging(int value);
    partial void OnGameServerIDChanged();
    partial void OnGameServerNameChanging(string value);
    partial void OnGameServerNameChanged();
    partial void OnGameServerOwnerNameChanging(string value);
    partial void OnGameServerOwnerNameChanged();
    #endregion
		
		public GameServer()
		{
			this._GameServerIPs = new EntitySet<GameServerIP>(new Action<GameServerIP>(this.attach_GameServerIPs), new Action<GameServerIP>(this.detach_GameServerIPs));
			this._Games = new EntitySet<Game>(new Action<Game>(this.attach_Games), new Action<Game>(this.detach_Games));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameServerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GameServerID
		{
			get
			{
				return this._GameServerID;
			}
			set
			{
				if ((this._GameServerID != value))
				{
					this.OnGameServerIDChanging(value);
					this.SendPropertyChanging();
					this._GameServerID = value;
					this.SendPropertyChanged("GameServerID");
					this.OnGameServerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameServerName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string GameServerName
		{
			get
			{
				return this._GameServerName;
			}
			set
			{
				if ((this._GameServerName != value))
				{
					this.OnGameServerNameChanging(value);
					this.SendPropertyChanging();
					this._GameServerName = value;
					this.SendPropertyChanged("GameServerName");
					this.OnGameServerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameServerOwnerName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string GameServerOwnerName
		{
			get
			{
				return this._GameServerOwnerName;
			}
			set
			{
				if ((this._GameServerOwnerName != value))
				{
					this.OnGameServerOwnerNameChanging(value);
					this.SendPropertyChanging();
					this._GameServerOwnerName = value;
					this.SendPropertyChanged("GameServerOwnerName");
					this.OnGameServerOwnerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GameServer_GameServerIP", Storage="_GameServerIPs", ThisKey="GameServerID", OtherKey="GameServerID")]
		public EntitySet<GameServerIP> GameServerIPs
		{
			get
			{
				return this._GameServerIPs;
			}
			set
			{
				this._GameServerIPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GameServer_Game", Storage="_Games", ThisKey="GameServerID", OtherKey="GameServer")]
		public EntitySet<Game> Games
		{
			get
			{
				return this._Games;
			}
			set
			{
				this._Games.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GameServerIPs(GameServerIP entity)
		{
			this.SendPropertyChanging();
			entity.GameServer = this;
		}
		
		private void detach_GameServerIPs(GameServerIP entity)
		{
			this.SendPropertyChanging();
			entity.GameServer = null;
		}
		
		private void attach_Games(Game entity)
		{
			this.SendPropertyChanging();
			entity.GameServer1 = this;
		}
		
		private void detach_Games(Game entity)
		{
			this.SendPropertyChanging();
			entity.GameServer1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GameServerIP")]
	public partial class GameServerIP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GameServerIpID;
		
		private int _GameServerID;
		
		private string _IPAddress;
		
		private EntityRef<GameServer> _GameServer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGameServerIpIDChanging(int value);
    partial void OnGameServerIpIDChanged();
    partial void OnGameServerIDChanging(int value);
    partial void OnGameServerIDChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    #endregion
		
		public GameServerIP()
		{
			this._GameServer = default(EntityRef<GameServer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameServerIpID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GameServerIpID
		{
			get
			{
				return this._GameServerIpID;
			}
			set
			{
				if ((this._GameServerIpID != value))
				{
					this.OnGameServerIpIDChanging(value);
					this.SendPropertyChanging();
					this._GameServerIpID = value;
					this.SendPropertyChanged("GameServerIpID");
					this.OnGameServerIpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameServerID", DbType="Int NOT NULL")]
		public int GameServerID
		{
			get
			{
				return this._GameServerID;
			}
			set
			{
				if ((this._GameServerID != value))
				{
					if (this._GameServer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGameServerIDChanging(value);
					this.SendPropertyChanging();
					this._GameServerID = value;
					this.SendPropertyChanged("GameServerID");
					this.OnGameServerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GameServer_GameServerIP", Storage="_GameServer", ThisKey="GameServerID", OtherKey="GameServerID", IsForeignKey=true)]
		public GameServer GameServer
		{
			get
			{
				return this._GameServer.Entity;
			}
			set
			{
				GameServer previousValue = this._GameServer.Entity;
				if (((previousValue != value) 
							|| (this._GameServer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GameServer.Entity = null;
						previousValue.GameServerIPs.Remove(this);
					}
					this._GameServer.Entity = value;
					if ((value != null))
					{
						value.GameServerIPs.Add(this);
						this._GameServerID = value.GameServerID;
					}
					else
					{
						this._GameServerID = default(int);
					}
					this.SendPropertyChanged("GameServer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StatsFaction")]
	public partial class StatsFaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatsFactionId;
		
		private string _WinFactionName;
		
		private bool _WinStarbase;
		
		private bool _WinSupremacy;
		
		private bool _WinTactical;
		
		private bool _WinExpansion;
		
		private bool _WinShipyard;
		
		private string _LossFactionName;
		
		private bool _LossStarbase;
		
		private bool _LossSupremacy;
		
		private bool _LossTactical;
		
		private bool _LossExpansion;
		
		private bool _LossShipyard;
		
		private int _GamesPlayed;
		
		private double _HoursPlayed;
		
		private System.DateTime _DateModified;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatsFactionIdChanging(int value);
    partial void OnStatsFactionIdChanged();
    partial void OnWinFactionNameChanging(string value);
    partial void OnWinFactionNameChanged();
    partial void OnWinStarbaseChanging(bool value);
    partial void OnWinStarbaseChanged();
    partial void OnWinSupremacyChanging(bool value);
    partial void OnWinSupremacyChanged();
    partial void OnWinTacticalChanging(bool value);
    partial void OnWinTacticalChanged();
    partial void OnWinExpansionChanging(bool value);
    partial void OnWinExpansionChanged();
    partial void OnWinShipyardChanging(bool value);
    partial void OnWinShipyardChanged();
    partial void OnLossFactionNameChanging(string value);
    partial void OnLossFactionNameChanged();
    partial void OnLossStarbaseChanging(bool value);
    partial void OnLossStarbaseChanged();
    partial void OnLossSupremacyChanging(bool value);
    partial void OnLossSupremacyChanged();
    partial void OnLossTacticalChanging(bool value);
    partial void OnLossTacticalChanged();
    partial void OnLossExpansionChanging(bool value);
    partial void OnLossExpansionChanged();
    partial void OnLossShipyardChanging(bool value);
    partial void OnLossShipyardChanged();
    partial void OnGamesPlayedChanging(int value);
    partial void OnGamesPlayedChanged();
    partial void OnHoursPlayedChanging(double value);
    partial void OnHoursPlayedChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public StatsFaction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatsFactionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StatsFactionId
		{
			get
			{
				return this._StatsFactionId;
			}
			set
			{
				if ((this._StatsFactionId != value))
				{
					this.OnStatsFactionIdChanging(value);
					this.SendPropertyChanging();
					this._StatsFactionId = value;
					this.SendPropertyChanged("StatsFactionId");
					this.OnStatsFactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinFactionName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WinFactionName
		{
			get
			{
				return this._WinFactionName;
			}
			set
			{
				if ((this._WinFactionName != value))
				{
					this.OnWinFactionNameChanging(value);
					this.SendPropertyChanging();
					this._WinFactionName = value;
					this.SendPropertyChanged("WinFactionName");
					this.OnWinFactionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinStarbase", DbType="Bit NOT NULL")]
		public bool WinStarbase
		{
			get
			{
				return this._WinStarbase;
			}
			set
			{
				if ((this._WinStarbase != value))
				{
					this.OnWinStarbaseChanging(value);
					this.SendPropertyChanging();
					this._WinStarbase = value;
					this.SendPropertyChanged("WinStarbase");
					this.OnWinStarbaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinSupremacy", DbType="Bit NOT NULL")]
		public bool WinSupremacy
		{
			get
			{
				return this._WinSupremacy;
			}
			set
			{
				if ((this._WinSupremacy != value))
				{
					this.OnWinSupremacyChanging(value);
					this.SendPropertyChanging();
					this._WinSupremacy = value;
					this.SendPropertyChanged("WinSupremacy");
					this.OnWinSupremacyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinTactical", DbType="Bit NOT NULL")]
		public bool WinTactical
		{
			get
			{
				return this._WinTactical;
			}
			set
			{
				if ((this._WinTactical != value))
				{
					this.OnWinTacticalChanging(value);
					this.SendPropertyChanging();
					this._WinTactical = value;
					this.SendPropertyChanged("WinTactical");
					this.OnWinTacticalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinExpansion", DbType="Bit NOT NULL")]
		public bool WinExpansion
		{
			get
			{
				return this._WinExpansion;
			}
			set
			{
				if ((this._WinExpansion != value))
				{
					this.OnWinExpansionChanging(value);
					this.SendPropertyChanging();
					this._WinExpansion = value;
					this.SendPropertyChanged("WinExpansion");
					this.OnWinExpansionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinShipyard", DbType="Bit NOT NULL")]
		public bool WinShipyard
		{
			get
			{
				return this._WinShipyard;
			}
			set
			{
				if ((this._WinShipyard != value))
				{
					this.OnWinShipyardChanging(value);
					this.SendPropertyChanging();
					this._WinShipyard = value;
					this.SendPropertyChanged("WinShipyard");
					this.OnWinShipyardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LossFactionName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LossFactionName
		{
			get
			{
				return this._LossFactionName;
			}
			set
			{
				if ((this._LossFactionName != value))
				{
					this.OnLossFactionNameChanging(value);
					this.SendPropertyChanging();
					this._LossFactionName = value;
					this.SendPropertyChanged("LossFactionName");
					this.OnLossFactionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LossStarbase", DbType="Bit NOT NULL")]
		public bool LossStarbase
		{
			get
			{
				return this._LossStarbase;
			}
			set
			{
				if ((this._LossStarbase != value))
				{
					this.OnLossStarbaseChanging(value);
					this.SendPropertyChanging();
					this._LossStarbase = value;
					this.SendPropertyChanged("LossStarbase");
					this.OnLossStarbaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LossSupremacy", DbType="Bit NOT NULL")]
		public bool LossSupremacy
		{
			get
			{
				return this._LossSupremacy;
			}
			set
			{
				if ((this._LossSupremacy != value))
				{
					this.OnLossSupremacyChanging(value);
					this.SendPropertyChanging();
					this._LossSupremacy = value;
					this.SendPropertyChanged("LossSupremacy");
					this.OnLossSupremacyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LossTactical", DbType="Bit NOT NULL")]
		public bool LossTactical
		{
			get
			{
				return this._LossTactical;
			}
			set
			{
				if ((this._LossTactical != value))
				{
					this.OnLossTacticalChanging(value);
					this.SendPropertyChanging();
					this._LossTactical = value;
					this.SendPropertyChanged("LossTactical");
					this.OnLossTacticalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LossExpansion", DbType="Bit NOT NULL")]
		public bool LossExpansion
		{
			get
			{
				return this._LossExpansion;
			}
			set
			{
				if ((this._LossExpansion != value))
				{
					this.OnLossExpansionChanging(value);
					this.SendPropertyChanging();
					this._LossExpansion = value;
					this.SendPropertyChanged("LossExpansion");
					this.OnLossExpansionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LossShipyard", DbType="Bit NOT NULL")]
		public bool LossShipyard
		{
			get
			{
				return this._LossShipyard;
			}
			set
			{
				if ((this._LossShipyard != value))
				{
					this.OnLossShipyardChanging(value);
					this.SendPropertyChanging();
					this._LossShipyard = value;
					this.SendPropertyChanged("LossShipyard");
					this.OnLossShipyardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GamesPlayed", DbType="Int NOT NULL")]
		public int GamesPlayed
		{
			get
			{
				return this._GamesPlayed;
			}
			set
			{
				if ((this._GamesPlayed != value))
				{
					this.OnGamesPlayedChanging(value);
					this.SendPropertyChanging();
					this._GamesPlayed = value;
					this.SendPropertyChanged("GamesPlayed");
					this.OnGamesPlayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoursPlayed", DbType="Float NOT NULL")]
		public double HoursPlayed
		{
			get
			{
				return this._HoursPlayed;
			}
			set
			{
				if ((this._HoursPlayed != value))
				{
					this.OnHoursPlayedChanging(value);
					this.SendPropertyChanging();
					this._HoursPlayed = value;
					this.SendPropertyChanged("HoursPlayed");
					this.OnHoursPlayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StatsMetrics")]
	public partial class StatsMetric : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatsMetricsId;
		
		private int _TotalGamesLogged;
		
		private int _LastGameProcessed;
		
		private double _AveragePlayerRank;
		
		private double _AverageCommandRank;
		
		private System.DateTime _DateModified;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatsMetricsIdChanging(int value);
    partial void OnStatsMetricsIdChanged();
    partial void OnTotalGamesLoggedChanging(int value);
    partial void OnTotalGamesLoggedChanged();
    partial void OnLastGameProcessedChanging(int value);
    partial void OnLastGameProcessedChanged();
    partial void OnAveragePlayerRankChanging(double value);
    partial void OnAveragePlayerRankChanged();
    partial void OnAverageCommandRankChanging(double value);
    partial void OnAverageCommandRankChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public StatsMetric()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatsMetricsId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StatsMetricsId
		{
			get
			{
				return this._StatsMetricsId;
			}
			set
			{
				if ((this._StatsMetricsId != value))
				{
					this.OnStatsMetricsIdChanging(value);
					this.SendPropertyChanging();
					this._StatsMetricsId = value;
					this.SendPropertyChanged("StatsMetricsId");
					this.OnStatsMetricsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalGamesLogged", DbType="Int NOT NULL")]
		public int TotalGamesLogged
		{
			get
			{
				return this._TotalGamesLogged;
			}
			set
			{
				if ((this._TotalGamesLogged != value))
				{
					this.OnTotalGamesLoggedChanging(value);
					this.SendPropertyChanging();
					this._TotalGamesLogged = value;
					this.SendPropertyChanged("TotalGamesLogged");
					this.OnTotalGamesLoggedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastGameProcessed", DbType="Int NOT NULL")]
		public int LastGameProcessed
		{
			get
			{
				return this._LastGameProcessed;
			}
			set
			{
				if ((this._LastGameProcessed != value))
				{
					this.OnLastGameProcessedChanging(value);
					this.SendPropertyChanging();
					this._LastGameProcessed = value;
					this.SendPropertyChanged("LastGameProcessed");
					this.OnLastGameProcessedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AveragePlayerRank", DbType="Float NOT NULL")]
		public double AveragePlayerRank
		{
			get
			{
				return this._AveragePlayerRank;
			}
			set
			{
				if ((this._AveragePlayerRank != value))
				{
					this.OnAveragePlayerRankChanging(value);
					this.SendPropertyChanging();
					this._AveragePlayerRank = value;
					this.SendPropertyChanged("AveragePlayerRank");
					this.OnAveragePlayerRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AverageCommandRank", DbType="Float NOT NULL")]
		public double AverageCommandRank
		{
			get
			{
				return this._AverageCommandRank;
			}
			set
			{
				if ((this._AverageCommandRank != value))
				{
					this.OnAverageCommandRankChanging(value);
					this.SendPropertyChanging();
					this._AverageCommandRank = value;
					this.SendPropertyChanged("AverageCommandRank");
					this.OnAverageCommandRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Game")]
	public partial class Game : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GameIdentID;
		
		private int _GameID;
		
		private int _GameServer;
		
		private string _GameName;
		
		private string _GameCore;
		
		private string _GameMap;
		
		private bool _GameSquadGame;
		
		private bool _GameConquest;
		
		private bool _GameDeathMatch;
		
		private System.Nullable<int> _GameDeathmatchGoal;
		
		private bool _GameFriendlyFire;
		
		private System.Nullable<bool> _GameRevealMap;
		
		private bool _GameDevelopments;
		
		private bool _GameShipyards;
		
		private bool _GameDefections;
		
		private bool _GameInvulStations;
		
		private bool _GameStatsCount;
		
		private int _GameMaxImbalance;
		
		private double _GameStartingMoney;
		
		private double _GameTotalMoney;
		
		private int _GameResources;
		
		private System.DateTime _GameStartTime;
		
		private System.DateTime _GameEndTime;
		
		private EntitySet<GameChatLog> _GameChatLogs;
		
		private EntitySet<GameTeam> _GameTeams;
		
		private EntitySet<GameEvent> _GameEvents;
		
		private EntityRef<GameServer> _GameServer1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGameIdentIDChanging(int value);
    partial void OnGameIdentIDChanged();
    partial void OnGameIDChanging(int value);
    partial void OnGameIDChanged();
    partial void OnGameServerChanging(int value);
    partial void OnGameServerChanged();
    partial void OnGameNameChanging(string value);
    partial void OnGameNameChanged();
    partial void OnGameCoreChanging(string value);
    partial void OnGameCoreChanged();
    partial void OnGameMapChanging(string value);
    partial void OnGameMapChanged();
    partial void OnGameSquadGameChanging(bool value);
    partial void OnGameSquadGameChanged();
    partial void OnGameConquestChanging(bool value);
    partial void OnGameConquestChanged();
    partial void OnGameDeathMatchChanging(bool value);
    partial void OnGameDeathMatchChanged();
    partial void OnGameDeathmatchGoalChanging(System.Nullable<int> value);
    partial void OnGameDeathmatchGoalChanged();
    partial void OnGameFriendlyFireChanging(bool value);
    partial void OnGameFriendlyFireChanged();
    partial void OnGameRevealMapChanging(System.Nullable<bool> value);
    partial void OnGameRevealMapChanged();
    partial void OnGameDevelopmentsChanging(bool value);
    partial void OnGameDevelopmentsChanged();
    partial void OnGameShipyardsChanging(bool value);
    partial void OnGameShipyardsChanged();
    partial void OnGameDefectionsChanging(bool value);
    partial void OnGameDefectionsChanged();
    partial void OnGameInvulStationsChanging(bool value);
    partial void OnGameInvulStationsChanged();
    partial void OnGameStatsCountChanging(bool value);
    partial void OnGameStatsCountChanged();
    partial void OnGameMaxImbalanceChanging(int value);
    partial void OnGameMaxImbalanceChanged();
    partial void OnGameStartingMoneyChanging(double value);
    partial void OnGameStartingMoneyChanged();
    partial void OnGameTotalMoneyChanging(double value);
    partial void OnGameTotalMoneyChanged();
    partial void OnGameResourcesChanging(int value);
    partial void OnGameResourcesChanged();
    partial void OnGameStartTimeChanging(System.DateTime value);
    partial void OnGameStartTimeChanged();
    partial void OnGameEndTimeChanging(System.DateTime value);
    partial void OnGameEndTimeChanged();
    #endregion
		
		public Game()
		{
			this._GameChatLogs = new EntitySet<GameChatLog>(new Action<GameChatLog>(this.attach_GameChatLogs), new Action<GameChatLog>(this.detach_GameChatLogs));
			this._GameTeams = new EntitySet<GameTeam>(new Action<GameTeam>(this.attach_GameTeams), new Action<GameTeam>(this.detach_GameTeams));
			this._GameEvents = new EntitySet<GameEvent>(new Action<GameEvent>(this.attach_GameEvents), new Action<GameEvent>(this.detach_GameEvents));
			this._GameServer1 = default(EntityRef<GameServer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameIdentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GameIdentID
		{
			get
			{
				return this._GameIdentID;
			}
			set
			{
				if ((this._GameIdentID != value))
				{
					this.OnGameIdentIDChanging(value);
					this.SendPropertyChanging();
					this._GameIdentID = value;
					this.SendPropertyChanged("GameIdentID");
					this.OnGameIdentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameID", DbType="Int NOT NULL")]
		public int GameID
		{
			get
			{
				return this._GameID;
			}
			set
			{
				if ((this._GameID != value))
				{
					this.OnGameIDChanging(value);
					this.SendPropertyChanging();
					this._GameID = value;
					this.SendPropertyChanged("GameID");
					this.OnGameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameServer", DbType="Int NOT NULL")]
		public int GameServer
		{
			get
			{
				return this._GameServer;
			}
			set
			{
				if ((this._GameServer != value))
				{
					if (this._GameServer1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGameServerChanging(value);
					this.SendPropertyChanging();
					this._GameServer = value;
					this.SendPropertyChanged("GameServer");
					this.OnGameServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string GameName
		{
			get
			{
				return this._GameName;
			}
			set
			{
				if ((this._GameName != value))
				{
					this.OnGameNameChanging(value);
					this.SendPropertyChanging();
					this._GameName = value;
					this.SendPropertyChanged("GameName");
					this.OnGameNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameCore", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GameCore
		{
			get
			{
				return this._GameCore;
			}
			set
			{
				if ((this._GameCore != value))
				{
					this.OnGameCoreChanging(value);
					this.SendPropertyChanging();
					this._GameCore = value;
					this.SendPropertyChanged("GameCore");
					this.OnGameCoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameMap", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GameMap
		{
			get
			{
				return this._GameMap;
			}
			set
			{
				if ((this._GameMap != value))
				{
					this.OnGameMapChanging(value);
					this.SendPropertyChanging();
					this._GameMap = value;
					this.SendPropertyChanged("GameMap");
					this.OnGameMapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameSquadGame", DbType="Bit NOT NULL")]
		public bool GameSquadGame
		{
			get
			{
				return this._GameSquadGame;
			}
			set
			{
				if ((this._GameSquadGame != value))
				{
					this.OnGameSquadGameChanging(value);
					this.SendPropertyChanging();
					this._GameSquadGame = value;
					this.SendPropertyChanged("GameSquadGame");
					this.OnGameSquadGameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameConquest", DbType="Bit NOT NULL")]
		public bool GameConquest
		{
			get
			{
				return this._GameConquest;
			}
			set
			{
				if ((this._GameConquest != value))
				{
					this.OnGameConquestChanging(value);
					this.SendPropertyChanging();
					this._GameConquest = value;
					this.SendPropertyChanged("GameConquest");
					this.OnGameConquestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameDeathMatch", DbType="Bit NOT NULL")]
		public bool GameDeathMatch
		{
			get
			{
				return this._GameDeathMatch;
			}
			set
			{
				if ((this._GameDeathMatch != value))
				{
					this.OnGameDeathMatchChanging(value);
					this.SendPropertyChanging();
					this._GameDeathMatch = value;
					this.SendPropertyChanged("GameDeathMatch");
					this.OnGameDeathMatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameDeathmatchGoal", DbType="Int")]
		public System.Nullable<int> GameDeathmatchGoal
		{
			get
			{
				return this._GameDeathmatchGoal;
			}
			set
			{
				if ((this._GameDeathmatchGoal != value))
				{
					this.OnGameDeathmatchGoalChanging(value);
					this.SendPropertyChanging();
					this._GameDeathmatchGoal = value;
					this.SendPropertyChanged("GameDeathmatchGoal");
					this.OnGameDeathmatchGoalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameFriendlyFire", DbType="Bit NOT NULL")]
		public bool GameFriendlyFire
		{
			get
			{
				return this._GameFriendlyFire;
			}
			set
			{
				if ((this._GameFriendlyFire != value))
				{
					this.OnGameFriendlyFireChanging(value);
					this.SendPropertyChanging();
					this._GameFriendlyFire = value;
					this.SendPropertyChanged("GameFriendlyFire");
					this.OnGameFriendlyFireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameRevealMap", DbType="Bit")]
		public System.Nullable<bool> GameRevealMap
		{
			get
			{
				return this._GameRevealMap;
			}
			set
			{
				if ((this._GameRevealMap != value))
				{
					this.OnGameRevealMapChanging(value);
					this.SendPropertyChanging();
					this._GameRevealMap = value;
					this.SendPropertyChanged("GameRevealMap");
					this.OnGameRevealMapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameDevelopments", DbType="Bit NOT NULL")]
		public bool GameDevelopments
		{
			get
			{
				return this._GameDevelopments;
			}
			set
			{
				if ((this._GameDevelopments != value))
				{
					this.OnGameDevelopmentsChanging(value);
					this.SendPropertyChanging();
					this._GameDevelopments = value;
					this.SendPropertyChanged("GameDevelopments");
					this.OnGameDevelopmentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameShipyards", DbType="Bit NOT NULL")]
		public bool GameShipyards
		{
			get
			{
				return this._GameShipyards;
			}
			set
			{
				if ((this._GameShipyards != value))
				{
					this.OnGameShipyardsChanging(value);
					this.SendPropertyChanging();
					this._GameShipyards = value;
					this.SendPropertyChanged("GameShipyards");
					this.OnGameShipyardsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameDefections", DbType="Bit NOT NULL")]
		public bool GameDefections
		{
			get
			{
				return this._GameDefections;
			}
			set
			{
				if ((this._GameDefections != value))
				{
					this.OnGameDefectionsChanging(value);
					this.SendPropertyChanging();
					this._GameDefections = value;
					this.SendPropertyChanged("GameDefections");
					this.OnGameDefectionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameInvulStations", DbType="Bit NOT NULL")]
		public bool GameInvulStations
		{
			get
			{
				return this._GameInvulStations;
			}
			set
			{
				if ((this._GameInvulStations != value))
				{
					this.OnGameInvulStationsChanging(value);
					this.SendPropertyChanging();
					this._GameInvulStations = value;
					this.SendPropertyChanged("GameInvulStations");
					this.OnGameInvulStationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameStatsCount", DbType="Bit NOT NULL")]
		public bool GameStatsCount
		{
			get
			{
				return this._GameStatsCount;
			}
			set
			{
				if ((this._GameStatsCount != value))
				{
					this.OnGameStatsCountChanging(value);
					this.SendPropertyChanging();
					this._GameStatsCount = value;
					this.SendPropertyChanged("GameStatsCount");
					this.OnGameStatsCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameMaxImbalance", DbType="Int NOT NULL")]
		public int GameMaxImbalance
		{
			get
			{
				return this._GameMaxImbalance;
			}
			set
			{
				if ((this._GameMaxImbalance != value))
				{
					this.OnGameMaxImbalanceChanging(value);
					this.SendPropertyChanging();
					this._GameMaxImbalance = value;
					this.SendPropertyChanged("GameMaxImbalance");
					this.OnGameMaxImbalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameStartingMoney", DbType="Float NOT NULL")]
		public double GameStartingMoney
		{
			get
			{
				return this._GameStartingMoney;
			}
			set
			{
				if ((this._GameStartingMoney != value))
				{
					this.OnGameStartingMoneyChanging(value);
					this.SendPropertyChanging();
					this._GameStartingMoney = value;
					this.SendPropertyChanged("GameStartingMoney");
					this.OnGameStartingMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameTotalMoney", DbType="Float NOT NULL")]
		public double GameTotalMoney
		{
			get
			{
				return this._GameTotalMoney;
			}
			set
			{
				if ((this._GameTotalMoney != value))
				{
					this.OnGameTotalMoneyChanging(value);
					this.SendPropertyChanging();
					this._GameTotalMoney = value;
					this.SendPropertyChanged("GameTotalMoney");
					this.OnGameTotalMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameResources", DbType="Int NOT NULL")]
		public int GameResources
		{
			get
			{
				return this._GameResources;
			}
			set
			{
				if ((this._GameResources != value))
				{
					this.OnGameResourcesChanging(value);
					this.SendPropertyChanging();
					this._GameResources = value;
					this.SendPropertyChanged("GameResources");
					this.OnGameResourcesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameStartTime", DbType="DateTime NOT NULL")]
		public System.DateTime GameStartTime
		{
			get
			{
				return this._GameStartTime;
			}
			set
			{
				if ((this._GameStartTime != value))
				{
					this.OnGameStartTimeChanging(value);
					this.SendPropertyChanging();
					this._GameStartTime = value;
					this.SendPropertyChanged("GameStartTime");
					this.OnGameStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameEndTime", DbType="DateTime NOT NULL")]
		public System.DateTime GameEndTime
		{
			get
			{
				return this._GameEndTime;
			}
			set
			{
				if ((this._GameEndTime != value))
				{
					this.OnGameEndTimeChanging(value);
					this.SendPropertyChanging();
					this._GameEndTime = value;
					this.SendPropertyChanged("GameEndTime");
					this.OnGameEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Game_GameChatLog", Storage="_GameChatLogs", ThisKey="GameIdentID", OtherKey="GameID")]
		public EntitySet<GameChatLog> GameChatLogs
		{
			get
			{
				return this._GameChatLogs;
			}
			set
			{
				this._GameChatLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Game_GameTeam", Storage="_GameTeams", ThisKey="GameIdentID", OtherKey="GameID")]
		public EntitySet<GameTeam> GameTeams
		{
			get
			{
				return this._GameTeams;
			}
			set
			{
				this._GameTeams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Game_GameEvent", Storage="_GameEvents", ThisKey="GameIdentID", OtherKey="GameID")]
		public EntitySet<GameEvent> GameEvents
		{
			get
			{
				return this._GameEvents;
			}
			set
			{
				this._GameEvents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GameServer_Game", Storage="_GameServer1", ThisKey="GameServer", OtherKey="GameServerID", IsForeignKey=true)]
		public GameServer GameServer1
		{
			get
			{
				return this._GameServer1.Entity;
			}
			set
			{
				GameServer previousValue = this._GameServer1.Entity;
				if (((previousValue != value) 
							|| (this._GameServer1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GameServer1.Entity = null;
						previousValue.Games.Remove(this);
					}
					this._GameServer1.Entity = value;
					if ((value != null))
					{
						value.Games.Add(this);
						this._GameServer = value.GameServerID;
					}
					else
					{
						this._GameServer = default(int);
					}
					this.SendPropertyChanged("GameServer1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GameChatLogs(GameChatLog entity)
		{
			this.SendPropertyChanging();
			entity.Game = this;
		}
		
		private void detach_GameChatLogs(GameChatLog entity)
		{
			this.SendPropertyChanging();
			entity.Game = null;
		}
		
		private void attach_GameTeams(GameTeam entity)
		{
			this.SendPropertyChanging();
			entity.Game = this;
		}
		
		private void detach_GameTeams(GameTeam entity)
		{
			this.SendPropertyChanging();
			entity.Game = null;
		}
		
		private void attach_GameEvents(GameEvent entity)
		{
			this.SendPropertyChanging();
			entity.Game = this;
		}
		
		private void detach_GameEvents(GameEvent entity)
		{
			this.SendPropertyChanging();
			entity.Game = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GameTeam")]
	public partial class GameTeam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GameTeamIdentID;
		
		private int _GameTeamID;
		
		private int _GameID;
		
		private int _GameTeamNumber;
		
		private string _GameTeamName;
		
		private string _GameTeamCommander;
		
		private int _GameTeamCommanderLoginID;
		
		private string _GameTeamFaction;
		
		private bool _GameTeamStarbase;
		
		private bool _GameTeamSupremacy;
		
		private bool _GameTeamTactical;
		
		private bool _GameTeamExpansion;
		
		private bool _GameTeamShipyard;
		
		private bool _GameTeamWinner;
		
		private EntitySet<GameTeamMember> _GameTeamMembers;
		
		private EntityRef<Game> _Game;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGameTeamIdentIDChanging(int value);
    partial void OnGameTeamIdentIDChanged();
    partial void OnGameTeamIDChanging(int value);
    partial void OnGameTeamIDChanged();
    partial void OnGameIDChanging(int value);
    partial void OnGameIDChanged();
    partial void OnGameTeamNumberChanging(int value);
    partial void OnGameTeamNumberChanged();
    partial void OnGameTeamNameChanging(string value);
    partial void OnGameTeamNameChanged();
    partial void OnGameTeamCommanderChanging(string value);
    partial void OnGameTeamCommanderChanged();
    partial void OnGameTeamCommanderLoginIDChanging(int value);
    partial void OnGameTeamCommanderLoginIDChanged();
    partial void OnGameTeamFactionChanging(string value);
    partial void OnGameTeamFactionChanged();
    partial void OnGameTeamStarbaseChanging(bool value);
    partial void OnGameTeamStarbaseChanged();
    partial void OnGameTeamSupremacyChanging(bool value);
    partial void OnGameTeamSupremacyChanged();
    partial void OnGameTeamTacticalChanging(bool value);
    partial void OnGameTeamTacticalChanged();
    partial void OnGameTeamExpansionChanging(bool value);
    partial void OnGameTeamExpansionChanged();
    partial void OnGameTeamShipyardChanging(bool value);
    partial void OnGameTeamShipyardChanged();
    partial void OnGameTeamWinnerChanging(bool value);
    partial void OnGameTeamWinnerChanged();
    #endregion
		
		public GameTeam()
		{
			this._GameTeamMembers = new EntitySet<GameTeamMember>(new Action<GameTeamMember>(this.attach_GameTeamMembers), new Action<GameTeamMember>(this.detach_GameTeamMembers));
			this._Game = default(EntityRef<Game>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameTeamIdentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GameTeamIdentID
		{
			get
			{
				return this._GameTeamIdentID;
			}
			set
			{
				if ((this._GameTeamIdentID != value))
				{
					this.OnGameTeamIdentIDChanging(value);
					this.SendPropertyChanging();
					this._GameTeamIdentID = value;
					this.SendPropertyChanged("GameTeamIdentID");
					this.OnGameTeamIdentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameTeamID", DbType="Int NOT NULL")]
		public int GameTeamID
		{
			get
			{
				return this._GameTeamID;
			}
			set
			{
				if ((this._GameTeamID != value))
				{
					this.OnGameTeamIDChanging(value);
					this.SendPropertyChanging();
					this._GameTeamID = value;
					this.SendPropertyChanged("GameTeamID");
					this.OnGameTeamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameID", DbType="Int NOT NULL")]
		public int GameID
		{
			get
			{
				return this._GameID;
			}
			set
			{
				if ((this._GameID != value))
				{
					if (this._Game.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGameIDChanging(value);
					this.SendPropertyChanging();
					this._GameID = value;
					this.SendPropertyChanged("GameID");
					this.OnGameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameTeamNumber", DbType="Int NOT NULL")]
		public int GameTeamNumber
		{
			get
			{
				return this._GameTeamNumber;
			}
			set
			{
				if ((this._GameTeamNumber != value))
				{
					this.OnGameTeamNumberChanging(value);
					this.SendPropertyChanging();
					this._GameTeamNumber = value;
					this.SendPropertyChanged("GameTeamNumber");
					this.OnGameTeamNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameTeamName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GameTeamName
		{
			get
			{
				return this._GameTeamName;
			}
			set
			{
				if ((this._GameTeamName != value))
				{
					this.OnGameTeamNameChanging(value);
					this.SendPropertyChanging();
					this._GameTeamName = value;
					this.SendPropertyChanged("GameTeamName");
					this.OnGameTeamNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameTeamCommander", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GameTeamCommander
		{
			get
			{
				return this._GameTeamCommander;
			}
			set
			{
				if ((this._GameTeamCommander != value))
				{
					this.OnGameTeamCommanderChanging(value);
					this.SendPropertyChanging();
					this._GameTeamCommander = value;
					this.SendPropertyChanged("GameTeamCommander");
					this.OnGameTeamCommanderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameTeamCommanderLoginID", DbType="Int NOT NULL")]
		public int GameTeamCommanderLoginID
		{
			get
			{
				return this._GameTeamCommanderLoginID;
			}
			set
			{
				if ((this._GameTeamCommanderLoginID != value))
				{
					this.OnGameTeamCommanderLoginIDChanging(value);
					this.SendPropertyChanging();
					this._GameTeamCommanderLoginID = value;
					this.SendPropertyChanged("GameTeamCommanderLoginID");
					this.OnGameTeamCommanderLoginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameTeamFaction", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GameTeamFaction
		{
			get
			{
				return this._GameTeamFaction;
			}
			set
			{
				if ((this._GameTeamFaction != value))
				{
					this.OnGameTeamFactionChanging(value);
					this.SendPropertyChanging();
					this._GameTeamFaction = value;
					this.SendPropertyChanged("GameTeamFaction");
					this.OnGameTeamFactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameTeamStarbase", DbType="Bit NOT NULL")]
		public bool GameTeamStarbase
		{
			get
			{
				return this._GameTeamStarbase;
			}
			set
			{
				if ((this._GameTeamStarbase != value))
				{
					this.OnGameTeamStarbaseChanging(value);
					this.SendPropertyChanging();
					this._GameTeamStarbase = value;
					this.SendPropertyChanged("GameTeamStarbase");
					this.OnGameTeamStarbaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameTeamSupremacy", DbType="Bit NOT NULL")]
		public bool GameTeamSupremacy
		{
			get
			{
				return this._GameTeamSupremacy;
			}
			set
			{
				if ((this._GameTeamSupremacy != value))
				{
					this.OnGameTeamSupremacyChanging(value);
					this.SendPropertyChanging();
					this._GameTeamSupremacy = value;
					this.SendPropertyChanged("GameTeamSupremacy");
					this.OnGameTeamSupremacyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameTeamTactical", DbType="Bit NOT NULL")]
		public bool GameTeamTactical
		{
			get
			{
				return this._GameTeamTactical;
			}
			set
			{
				if ((this._GameTeamTactical != value))
				{
					this.OnGameTeamTacticalChanging(value);
					this.SendPropertyChanging();
					this._GameTeamTactical = value;
					this.SendPropertyChanged("GameTeamTactical");
					this.OnGameTeamTacticalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameTeamExpansion", DbType="Bit NOT NULL")]
		public bool GameTeamExpansion
		{
			get
			{
				return this._GameTeamExpansion;
			}
			set
			{
				if ((this._GameTeamExpansion != value))
				{
					this.OnGameTeamExpansionChanging(value);
					this.SendPropertyChanging();
					this._GameTeamExpansion = value;
					this.SendPropertyChanged("GameTeamExpansion");
					this.OnGameTeamExpansionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameTeamShipyard", DbType="Bit NOT NULL")]
		public bool GameTeamShipyard
		{
			get
			{
				return this._GameTeamShipyard;
			}
			set
			{
				if ((this._GameTeamShipyard != value))
				{
					this.OnGameTeamShipyardChanging(value);
					this.SendPropertyChanging();
					this._GameTeamShipyard = value;
					this.SendPropertyChanged("GameTeamShipyard");
					this.OnGameTeamShipyardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameTeamWinner", DbType="Bit NOT NULL")]
		public bool GameTeamWinner
		{
			get
			{
				return this._GameTeamWinner;
			}
			set
			{
				if ((this._GameTeamWinner != value))
				{
					this.OnGameTeamWinnerChanging(value);
					this.SendPropertyChanging();
					this._GameTeamWinner = value;
					this.SendPropertyChanged("GameTeamWinner");
					this.OnGameTeamWinnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GameTeam_GameTeamMember", Storage="_GameTeamMembers", ThisKey="GameTeamIdentID", OtherKey="GameTeamID")]
		public EntitySet<GameTeamMember> GameTeamMembers
		{
			get
			{
				return this._GameTeamMembers;
			}
			set
			{
				this._GameTeamMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Game_GameTeam", Storage="_Game", ThisKey="GameID", OtherKey="GameIdentID", IsForeignKey=true)]
		public Game Game
		{
			get
			{
				return this._Game.Entity;
			}
			set
			{
				Game previousValue = this._Game.Entity;
				if (((previousValue != value) 
							|| (this._Game.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Game.Entity = null;
						previousValue.GameTeams.Remove(this);
					}
					this._Game.Entity = value;
					if ((value != null))
					{
						value.GameTeams.Add(this);
						this._GameID = value.GameIdentID;
					}
					else
					{
						this._GameID = default(int);
					}
					this.SendPropertyChanged("Game");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GameTeamMembers(GameTeamMember entity)
		{
			this.SendPropertyChanging();
			entity.GameTeam = this;
		}
		
		private void detach_GameTeamMembers(GameTeamMember entity)
		{
			this.SendPropertyChanging();
			entity.GameTeam = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AS_GamePlayerAS")]
	public partial class AS_GamePlayerA
	{
		
		private int _GamePlayerASID;
		
		private System.Nullable<int> _GameID;
		
		private System.Nullable<int> _LoginID;
		
		private double _NewMu;
		
		private double _NewSigma;
		
		private double _NewCommandMu;
		
		private double _NewCommandSigma;
		
		private double _StackRatingChange;
		
		private int _Defected;
		
		private int _KillCount;
		
		private int _EjectCount;
		
		private int _DroneKillCount;
		
		private int _StationKillCount;
		
		private int _StationCaptureCount;
		
		public AS_GamePlayerA()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GamePlayerASID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int GamePlayerASID
		{
			get
			{
				return this._GamePlayerASID;
			}
			set
			{
				if ((this._GamePlayerASID != value))
				{
					this._GamePlayerASID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameID", DbType="Int")]
		public System.Nullable<int> GameID
		{
			get
			{
				return this._GameID;
			}
			set
			{
				if ((this._GameID != value))
				{
					this._GameID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", DbType="Int")]
		public System.Nullable<int> LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					this._LoginID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewMu", DbType="Float NOT NULL")]
		public double NewMu
		{
			get
			{
				return this._NewMu;
			}
			set
			{
				if ((this._NewMu != value))
				{
					this._NewMu = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewSigma", DbType="Float NOT NULL")]
		public double NewSigma
		{
			get
			{
				return this._NewSigma;
			}
			set
			{
				if ((this._NewSigma != value))
				{
					this._NewSigma = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCommandMu", DbType="Float NOT NULL")]
		public double NewCommandMu
		{
			get
			{
				return this._NewCommandMu;
			}
			set
			{
				if ((this._NewCommandMu != value))
				{
					this._NewCommandMu = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCommandSigma", DbType="Float NOT NULL")]
		public double NewCommandSigma
		{
			get
			{
				return this._NewCommandSigma;
			}
			set
			{
				if ((this._NewCommandSigma != value))
				{
					this._NewCommandSigma = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StackRatingChange", DbType="Float NOT NULL")]
		public double StackRatingChange
		{
			get
			{
				return this._StackRatingChange;
			}
			set
			{
				if ((this._StackRatingChange != value))
				{
					this._StackRatingChange = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Defected", DbType="Int NOT NULL")]
		public int Defected
		{
			get
			{
				return this._Defected;
			}
			set
			{
				if ((this._Defected != value))
				{
					this._Defected = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KillCount", DbType="Int NOT NULL")]
		public int KillCount
		{
			get
			{
				return this._KillCount;
			}
			set
			{
				if ((this._KillCount != value))
				{
					this._KillCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EjectCount", DbType="Int NOT NULL")]
		public int EjectCount
		{
			get
			{
				return this._EjectCount;
			}
			set
			{
				if ((this._EjectCount != value))
				{
					this._EjectCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DroneKillCount", DbType="Int NOT NULL")]
		public int DroneKillCount
		{
			get
			{
				return this._DroneKillCount;
			}
			set
			{
				if ((this._DroneKillCount != value))
				{
					this._DroneKillCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationKillCount", DbType="Int NOT NULL")]
		public int StationKillCount
		{
			get
			{
				return this._StationKillCount;
			}
			set
			{
				if ((this._StationKillCount != value))
				{
					this._StationKillCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationCaptureCount", DbType="Int NOT NULL")]
		public int StationCaptureCount
		{
			get
			{
				return this._StationCaptureCount;
			}
			set
			{
				if ((this._StationCaptureCount != value))
				{
					this._StationCaptureCount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GameEvent")]
	public partial class GameEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GameID;
		
		private int _GameEventID;
		
		private int _EventID;
		
		private System.DateTime _GameEventTime;
		
		private int _GameEventPerformerID;
		
		private int _GameEventPerformerLoginID;
		
		private string _GameEventPerformerName;
		
		private int _GameEventTargetID;
		
		private int _GameEventTargetLoginID;
		
		private string _GameEventTargetName;
		
		private int _GameEventIndirectID;
		
		private string _GameEventIndirectName;
		
		private EntityRef<Game> _Game;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGameIDChanging(int value);
    partial void OnGameIDChanged();
    partial void OnGameEventIDChanging(int value);
    partial void OnGameEventIDChanged();
    partial void OnEventIDChanging(int value);
    partial void OnEventIDChanged();
    partial void OnGameEventTimeChanging(System.DateTime value);
    partial void OnGameEventTimeChanged();
    partial void OnGameEventPerformerIDChanging(int value);
    partial void OnGameEventPerformerIDChanged();
    partial void OnGameEventPerformerLoginIDChanging(int value);
    partial void OnGameEventPerformerLoginIDChanged();
    partial void OnGameEventPerformerNameChanging(string value);
    partial void OnGameEventPerformerNameChanged();
    partial void OnGameEventTargetIDChanging(int value);
    partial void OnGameEventTargetIDChanged();
    partial void OnGameEventTargetLoginIDChanging(int value);
    partial void OnGameEventTargetLoginIDChanged();
    partial void OnGameEventTargetNameChanging(string value);
    partial void OnGameEventTargetNameChanged();
    partial void OnGameEventIndirectIDChanging(int value);
    partial void OnGameEventIndirectIDChanged();
    partial void OnGameEventIndirectNameChanging(string value);
    partial void OnGameEventIndirectNameChanged();
    #endregion
		
		public GameEvent()
		{
			this._Game = default(EntityRef<Game>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameID", DbType="Int NOT NULL")]
		public int GameID
		{
			get
			{
				return this._GameID;
			}
			set
			{
				if ((this._GameID != value))
				{
					if (this._Game.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGameIDChanging(value);
					this.SendPropertyChanging();
					this._GameID = value;
					this.SendPropertyChanged("GameID");
					this.OnGameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameEventID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GameEventID
		{
			get
			{
				return this._GameEventID;
			}
			set
			{
				if ((this._GameEventID != value))
				{
					this.OnGameEventIDChanging(value);
					this.SendPropertyChanging();
					this._GameEventID = value;
					this.SendPropertyChanged("GameEventID");
					this.OnGameEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="Int NOT NULL")]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameEventTime", DbType="DateTime NOT NULL")]
		public System.DateTime GameEventTime
		{
			get
			{
				return this._GameEventTime;
			}
			set
			{
				if ((this._GameEventTime != value))
				{
					this.OnGameEventTimeChanging(value);
					this.SendPropertyChanging();
					this._GameEventTime = value;
					this.SendPropertyChanged("GameEventTime");
					this.OnGameEventTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameEventPerformerID", DbType="Int NOT NULL")]
		public int GameEventPerformerID
		{
			get
			{
				return this._GameEventPerformerID;
			}
			set
			{
				if ((this._GameEventPerformerID != value))
				{
					this.OnGameEventPerformerIDChanging(value);
					this.SendPropertyChanging();
					this._GameEventPerformerID = value;
					this.SendPropertyChanged("GameEventPerformerID");
					this.OnGameEventPerformerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameEventPerformerLoginID", DbType="Int NOT NULL")]
		public int GameEventPerformerLoginID
		{
			get
			{
				return this._GameEventPerformerLoginID;
			}
			set
			{
				if ((this._GameEventPerformerLoginID != value))
				{
					this.OnGameEventPerformerLoginIDChanging(value);
					this.SendPropertyChanging();
					this._GameEventPerformerLoginID = value;
					this.SendPropertyChanged("GameEventPerformerLoginID");
					this.OnGameEventPerformerLoginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameEventPerformerName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string GameEventPerformerName
		{
			get
			{
				return this._GameEventPerformerName;
			}
			set
			{
				if ((this._GameEventPerformerName != value))
				{
					this.OnGameEventPerformerNameChanging(value);
					this.SendPropertyChanging();
					this._GameEventPerformerName = value;
					this.SendPropertyChanged("GameEventPerformerName");
					this.OnGameEventPerformerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameEventTargetID", DbType="Int NOT NULL")]
		public int GameEventTargetID
		{
			get
			{
				return this._GameEventTargetID;
			}
			set
			{
				if ((this._GameEventTargetID != value))
				{
					this.OnGameEventTargetIDChanging(value);
					this.SendPropertyChanging();
					this._GameEventTargetID = value;
					this.SendPropertyChanged("GameEventTargetID");
					this.OnGameEventTargetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameEventTargetLoginID", DbType="Int NOT NULL")]
		public int GameEventTargetLoginID
		{
			get
			{
				return this._GameEventTargetLoginID;
			}
			set
			{
				if ((this._GameEventTargetLoginID != value))
				{
					this.OnGameEventTargetLoginIDChanging(value);
					this.SendPropertyChanging();
					this._GameEventTargetLoginID = value;
					this.SendPropertyChanged("GameEventTargetLoginID");
					this.OnGameEventTargetLoginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameEventTargetName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string GameEventTargetName
		{
			get
			{
				return this._GameEventTargetName;
			}
			set
			{
				if ((this._GameEventTargetName != value))
				{
					this.OnGameEventTargetNameChanging(value);
					this.SendPropertyChanging();
					this._GameEventTargetName = value;
					this.SendPropertyChanged("GameEventTargetName");
					this.OnGameEventTargetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameEventIndirectID", DbType="Int NOT NULL")]
		public int GameEventIndirectID
		{
			get
			{
				return this._GameEventIndirectID;
			}
			set
			{
				if ((this._GameEventIndirectID != value))
				{
					this.OnGameEventIndirectIDChanging(value);
					this.SendPropertyChanging();
					this._GameEventIndirectID = value;
					this.SendPropertyChanged("GameEventIndirectID");
					this.OnGameEventIndirectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameEventIndirectName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string GameEventIndirectName
		{
			get
			{
				return this._GameEventIndirectName;
			}
			set
			{
				if ((this._GameEventIndirectName != value))
				{
					this.OnGameEventIndirectNameChanging(value);
					this.SendPropertyChanging();
					this._GameEventIndirectName = value;
					this.SendPropertyChanged("GameEventIndirectName");
					this.OnGameEventIndirectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Game_GameEvent", Storage="_Game", ThisKey="GameID", OtherKey="GameIdentID", IsForeignKey=true)]
		public Game Game
		{
			get
			{
				return this._Game.Entity;
			}
			set
			{
				Game previousValue = this._Game.Entity;
				if (((previousValue != value) 
							|| (this._Game.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Game.Entity = null;
						previousValue.GameEvents.Remove(this);
					}
					this._Game.Entity = value;
					if ((value != null))
					{
						value.GameEvents.Add(this);
						this._GameID = value.GameIdentID;
					}
					else
					{
						this._GameID = default(int);
					}
					this.SendPropertyChanged("Game");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GameTeamMember")]
	public partial class GameTeamMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GameTeamMemberIdentID;
		
		private int _GameTeamID;
		
		private string _GameTeamMemberCallsign;
		
		private int _GameTeamMemberDuration;
		
		private int _GameTeamMemberLoginID;
		
		private int _Score;
		
		private EntityRef<GameTeam> _GameTeam;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGameTeamMemberIdentIDChanging(int value);
    partial void OnGameTeamMemberIdentIDChanged();
    partial void OnGameTeamIDChanging(int value);
    partial void OnGameTeamIDChanged();
    partial void OnGameTeamMemberCallsignChanging(string value);
    partial void OnGameTeamMemberCallsignChanged();
    partial void OnGameTeamMemberDurationChanging(int value);
    partial void OnGameTeamMemberDurationChanged();
    partial void OnGameTeamMemberLoginIDChanging(int value);
    partial void OnGameTeamMemberLoginIDChanged();
    partial void OnScoreChanging(int value);
    partial void OnScoreChanged();
    #endregion
		
		public GameTeamMember()
		{
			this._GameTeam = default(EntityRef<GameTeam>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameTeamMemberIdentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GameTeamMemberIdentID
		{
			get
			{
				return this._GameTeamMemberIdentID;
			}
			set
			{
				if ((this._GameTeamMemberIdentID != value))
				{
					this.OnGameTeamMemberIdentIDChanging(value);
					this.SendPropertyChanging();
					this._GameTeamMemberIdentID = value;
					this.SendPropertyChanged("GameTeamMemberIdentID");
					this.OnGameTeamMemberIdentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameTeamID", DbType="Int NOT NULL")]
		public int GameTeamID
		{
			get
			{
				return this._GameTeamID;
			}
			set
			{
				if ((this._GameTeamID != value))
				{
					if (this._GameTeam.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGameTeamIDChanging(value);
					this.SendPropertyChanging();
					this._GameTeamID = value;
					this.SendPropertyChanged("GameTeamID");
					this.OnGameTeamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameTeamMemberCallsign", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GameTeamMemberCallsign
		{
			get
			{
				return this._GameTeamMemberCallsign;
			}
			set
			{
				if ((this._GameTeamMemberCallsign != value))
				{
					this.OnGameTeamMemberCallsignChanging(value);
					this.SendPropertyChanging();
					this._GameTeamMemberCallsign = value;
					this.SendPropertyChanged("GameTeamMemberCallsign");
					this.OnGameTeamMemberCallsignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameTeamMemberDuration", DbType="Int NOT NULL")]
		public int GameTeamMemberDuration
		{
			get
			{
				return this._GameTeamMemberDuration;
			}
			set
			{
				if ((this._GameTeamMemberDuration != value))
				{
					this.OnGameTeamMemberDurationChanging(value);
					this.SendPropertyChanging();
					this._GameTeamMemberDuration = value;
					this.SendPropertyChanged("GameTeamMemberDuration");
					this.OnGameTeamMemberDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameTeamMemberLoginID", DbType="Int NOT NULL")]
		public int GameTeamMemberLoginID
		{
			get
			{
				return this._GameTeamMemberLoginID;
			}
			set
			{
				if ((this._GameTeamMemberLoginID != value))
				{
					this.OnGameTeamMemberLoginIDChanging(value);
					this.SendPropertyChanging();
					this._GameTeamMemberLoginID = value;
					this.SendPropertyChanged("GameTeamMemberLoginID");
					this.OnGameTeamMemberLoginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Int NOT NULL")]
		public int Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GameTeam_GameTeamMember", Storage="_GameTeam", ThisKey="GameTeamID", OtherKey="GameTeamIdentID", IsForeignKey=true)]
		public GameTeam GameTeam
		{
			get
			{
				return this._GameTeam.Entity;
			}
			set
			{
				GameTeam previousValue = this._GameTeam.Entity;
				if (((previousValue != value) 
							|| (this._GameTeam.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GameTeam.Entity = null;
						previousValue.GameTeamMembers.Remove(this);
					}
					this._GameTeam.Entity = value;
					if ((value != null))
					{
						value.GameTeamMembers.Add(this);
						this._GameTeamID = value.GameTeamIdentID;
					}
					else
					{
						this._GameTeamID = default(int);
					}
					this.SendPropertyChanged("GameTeam");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LossFactor")]
	public partial class LossFactor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _MinLevel;
		
		private System.Nullable<int> _MaxLevel;
		
		private System.Nullable<int> _Factor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMinLevelChanging(System.Nullable<int> value);
    partial void OnMinLevelChanged();
    partial void OnMaxLevelChanging(System.Nullable<int> value);
    partial void OnMaxLevelChanged();
    partial void OnFactorChanging(System.Nullable<int> value);
    partial void OnFactorChanged();
    #endregion
		
		public LossFactor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinLevel", DbType="Int")]
		public System.Nullable<int> MinLevel
		{
			get
			{
				return this._MinLevel;
			}
			set
			{
				if ((this._MinLevel != value))
				{
					this.OnMinLevelChanging(value);
					this.SendPropertyChanging();
					this._MinLevel = value;
					this.SendPropertyChanged("MinLevel");
					this.OnMinLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxLevel", DbType="Int")]
		public System.Nullable<int> MaxLevel
		{
			get
			{
				return this._MaxLevel;
			}
			set
			{
				if ((this._MaxLevel != value))
				{
					this.OnMaxLevelChanging(value);
					this.SendPropertyChanging();
					this._MaxLevel = value;
					this.SendPropertyChanged("MaxLevel");
					this.OnMaxLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Factor", DbType="Int")]
		public System.Nullable<int> Factor
		{
			get
			{
				return this._Factor;
			}
			set
			{
				if ((this._Factor != value))
				{
					this.OnFactorChanging(value);
					this.SendPropertyChanging();
					this._Factor = value;
					this.SendPropertyChanged("Factor");
					this.OnFactorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Level]")]
	public partial class Level
	{
		
		private int _ID;
		
		private int _Level1;
		
		private int _MinXP;
		
		private int _MaxXP;
		
		private string _ImageUrl;
		
		private string _Caption;
		
		public Level()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level1", DbType="Int NOT NULL")]
		public int Level1
		{
			get
			{
				return this._Level1;
			}
			set
			{
				if ((this._Level1 != value))
				{
					this._Level1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinXP", DbType="Int NOT NULL")]
		public int MinXP
		{
			get
			{
				return this._MinXP;
			}
			set
			{
				if ((this._MinXP != value))
				{
					this._MinXP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxXP", DbType="Int NOT NULL")]
		public int MaxXP
		{
			get
			{
				return this._MaxXP;
			}
			set
			{
				if ((this._MaxXP != value))
				{
					this._MaxXP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="NVarChar(255)")]
		public string ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this._ImageUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caption", DbType="NVarChar(50)")]
		public string Caption
		{
			get
			{
				return this._Caption;
			}
			set
			{
				if ((this._Caption != value))
				{
					this._Caption = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WinFactor")]
	public partial class WinFactor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MinLevel;
		
		private int _MaxLevel;
		
		private int _Factor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMinLevelChanging(int value);
    partial void OnMinLevelChanged();
    partial void OnMaxLevelChanging(int value);
    partial void OnMaxLevelChanged();
    partial void OnFactorChanging(int value);
    partial void OnFactorChanged();
    #endregion
		
		public WinFactor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinLevel", DbType="Int NOT NULL")]
		public int MinLevel
		{
			get
			{
				return this._MinLevel;
			}
			set
			{
				if ((this._MinLevel != value))
				{
					this.OnMinLevelChanging(value);
					this.SendPropertyChanging();
					this._MinLevel = value;
					this.SendPropertyChanged("MinLevel");
					this.OnMinLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxLevel", DbType="Int NOT NULL")]
		public int MaxLevel
		{
			get
			{
				return this._MaxLevel;
			}
			set
			{
				if ((this._MaxLevel != value))
				{
					this.OnMaxLevelChanging(value);
					this.SendPropertyChanging();
					this._MaxLevel = value;
					this.SendPropertyChanged("MaxLevel");
					this.OnMaxLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Factor", DbType="Int NOT NULL")]
		public int Factor
		{
			get
			{
				return this._Factor;
			}
			set
			{
				if ((this._Factor != value))
				{
					this.OnFactorChanging(value);
					this.SendPropertyChanging();
					this._Factor = value;
					this.SendPropertyChanged("Factor");
					this.OnFactorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExperianceExchange")]
	public partial class ExperianceExchange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _LevelDiffMin;
		
		private int _LevelDiffMax;
		
		private int _HigherWin;
		
		private int _HigherLoss;
		
		private int _LowerWin;
		
		private int _LowerLoss;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLevelDiffMinChanging(int value);
    partial void OnLevelDiffMinChanged();
    partial void OnLevelDiffMaxChanging(int value);
    partial void OnLevelDiffMaxChanged();
    partial void OnHigherWinChanging(int value);
    partial void OnHigherWinChanged();
    partial void OnHigherLossChanging(int value);
    partial void OnHigherLossChanged();
    partial void OnLowerWinChanging(int value);
    partial void OnLowerWinChanged();
    partial void OnLowerLossChanging(int value);
    partial void OnLowerLossChanged();
    #endregion
		
		public ExperianceExchange()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelDiffMin", DbType="Int NOT NULL")]
		public int LevelDiffMin
		{
			get
			{
				return this._LevelDiffMin;
			}
			set
			{
				if ((this._LevelDiffMin != value))
				{
					this.OnLevelDiffMinChanging(value);
					this.SendPropertyChanging();
					this._LevelDiffMin = value;
					this.SendPropertyChanged("LevelDiffMin");
					this.OnLevelDiffMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelDiffMax", DbType="Int NOT NULL")]
		public int LevelDiffMax
		{
			get
			{
				return this._LevelDiffMax;
			}
			set
			{
				if ((this._LevelDiffMax != value))
				{
					this.OnLevelDiffMaxChanging(value);
					this.SendPropertyChanging();
					this._LevelDiffMax = value;
					this.SendPropertyChanged("LevelDiffMax");
					this.OnLevelDiffMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HigherWin", DbType="Int NOT NULL")]
		public int HigherWin
		{
			get
			{
				return this._HigherWin;
			}
			set
			{
				if ((this._HigherWin != value))
				{
					this.OnHigherWinChanging(value);
					this.SendPropertyChanging();
					this._HigherWin = value;
					this.SendPropertyChanged("HigherWin");
					this.OnHigherWinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HigherLoss", DbType="Int NOT NULL")]
		public int HigherLoss
		{
			get
			{
				return this._HigherLoss;
			}
			set
			{
				if ((this._HigherLoss != value))
				{
					this.OnHigherLossChanging(value);
					this.SendPropertyChanging();
					this._HigherLoss = value;
					this.SendPropertyChanged("HigherLoss");
					this.OnHigherLossChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LowerWin", DbType="Int NOT NULL")]
		public int LowerWin
		{
			get
			{
				return this._LowerWin;
			}
			set
			{
				if ((this._LowerWin != value))
				{
					this.OnLowerWinChanging(value);
					this.SendPropertyChanging();
					this._LowerWin = value;
					this.SendPropertyChanged("LowerWin");
					this.OnLowerWinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LowerLoss", DbType="Int NOT NULL")]
		public int LowerLoss
		{
			get
			{
				return this._LowerLoss;
			}
			set
			{
				if ((this._LowerLoss != value))
				{
					this.OnLowerLossChanging(value);
					this.SendPropertyChanging();
					this._LowerLoss = value;
					this.SendPropertyChanged("LowerLoss");
					this.OnLowerLossChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StatsLeaderboard")]
	public partial class StatsLeaderboard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatsLeaderboardId;
		
		private string _LoginUsername;
		
		private int _LoginID;
		
		private double _Mu;
		
		private double _Sigma;
		
		private double _Rank;
		
		private int _Wins;
		
		private int _Losses;
		
		private int _Draws;
		
		private int _Defects;
		
		private double _StackRating;
		
		private double _CommandMu;
		
		private double _CommandSigma;
		
		private double _CommandRank;
		
		private int _CommandWins;
		
		private int _CommandLosses;
		
		private int _CommandDraws;
		
		private int _Kills;
		
		private int _Ejects;
		
		private int _DroneKills;
		
		private int _StationKills;
		
		private int _StationCaptures;
		
		private double _HoursPlayed;
		
		private System.DateTime _DateModified;
		
		private int _Xp;
		
		private int _PRank;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatsLeaderboardIdChanging(int value);
    partial void OnStatsLeaderboardIdChanged();
    partial void OnLoginUsernameChanging(string value);
    partial void OnLoginUsernameChanged();
    partial void OnLoginIDChanging(int value);
    partial void OnLoginIDChanged();
    partial void OnMuChanging(double value);
    partial void OnMuChanged();
    partial void OnSigmaChanging(double value);
    partial void OnSigmaChanged();
    partial void OnRankChanging(double value);
    partial void OnRankChanged();
    partial void OnWinsChanging(int value);
    partial void OnWinsChanged();
    partial void OnLossesChanging(int value);
    partial void OnLossesChanged();
    partial void OnDrawsChanging(int value);
    partial void OnDrawsChanged();
    partial void OnDefectsChanging(int value);
    partial void OnDefectsChanged();
    partial void OnStackRatingChanging(double value);
    partial void OnStackRatingChanged();
    partial void OnCommandMuChanging(double value);
    partial void OnCommandMuChanged();
    partial void OnCommandSigmaChanging(double value);
    partial void OnCommandSigmaChanged();
    partial void OnCommandRankChanging(double value);
    partial void OnCommandRankChanged();
    partial void OnCommandWinsChanging(int value);
    partial void OnCommandWinsChanged();
    partial void OnCommandLossesChanging(int value);
    partial void OnCommandLossesChanged();
    partial void OnCommandDrawsChanging(int value);
    partial void OnCommandDrawsChanged();
    partial void OnKillsChanging(int value);
    partial void OnKillsChanged();
    partial void OnEjectsChanging(int value);
    partial void OnEjectsChanged();
    partial void OnDroneKillsChanging(int value);
    partial void OnDroneKillsChanged();
    partial void OnStationKillsChanging(int value);
    partial void OnStationKillsChanged();
    partial void OnStationCapturesChanging(int value);
    partial void OnStationCapturesChanged();
    partial void OnHoursPlayedChanging(double value);
    partial void OnHoursPlayedChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    partial void OnXpChanging(int value);
    partial void OnXpChanged();
    partial void OnPRankChanging(int value);
    partial void OnPRankChanged();
    #endregion
		
		public StatsLeaderboard()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatsLeaderboardId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StatsLeaderboardId
		{
			get
			{
				return this._StatsLeaderboardId;
			}
			set
			{
				if ((this._StatsLeaderboardId != value))
				{
					this.OnStatsLeaderboardIdChanging(value);
					this.SendPropertyChanging();
					this._StatsLeaderboardId = value;
					this.SendPropertyChanged("StatsLeaderboardId");
					this.OnStatsLeaderboardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginUsername", DbType="NVarChar(50)")]
		public string LoginUsername
		{
			get
			{
				return this._LoginUsername;
			}
			set
			{
				if ((this._LoginUsername != value))
				{
					this.OnLoginUsernameChanging(value);
					this.SendPropertyChanging();
					this._LoginUsername = value;
					this.SendPropertyChanged("LoginUsername");
					this.OnLoginUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", DbType="Int NOT NULL")]
		public int LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					this.OnLoginIDChanging(value);
					this.SendPropertyChanging();
					this._LoginID = value;
					this.SendPropertyChanged("LoginID");
					this.OnLoginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mu", DbType="Float NOT NULL")]
		public double Mu
		{
			get
			{
				return this._Mu;
			}
			set
			{
				if ((this._Mu != value))
				{
					this.OnMuChanging(value);
					this.SendPropertyChanging();
					this._Mu = value;
					this.SendPropertyChanged("Mu");
					this.OnMuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sigma", DbType="Float NOT NULL")]
		public double Sigma
		{
			get
			{
				return this._Sigma;
			}
			set
			{
				if ((this._Sigma != value))
				{
					this.OnSigmaChanging(value);
					this.SendPropertyChanging();
					this._Sigma = value;
					this.SendPropertyChanged("Sigma");
					this.OnSigmaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="Float NOT NULL")]
		public double Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wins", DbType="Int NOT NULL")]
		public int Wins
		{
			get
			{
				return this._Wins;
			}
			set
			{
				if ((this._Wins != value))
				{
					this.OnWinsChanging(value);
					this.SendPropertyChanging();
					this._Wins = value;
					this.SendPropertyChanged("Wins");
					this.OnWinsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Losses", DbType="Int NOT NULL")]
		public int Losses
		{
			get
			{
				return this._Losses;
			}
			set
			{
				if ((this._Losses != value))
				{
					this.OnLossesChanging(value);
					this.SendPropertyChanging();
					this._Losses = value;
					this.SendPropertyChanged("Losses");
					this.OnLossesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Draws", DbType="Int NOT NULL")]
		public int Draws
		{
			get
			{
				return this._Draws;
			}
			set
			{
				if ((this._Draws != value))
				{
					this.OnDrawsChanging(value);
					this.SendPropertyChanging();
					this._Draws = value;
					this.SendPropertyChanged("Draws");
					this.OnDrawsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Defects", DbType="Int NOT NULL")]
		public int Defects
		{
			get
			{
				return this._Defects;
			}
			set
			{
				if ((this._Defects != value))
				{
					this.OnDefectsChanging(value);
					this.SendPropertyChanging();
					this._Defects = value;
					this.SendPropertyChanged("Defects");
					this.OnDefectsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StackRating", DbType="Float NOT NULL")]
		public double StackRating
		{
			get
			{
				return this._StackRating;
			}
			set
			{
				if ((this._StackRating != value))
				{
					this.OnStackRatingChanging(value);
					this.SendPropertyChanging();
					this._StackRating = value;
					this.SendPropertyChanged("StackRating");
					this.OnStackRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandMu", DbType="Float NOT NULL")]
		public double CommandMu
		{
			get
			{
				return this._CommandMu;
			}
			set
			{
				if ((this._CommandMu != value))
				{
					this.OnCommandMuChanging(value);
					this.SendPropertyChanging();
					this._CommandMu = value;
					this.SendPropertyChanged("CommandMu");
					this.OnCommandMuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandSigma", DbType="Float NOT NULL")]
		public double CommandSigma
		{
			get
			{
				return this._CommandSigma;
			}
			set
			{
				if ((this._CommandSigma != value))
				{
					this.OnCommandSigmaChanging(value);
					this.SendPropertyChanging();
					this._CommandSigma = value;
					this.SendPropertyChanged("CommandSigma");
					this.OnCommandSigmaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandRank", DbType="Float NOT NULL")]
		public double CommandRank
		{
			get
			{
				return this._CommandRank;
			}
			set
			{
				if ((this._CommandRank != value))
				{
					this.OnCommandRankChanging(value);
					this.SendPropertyChanging();
					this._CommandRank = value;
					this.SendPropertyChanged("CommandRank");
					this.OnCommandRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandWins", DbType="Int NOT NULL")]
		public int CommandWins
		{
			get
			{
				return this._CommandWins;
			}
			set
			{
				if ((this._CommandWins != value))
				{
					this.OnCommandWinsChanging(value);
					this.SendPropertyChanging();
					this._CommandWins = value;
					this.SendPropertyChanged("CommandWins");
					this.OnCommandWinsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandLosses", DbType="Int NOT NULL")]
		public int CommandLosses
		{
			get
			{
				return this._CommandLosses;
			}
			set
			{
				if ((this._CommandLosses != value))
				{
					this.OnCommandLossesChanging(value);
					this.SendPropertyChanging();
					this._CommandLosses = value;
					this.SendPropertyChanged("CommandLosses");
					this.OnCommandLossesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandDraws", DbType="Int NOT NULL")]
		public int CommandDraws
		{
			get
			{
				return this._CommandDraws;
			}
			set
			{
				if ((this._CommandDraws != value))
				{
					this.OnCommandDrawsChanging(value);
					this.SendPropertyChanging();
					this._CommandDraws = value;
					this.SendPropertyChanged("CommandDraws");
					this.OnCommandDrawsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kills", DbType="Int NOT NULL")]
		public int Kills
		{
			get
			{
				return this._Kills;
			}
			set
			{
				if ((this._Kills != value))
				{
					this.OnKillsChanging(value);
					this.SendPropertyChanging();
					this._Kills = value;
					this.SendPropertyChanged("Kills");
					this.OnKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ejects", DbType="Int NOT NULL")]
		public int Ejects
		{
			get
			{
				return this._Ejects;
			}
			set
			{
				if ((this._Ejects != value))
				{
					this.OnEjectsChanging(value);
					this.SendPropertyChanging();
					this._Ejects = value;
					this.SendPropertyChanged("Ejects");
					this.OnEjectsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DroneKills", DbType="Int NOT NULL")]
		public int DroneKills
		{
			get
			{
				return this._DroneKills;
			}
			set
			{
				if ((this._DroneKills != value))
				{
					this.OnDroneKillsChanging(value);
					this.SendPropertyChanging();
					this._DroneKills = value;
					this.SendPropertyChanged("DroneKills");
					this.OnDroneKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationKills", DbType="Int NOT NULL")]
		public int StationKills
		{
			get
			{
				return this._StationKills;
			}
			set
			{
				if ((this._StationKills != value))
				{
					this.OnStationKillsChanging(value);
					this.SendPropertyChanging();
					this._StationKills = value;
					this.SendPropertyChanged("StationKills");
					this.OnStationKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationCaptures", DbType="Int NOT NULL")]
		public int StationCaptures
		{
			get
			{
				return this._StationCaptures;
			}
			set
			{
				if ((this._StationCaptures != value))
				{
					this.OnStationCapturesChanging(value);
					this.SendPropertyChanging();
					this._StationCaptures = value;
					this.SendPropertyChanged("StationCaptures");
					this.OnStationCapturesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoursPlayed", DbType="Float NOT NULL")]
		public double HoursPlayed
		{
			get
			{
				return this._HoursPlayed;
			}
			set
			{
				if ((this._HoursPlayed != value))
				{
					this.OnHoursPlayedChanging(value);
					this.SendPropertyChanging();
					this._HoursPlayed = value;
					this.SendPropertyChanged("HoursPlayed");
					this.OnHoursPlayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Xp", DbType="Int NOT NULL")]
		public int Xp
		{
			get
			{
				return this._Xp;
			}
			set
			{
				if ((this._Xp != value))
				{
					this.OnXpChanging(value);
					this.SendPropertyChanging();
					this._Xp = value;
					this.SendPropertyChanged("Xp");
					this.OnXpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRank", DbType="Int NOT NULL")]
		public int PRank
		{
			get
			{
				return this._PRank;
			}
			set
			{
				if ((this._PRank != value))
				{
					this.OnPRankChanging(value);
					this.SendPropertyChanging();
					this._PRank = value;
					this.SendPropertyChanged("PRank");
					this.OnPRankChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScoreQueue")]
	public partial class ScoreQueue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _LoginId;
		
		private System.Guid _GameGuid;
		
		private double _Score;
		
		private int _PilotBaseKills;
		
		private int _PilotBaseCaptures;
		
		private double _WarpsSpotted;
		
		private double _AsteroidsSpotted;
		
		private double _MinerKills;
		
		private double _BuilderKills;
		
		private double _LayerKills;
		
		private double _CarrierKills;
		
		private double _PlayerKills;
		
		private double _BaseKills;
		
		private double _BaseCaptures;
		
		private double _TechsRecovered;
		
		private int _Flags;
		
		private int _Artifacts;
		
		private int _Rescues;
		
		private int _Kills;
		
		private int _Assists;
		
		private int _Deaths;
		
		private int _Ejections;
		
		private System.Nullable<double> _CombatRating;
		
		private System.Nullable<bool> _Win;
		
		private System.Nullable<bool> _Lose;
		
		private System.Nullable<bool> _CommandWin;
		
		private System.Nullable<bool> _CommandLose;
		
		private System.Nullable<double> _TimePlayed;
		
		private System.Nullable<double> _TimeCommanded;
		
		private bool _CommandCredit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnLoginIdChanging(int value);
    partial void OnLoginIdChanged();
    partial void OnGameGuidChanging(System.Guid value);
    partial void OnGameGuidChanged();
    partial void OnScoreChanging(double value);
    partial void OnScoreChanged();
    partial void OnPilotBaseKillsChanging(int value);
    partial void OnPilotBaseKillsChanged();
    partial void OnPilotBaseCapturesChanging(int value);
    partial void OnPilotBaseCapturesChanged();
    partial void OnWarpsSpottedChanging(double value);
    partial void OnWarpsSpottedChanged();
    partial void OnAsteroidsSpottedChanging(double value);
    partial void OnAsteroidsSpottedChanged();
    partial void OnMinerKillsChanging(double value);
    partial void OnMinerKillsChanged();
    partial void OnBuilderKillsChanging(double value);
    partial void OnBuilderKillsChanged();
    partial void OnLayerKillsChanging(double value);
    partial void OnLayerKillsChanged();
    partial void OnCarrierKillsChanging(double value);
    partial void OnCarrierKillsChanged();
    partial void OnPlayerKillsChanging(double value);
    partial void OnPlayerKillsChanged();
    partial void OnBaseKillsChanging(double value);
    partial void OnBaseKillsChanged();
    partial void OnBaseCapturesChanging(double value);
    partial void OnBaseCapturesChanged();
    partial void OnTechsRecoveredChanging(double value);
    partial void OnTechsRecoveredChanged();
    partial void OnFlagsChanging(int value);
    partial void OnFlagsChanged();
    partial void OnArtifactsChanging(int value);
    partial void OnArtifactsChanged();
    partial void OnRescuesChanging(int value);
    partial void OnRescuesChanged();
    partial void OnKillsChanging(int value);
    partial void OnKillsChanged();
    partial void OnAssistsChanging(int value);
    partial void OnAssistsChanged();
    partial void OnDeathsChanging(int value);
    partial void OnDeathsChanged();
    partial void OnEjectionsChanging(int value);
    partial void OnEjectionsChanged();
    partial void OnCombatRatingChanging(System.Nullable<double> value);
    partial void OnCombatRatingChanged();
    partial void OnWinChanging(System.Nullable<bool> value);
    partial void OnWinChanged();
    partial void OnLoseChanging(System.Nullable<bool> value);
    partial void OnLoseChanged();
    partial void OnCommandWinChanging(System.Nullable<bool> value);
    partial void OnCommandWinChanged();
    partial void OnCommandLoseChanging(System.Nullable<bool> value);
    partial void OnCommandLoseChanged();
    partial void OnTimePlayedChanging(System.Nullable<double> value);
    partial void OnTimePlayedChanged();
    partial void OnTimeCommandedChanging(System.Nullable<double> value);
    partial void OnTimeCommandedChanged();
    partial void OnCommandCreditChanging(bool value);
    partial void OnCommandCreditChanged();
    #endregion
		
		public ScoreQueue()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginId", DbType="Int NOT NULL")]
		public int LoginId
		{
			get
			{
				return this._LoginId;
			}
			set
			{
				if ((this._LoginId != value))
				{
					this.OnLoginIdChanging(value);
					this.SendPropertyChanging();
					this._LoginId = value;
					this.SendPropertyChanged("LoginId");
					this.OnLoginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GameGuid
		{
			get
			{
				return this._GameGuid;
			}
			set
			{
				if ((this._GameGuid != value))
				{
					this.OnGameGuidChanging(value);
					this.SendPropertyChanging();
					this._GameGuid = value;
					this.SendPropertyChanged("GameGuid");
					this.OnGameGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Float NOT NULL")]
		public double Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PilotBaseKills", DbType="Int NOT NULL")]
		public int PilotBaseKills
		{
			get
			{
				return this._PilotBaseKills;
			}
			set
			{
				if ((this._PilotBaseKills != value))
				{
					this.OnPilotBaseKillsChanging(value);
					this.SendPropertyChanging();
					this._PilotBaseKills = value;
					this.SendPropertyChanged("PilotBaseKills");
					this.OnPilotBaseKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PilotBaseCaptures", DbType="Int NOT NULL")]
		public int PilotBaseCaptures
		{
			get
			{
				return this._PilotBaseCaptures;
			}
			set
			{
				if ((this._PilotBaseCaptures != value))
				{
					this.OnPilotBaseCapturesChanging(value);
					this.SendPropertyChanging();
					this._PilotBaseCaptures = value;
					this.SendPropertyChanged("PilotBaseCaptures");
					this.OnPilotBaseCapturesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarpsSpotted", DbType="Float NOT NULL")]
		public double WarpsSpotted
		{
			get
			{
				return this._WarpsSpotted;
			}
			set
			{
				if ((this._WarpsSpotted != value))
				{
					this.OnWarpsSpottedChanging(value);
					this.SendPropertyChanging();
					this._WarpsSpotted = value;
					this.SendPropertyChanged("WarpsSpotted");
					this.OnWarpsSpottedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AsteroidsSpotted", DbType="Float NOT NULL")]
		public double AsteroidsSpotted
		{
			get
			{
				return this._AsteroidsSpotted;
			}
			set
			{
				if ((this._AsteroidsSpotted != value))
				{
					this.OnAsteroidsSpottedChanging(value);
					this.SendPropertyChanging();
					this._AsteroidsSpotted = value;
					this.SendPropertyChanged("AsteroidsSpotted");
					this.OnAsteroidsSpottedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinerKills", DbType="Float NOT NULL")]
		public double MinerKills
		{
			get
			{
				return this._MinerKills;
			}
			set
			{
				if ((this._MinerKills != value))
				{
					this.OnMinerKillsChanging(value);
					this.SendPropertyChanging();
					this._MinerKills = value;
					this.SendPropertyChanged("MinerKills");
					this.OnMinerKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuilderKills", DbType="Float NOT NULL")]
		public double BuilderKills
		{
			get
			{
				return this._BuilderKills;
			}
			set
			{
				if ((this._BuilderKills != value))
				{
					this.OnBuilderKillsChanging(value);
					this.SendPropertyChanging();
					this._BuilderKills = value;
					this.SendPropertyChanged("BuilderKills");
					this.OnBuilderKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LayerKills", DbType="Float NOT NULL")]
		public double LayerKills
		{
			get
			{
				return this._LayerKills;
			}
			set
			{
				if ((this._LayerKills != value))
				{
					this.OnLayerKillsChanging(value);
					this.SendPropertyChanging();
					this._LayerKills = value;
					this.SendPropertyChanged("LayerKills");
					this.OnLayerKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierKills", DbType="Float NOT NULL")]
		public double CarrierKills
		{
			get
			{
				return this._CarrierKills;
			}
			set
			{
				if ((this._CarrierKills != value))
				{
					this.OnCarrierKillsChanging(value);
					this.SendPropertyChanging();
					this._CarrierKills = value;
					this.SendPropertyChanged("CarrierKills");
					this.OnCarrierKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerKills", DbType="Float NOT NULL")]
		public double PlayerKills
		{
			get
			{
				return this._PlayerKills;
			}
			set
			{
				if ((this._PlayerKills != value))
				{
					this.OnPlayerKillsChanging(value);
					this.SendPropertyChanging();
					this._PlayerKills = value;
					this.SendPropertyChanged("PlayerKills");
					this.OnPlayerKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseKills", DbType="Float NOT NULL")]
		public double BaseKills
		{
			get
			{
				return this._BaseKills;
			}
			set
			{
				if ((this._BaseKills != value))
				{
					this.OnBaseKillsChanging(value);
					this.SendPropertyChanging();
					this._BaseKills = value;
					this.SendPropertyChanged("BaseKills");
					this.OnBaseKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseCaptures", DbType="Float NOT NULL")]
		public double BaseCaptures
		{
			get
			{
				return this._BaseCaptures;
			}
			set
			{
				if ((this._BaseCaptures != value))
				{
					this.OnBaseCapturesChanging(value);
					this.SendPropertyChanging();
					this._BaseCaptures = value;
					this.SendPropertyChanged("BaseCaptures");
					this.OnBaseCapturesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechsRecovered", DbType="Float NOT NULL")]
		public double TechsRecovered
		{
			get
			{
				return this._TechsRecovered;
			}
			set
			{
				if ((this._TechsRecovered != value))
				{
					this.OnTechsRecoveredChanging(value);
					this.SendPropertyChanging();
					this._TechsRecovered = value;
					this.SendPropertyChanged("TechsRecovered");
					this.OnTechsRecoveredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flags", DbType="Int NOT NULL")]
		public int Flags
		{
			get
			{
				return this._Flags;
			}
			set
			{
				if ((this._Flags != value))
				{
					this.OnFlagsChanging(value);
					this.SendPropertyChanging();
					this._Flags = value;
					this.SendPropertyChanged("Flags");
					this.OnFlagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Artifacts", DbType="Int NOT NULL")]
		public int Artifacts
		{
			get
			{
				return this._Artifacts;
			}
			set
			{
				if ((this._Artifacts != value))
				{
					this.OnArtifactsChanging(value);
					this.SendPropertyChanging();
					this._Artifacts = value;
					this.SendPropertyChanged("Artifacts");
					this.OnArtifactsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rescues", DbType="Int NOT NULL")]
		public int Rescues
		{
			get
			{
				return this._Rescues;
			}
			set
			{
				if ((this._Rescues != value))
				{
					this.OnRescuesChanging(value);
					this.SendPropertyChanging();
					this._Rescues = value;
					this.SendPropertyChanged("Rescues");
					this.OnRescuesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kills", DbType="Int NOT NULL")]
		public int Kills
		{
			get
			{
				return this._Kills;
			}
			set
			{
				if ((this._Kills != value))
				{
					this.OnKillsChanging(value);
					this.SendPropertyChanging();
					this._Kills = value;
					this.SendPropertyChanged("Kills");
					this.OnKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assists", DbType="Int NOT NULL")]
		public int Assists
		{
			get
			{
				return this._Assists;
			}
			set
			{
				if ((this._Assists != value))
				{
					this.OnAssistsChanging(value);
					this.SendPropertyChanging();
					this._Assists = value;
					this.SendPropertyChanged("Assists");
					this.OnAssistsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deaths", DbType="Int NOT NULL")]
		public int Deaths
		{
			get
			{
				return this._Deaths;
			}
			set
			{
				if ((this._Deaths != value))
				{
					this.OnDeathsChanging(value);
					this.SendPropertyChanging();
					this._Deaths = value;
					this.SendPropertyChanged("Deaths");
					this.OnDeathsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ejections", DbType="Int NOT NULL")]
		public int Ejections
		{
			get
			{
				return this._Ejections;
			}
			set
			{
				if ((this._Ejections != value))
				{
					this.OnEjectionsChanging(value);
					this.SendPropertyChanging();
					this._Ejections = value;
					this.SendPropertyChanged("Ejections");
					this.OnEjectionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CombatRating", DbType="Float")]
		public System.Nullable<double> CombatRating
		{
			get
			{
				return this._CombatRating;
			}
			set
			{
				if ((this._CombatRating != value))
				{
					this.OnCombatRatingChanging(value);
					this.SendPropertyChanging();
					this._CombatRating = value;
					this.SendPropertyChanged("CombatRating");
					this.OnCombatRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Win", DbType="Bit")]
		public System.Nullable<bool> Win
		{
			get
			{
				return this._Win;
			}
			set
			{
				if ((this._Win != value))
				{
					this.OnWinChanging(value);
					this.SendPropertyChanging();
					this._Win = value;
					this.SendPropertyChanged("Win");
					this.OnWinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lose", DbType="Bit")]
		public System.Nullable<bool> Lose
		{
			get
			{
				return this._Lose;
			}
			set
			{
				if ((this._Lose != value))
				{
					this.OnLoseChanging(value);
					this.SendPropertyChanging();
					this._Lose = value;
					this.SendPropertyChanged("Lose");
					this.OnLoseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandWin", DbType="Bit")]
		public System.Nullable<bool> CommandWin
		{
			get
			{
				return this._CommandWin;
			}
			set
			{
				if ((this._CommandWin != value))
				{
					this.OnCommandWinChanging(value);
					this.SendPropertyChanging();
					this._CommandWin = value;
					this.SendPropertyChanged("CommandWin");
					this.OnCommandWinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandLose", DbType="Bit")]
		public System.Nullable<bool> CommandLose
		{
			get
			{
				return this._CommandLose;
			}
			set
			{
				if ((this._CommandLose != value))
				{
					this.OnCommandLoseChanging(value);
					this.SendPropertyChanging();
					this._CommandLose = value;
					this.SendPropertyChanged("CommandLose");
					this.OnCommandLoseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimePlayed", DbType="Float")]
		public System.Nullable<double> TimePlayed
		{
			get
			{
				return this._TimePlayed;
			}
			set
			{
				if ((this._TimePlayed != value))
				{
					this.OnTimePlayedChanging(value);
					this.SendPropertyChanging();
					this._TimePlayed = value;
					this.SendPropertyChanged("TimePlayed");
					this.OnTimePlayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeCommanded", DbType="Float")]
		public System.Nullable<double> TimeCommanded
		{
			get
			{
				return this._TimeCommanded;
			}
			set
			{
				if ((this._TimeCommanded != value))
				{
					this.OnTimeCommandedChanging(value);
					this.SendPropertyChanging();
					this._TimeCommanded = value;
					this.SendPropertyChanged("TimeCommanded");
					this.OnTimeCommandedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandCredit", DbType="Bit NOT NULL")]
		public bool CommandCredit
		{
			get
			{
				return this._CommandCredit;
			}
			set
			{
				if ((this._CommandCredit != value))
				{
					this.OnCommandCreditChanging(value);
					this.SendPropertyChanging();
					this._CommandCredit = value;
					this.SendPropertyChanged("CommandCredit");
					this.OnCommandCreditChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class ASGSServiceUpdateASRankingsResult
	{
		
		private System.Nullable<int> _GTM_ID;
		
		private System.Nullable<int> _LoginID;
		
		private string _Callsign;
		
		private System.Nullable<int> _Team;
		
		private System.Nullable<int> _SecondsPlayed;
		
		private System.Nullable<double> _FractionPlayed;
		
		private System.Nullable<double> _Mu;
		
		private System.Nullable<double> _Sigma;
		
		private System.Nullable<double> _DeltaMu;
		
		private System.Nullable<double> _DeltaSigma;
		
		private System.Nullable<double> _CommandMu;
		
		private System.Nullable<double> _CommandSigma;
		
		private System.Nullable<double> _StackRating;
		
		private System.Nullable<int> _Defector;
		
		private System.Nullable<int> _GamePlayerKills;
		
		private System.Nullable<int> _GameDroneKills;
		
		private System.Nullable<int> _GameEjects;
		
		private System.Nullable<int> _GameStationKills;
		
		private System.Nullable<int> _GameStationCaptures;
		
		private System.Nullable<int> _Pass;
		
		public ASGSServiceUpdateASRankingsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GTM_ID", DbType="Int")]
		public System.Nullable<int> GTM_ID
		{
			get
			{
				return this._GTM_ID;
			}
			set
			{
				if ((this._GTM_ID != value))
				{
					this._GTM_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", DbType="Int")]
		public System.Nullable<int> LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					this._LoginID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Callsign", DbType="VarChar(50)")]
		public string Callsign
		{
			get
			{
				return this._Callsign;
			}
			set
			{
				if ((this._Callsign != value))
				{
					this._Callsign = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team", DbType="Int")]
		public System.Nullable<int> Team
		{
			get
			{
				return this._Team;
			}
			set
			{
				if ((this._Team != value))
				{
					this._Team = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondsPlayed", DbType="Int")]
		public System.Nullable<int> SecondsPlayed
		{
			get
			{
				return this._SecondsPlayed;
			}
			set
			{
				if ((this._SecondsPlayed != value))
				{
					this._SecondsPlayed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FractionPlayed", DbType="Float")]
		public System.Nullable<double> FractionPlayed
		{
			get
			{
				return this._FractionPlayed;
			}
			set
			{
				if ((this._FractionPlayed != value))
				{
					this._FractionPlayed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mu", DbType="Float")]
		public System.Nullable<double> Mu
		{
			get
			{
				return this._Mu;
			}
			set
			{
				if ((this._Mu != value))
				{
					this._Mu = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sigma", DbType="Float")]
		public System.Nullable<double> Sigma
		{
			get
			{
				return this._Sigma;
			}
			set
			{
				if ((this._Sigma != value))
				{
					this._Sigma = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeltaMu", DbType="Float")]
		public System.Nullable<double> DeltaMu
		{
			get
			{
				return this._DeltaMu;
			}
			set
			{
				if ((this._DeltaMu != value))
				{
					this._DeltaMu = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeltaSigma", DbType="Float")]
		public System.Nullable<double> DeltaSigma
		{
			get
			{
				return this._DeltaSigma;
			}
			set
			{
				if ((this._DeltaSigma != value))
				{
					this._DeltaSigma = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandMu", DbType="Float")]
		public System.Nullable<double> CommandMu
		{
			get
			{
				return this._CommandMu;
			}
			set
			{
				if ((this._CommandMu != value))
				{
					this._CommandMu = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandSigma", DbType="Float")]
		public System.Nullable<double> CommandSigma
		{
			get
			{
				return this._CommandSigma;
			}
			set
			{
				if ((this._CommandSigma != value))
				{
					this._CommandSigma = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StackRating", DbType="Float")]
		public System.Nullable<double> StackRating
		{
			get
			{
				return this._StackRating;
			}
			set
			{
				if ((this._StackRating != value))
				{
					this._StackRating = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Defector", DbType="Int")]
		public System.Nullable<int> Defector
		{
			get
			{
				return this._Defector;
			}
			set
			{
				if ((this._Defector != value))
				{
					this._Defector = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GamePlayerKills", DbType="Int")]
		public System.Nullable<int> GamePlayerKills
		{
			get
			{
				return this._GamePlayerKills;
			}
			set
			{
				if ((this._GamePlayerKills != value))
				{
					this._GamePlayerKills = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameDroneKills", DbType="Int")]
		public System.Nullable<int> GameDroneKills
		{
			get
			{
				return this._GameDroneKills;
			}
			set
			{
				if ((this._GameDroneKills != value))
				{
					this._GameDroneKills = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameEjects", DbType="Int")]
		public System.Nullable<int> GameEjects
		{
			get
			{
				return this._GameEjects;
			}
			set
			{
				if ((this._GameEjects != value))
				{
					this._GameEjects = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameStationKills", DbType="Int")]
		public System.Nullable<int> GameStationKills
		{
			get
			{
				return this._GameStationKills;
			}
			set
			{
				if ((this._GameStationKills != value))
				{
					this._GameStationKills = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameStationCaptures", DbType="Int")]
		public System.Nullable<int> GameStationCaptures
		{
			get
			{
				return this._GameStationCaptures;
			}
			set
			{
				if ((this._GameStationCaptures != value))
				{
					this._GameStationCaptures = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="Int")]
		public System.Nullable<int> Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this._Pass = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
