#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18047
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Allegiance.CommunitySecuritySystem.DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CSS")]
	public partial class CSSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUsedKey(UsedKey instance);
    partial void UpdateUsedKey(UsedKey instance);
    partial void DeleteUsedKey(UsedKey instance);
    partial void InsertGroup(Group instance);
    partial void UpdateGroup(Group instance);
    partial void DeleteGroup(Group instance);
    partial void InsertGroup_Alias_GroupRole(Group_Alias_GroupRole instance);
    partial void UpdateGroup_Alias_GroupRole(Group_Alias_GroupRole instance);
    partial void DeleteGroup_Alias_GroupRole(Group_Alias_GroupRole instance);
    partial void InsertGroupRequest(GroupRequest instance);
    partial void UpdateGroupRequest(GroupRequest instance);
    partial void DeleteGroupRequest(GroupRequest instance);
    partial void InsertGroupRequestType(GroupRequestType instance);
    partial void UpdateGroupRequestType(GroupRequestType instance);
    partial void DeleteGroupRequestType(GroupRequestType instance);
    partial void InsertGroupRole(GroupRole instance);
    partial void UpdateGroupRole(GroupRole instance);
    partial void DeleteGroupRole(GroupRole instance);
    partial void InsertLogin_Role(Login_Role instance);
    partial void UpdateLogin_Role(Login_Role instance);
    partial void DeleteLogin_Role(Login_Role instance);
    partial void InsertMachineRecordType(MachineRecordType instance);
    partial void UpdateMachineRecordType(MachineRecordType instance);
    partial void DeleteMachineRecordType(MachineRecordType instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertSessionStatus(SessionStatus instance);
    partial void UpdateSessionStatus(SessionStatus instance);
    partial void DeleteSessionStatus(SessionStatus instance);
    partial void InsertTransformMethod(TransformMethod instance);
    partial void UpdateTransformMethod(TransformMethod instance);
    partial void DeleteTransformMethod(TransformMethod instance);
    partial void InsertLobby(Lobby instance);
    partial void UpdateLobby(Lobby instance);
    partial void DeleteLobby(Lobby instance);
    partial void InsertLobby_Login(Lobby_Login instance);
    partial void UpdateLobby_Login(Lobby_Login instance);
    partial void DeleteLobby_Login(Lobby_Login instance);
    partial void InsertError(Error instance);
    partial void UpdateError(Error instance);
    partial void DeleteError(Error instance);
    partial void InsertLog(Log instance);
    partial void UpdateLog(Log instance);
    partial void DeleteLog(Log instance);
    partial void InsertAutoUpdateFile_Lobby(AutoUpdateFile_Lobby instance);
    partial void UpdateAutoUpdateFile_Lobby(AutoUpdateFile_Lobby instance);
    partial void DeleteAutoUpdateFile_Lobby(AutoUpdateFile_Lobby instance);
    partial void InsertSession(Session instance);
    partial void UpdateSession(Session instance);
    partial void DeleteSession(Session instance);
    partial void InsertBanClass(BanClass instance);
    partial void UpdateBanClass(BanClass instance);
    partial void DeleteBanClass(BanClass instance);
    partial void InsertBanType(BanType instance);
    partial void UpdateBanType(BanType instance);
    partial void DeleteBanType(BanType instance);
    partial void InsertLogin_UnlinkedLogin(Login_UnlinkedLogin instance);
    partial void UpdateLogin_UnlinkedLogin(Login_UnlinkedLogin instance);
    partial void DeleteLogin_UnlinkedLogin(Login_UnlinkedLogin instance);
    partial void InsertMotd(Motd instance);
    partial void UpdateMotd(Motd instance);
    partial void DeleteMotd(Motd instance);
    partial void InsertCaptcha(Captcha instance);
    partial void UpdateCaptcha(Captcha instance);
    partial void DeleteCaptcha(Captcha instance);
    partial void InsertGroupMessage_Alias(GroupMessage_Alias instance);
    partial void UpdateGroupMessage_Alias(GroupMessage_Alias instance);
    partial void DeleteGroupMessage_Alias(GroupMessage_Alias instance);
    partial void InsertPollVote(PollVote instance);
    partial void UpdatePollVote(PollVote instance);
    partial void DeletePollVote(PollVote instance);
    partial void InsertMachineRecord(MachineRecord instance);
    partial void UpdateMachineRecord(MachineRecord instance);
    partial void DeleteMachineRecord(MachineRecord instance);
    partial void InsertPersonalMessage(PersonalMessage instance);
    partial void UpdatePersonalMessage(PersonalMessage instance);
    partial void DeletePersonalMessage(PersonalMessage instance);
    partial void InsertActiveKey(ActiveKey instance);
    partial void UpdateActiveKey(ActiveKey instance);
    partial void DeleteActiveKey(ActiveKey instance);
    partial void InsertPollOption(PollOption instance);
    partial void UpdatePollOption(PollOption instance);
    partial void DeletePollOption(PollOption instance);
    partial void InsertPoll(Poll instance);
    partial void UpdatePoll(Poll instance);
    partial void DeletePoll(Poll instance);
    partial void InsertGroupMessage(GroupMessage instance);
    partial void UpdateGroupMessage(GroupMessage instance);
    partial void DeleteGroupMessage(GroupMessage instance);
    partial void InsertIdentity(Identity instance);
    partial void UpdateIdentity(Identity instance);
    partial void DeleteIdentity(Identity instance);
    partial void InsertAlias(Alias instance);
    partial void UpdateAlias(Alias instance);
    partial void DeleteAlias(Alias instance);
    partial void InsertMachineRecordExclusion(MachineRecordExclusion instance);
    partial void UpdateMachineRecordExclusion(MachineRecordExclusion instance);
    partial void DeleteMachineRecordExclusion(MachineRecordExclusion instance);
    partial void InsertVirtualMachineMarker(VirtualMachineMarker instance);
    partial void UpdateVirtualMachineMarker(VirtualMachineMarker instance);
    partial void DeleteVirtualMachineMarker(VirtualMachineMarker instance);
    partial void InsertIPConverge(IPConverge instance);
    partial void UpdateIPConverge(IPConverge instance);
    partial void DeleteIPConverge(IPConverge instance);
    partial void InsertLogin(Login instance);
    partial void UpdateLogin(Login instance);
    partial void DeleteLogin(Login instance);
    partial void InsertBan(Ban instance);
    partial void UpdateBan(Ban instance);
    partial void DeleteBan(Ban instance);
    partial void InsertLogIP(LogIP instance);
    partial void UpdateLogIP(LogIP instance);
    partial void DeleteLogIP(LogIP instance);
    partial void InsertAliasBank(AliasBank instance);
    partial void UpdateAliasBank(AliasBank instance);
    partial void DeleteAliasBank(AliasBank instance);
    partial void InsertAutoUpdateFile(AutoUpdateFile instance);
    partial void UpdateAutoUpdateFile(AutoUpdateFile instance);
    partial void DeleteAutoUpdateFile(AutoUpdateFile instance);
    #endregion
		
		public CSSDataContext() : 
				base(global::Allegiance.CommunitySecuritySystem.DataAccess.Properties.Settings.Default.CSSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CSSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CSSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CSSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CSSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<UsedKey> UsedKeys
		{
			get
			{
				return this.GetTable<UsedKey>();
			}
		}
		
		public System.Data.Linq.Table<Group> Groups
		{
			get
			{
				return this.GetTable<Group>();
			}
		}
		
		public System.Data.Linq.Table<Group_Alias_GroupRole> Group_Alias_GroupRoles
		{
			get
			{
				return this.GetTable<Group_Alias_GroupRole>();
			}
		}
		
		public System.Data.Linq.Table<GroupRequest> GroupRequests
		{
			get
			{
				return this.GetTable<GroupRequest>();
			}
		}
		
		public System.Data.Linq.Table<GroupRequestType> GroupRequestTypes
		{
			get
			{
				return this.GetTable<GroupRequestType>();
			}
		}
		
		public System.Data.Linq.Table<GroupRole> GroupRoles
		{
			get
			{
				return this.GetTable<GroupRole>();
			}
		}
		
		public System.Data.Linq.Table<Login_Role> Login_Roles
		{
			get
			{
				return this.GetTable<Login_Role>();
			}
		}
		
		public System.Data.Linq.Table<MachineRecordType> MachineRecordTypes
		{
			get
			{
				return this.GetTable<MachineRecordType>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<SessionStatus> SessionStatus
		{
			get
			{
				return this.GetTable<SessionStatus>();
			}
		}
		
		public System.Data.Linq.Table<TransformMethod> TransformMethods
		{
			get
			{
				return this.GetTable<TransformMethod>();
			}
		}
		
		public System.Data.Linq.Table<Lobby> Lobbies
		{
			get
			{
				return this.GetTable<Lobby>();
			}
		}
		
		public System.Data.Linq.Table<Lobby_Login> Lobby_Logins
		{
			get
			{
				return this.GetTable<Lobby_Login>();
			}
		}
		
		public System.Data.Linq.Table<Error> Errors
		{
			get
			{
				return this.GetTable<Error>();
			}
		}
		
		public System.Data.Linq.Table<Log> Logs
		{
			get
			{
				return this.GetTable<Log>();
			}
		}
		
		public System.Data.Linq.Table<AutoUpdateFile_Lobby> AutoUpdateFile_Lobbies
		{
			get
			{
				return this.GetTable<AutoUpdateFile_Lobby>();
			}
		}
		
		public System.Data.Linq.Table<Session> Sessions
		{
			get
			{
				return this.GetTable<Session>();
			}
		}
		
		public System.Data.Linq.Table<BanClass> BanClasses
		{
			get
			{
				return this.GetTable<BanClass>();
			}
		}
		
		public System.Data.Linq.Table<BanType> BanTypes
		{
			get
			{
				return this.GetTable<BanType>();
			}
		}
		
		public System.Data.Linq.Table<Login_UnlinkedLogin> Login_UnlinkedLogins
		{
			get
			{
				return this.GetTable<Login_UnlinkedLogin>();
			}
		}
		
		public System.Data.Linq.Table<Motd> Motds
		{
			get
			{
				return this.GetTable<Motd>();
			}
		}
		
		public System.Data.Linq.Table<Captcha> Captchas
		{
			get
			{
				return this.GetTable<Captcha>();
			}
		}
		
		public System.Data.Linq.Table<GroupMessage_Alias> GroupMessage_Alias
		{
			get
			{
				return this.GetTable<GroupMessage_Alias>();
			}
		}
		
		public System.Data.Linq.Table<PollVote> PollVotes
		{
			get
			{
				return this.GetTable<PollVote>();
			}
		}
		
		public System.Data.Linq.Table<MachineRecord> MachineRecords
		{
			get
			{
				return this.GetTable<MachineRecord>();
			}
		}
		
		public System.Data.Linq.Table<PersonalMessage> PersonalMessages
		{
			get
			{
				return this.GetTable<PersonalMessage>();
			}
		}
		
		public System.Data.Linq.Table<ActiveKey> ActiveKeys
		{
			get
			{
				return this.GetTable<ActiveKey>();
			}
		}
		
		public System.Data.Linq.Table<PollOption> PollOptions
		{
			get
			{
				return this.GetTable<PollOption>();
			}
		}
		
		public System.Data.Linq.Table<Poll> Polls
		{
			get
			{
				return this.GetTable<Poll>();
			}
		}
		
		public System.Data.Linq.Table<GroupMessage> GroupMessages
		{
			get
			{
				return this.GetTable<GroupMessage>();
			}
		}
		
		public System.Data.Linq.Table<Identity> Identities
		{
			get
			{
				return this.GetTable<Identity>();
			}
		}
		
		public System.Data.Linq.Table<Alias> Alias
		{
			get
			{
				return this.GetTable<Alias>();
			}
		}
		
		public System.Data.Linq.Table<MachineRecordExclusion> MachineRecordExclusions
		{
			get
			{
				return this.GetTable<MachineRecordExclusion>();
			}
		}
		
		public System.Data.Linq.Table<VirtualMachineMarker> VirtualMachineMarkers
		{
			get
			{
				return this.GetTable<VirtualMachineMarker>();
			}
		}
		
		public System.Data.Linq.Table<IPConverge> IPConverges
		{
			get
			{
				return this.GetTable<IPConverge>();
			}
		}
		
		public System.Data.Linq.Table<Login> Logins
		{
			get
			{
				return this.GetTable<Login>();
			}
		}
		
		public System.Data.Linq.Table<Ban> Bans
		{
			get
			{
				return this.GetTable<Ban>();
			}
		}
		
		public System.Data.Linq.Table<LogIP> LogIPs
		{
			get
			{
				return this.GetTable<LogIP>();
			}
		}
		
		public System.Data.Linq.Table<AliasBank> AliasBanks
		{
			get
			{
				return this.GetTable<AliasBank>();
			}
		}
		
		public System.Data.Linq.Table<AutoUpdateFile> AutoUpdateFiles
		{
			get
			{
				return this.GetTable<AutoUpdateFile>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AvailableKey", IsComposable=true)]
		public IQueryable<AvailableKeyResult> AvailableKey([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginId", DbType="Int")] System.Nullable<int> loginId)
		{
			return this.CreateMethodCallQuery<AvailableKeyResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loginId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FindAutoUpdateFiles", IsComposable=true)]
		public IQueryable<FindAutoUpdateFilesResult> FindAutoUpdateFiles([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LobbyId", DbType="Int")] System.Nullable<int> lobbyId)
		{
			return this.CreateMethodCallQuery<FindAutoUpdateFilesResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lobbyId);
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsedKey")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UsedKey : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoginId;
		
		private int _ActiveKeyId;
		
		private System.DateTime _DateUsed;
		
		private EntityRef<ActiveKey> _ActiveKey;
		
		private EntityRef<Login> _Login;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginIdChanging(int value);
    partial void OnLoginIdChanged();
    partial void OnActiveKeyIdChanging(int value);
    partial void OnActiveKeyIdChanged();
    partial void OnDateUsedChanging(System.DateTime value);
    partial void OnDateUsedChanged();
    #endregion
		
		public UsedKey()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LoginId
		{
			get
			{
				return this._LoginId;
			}
			set
			{
				if ((this._LoginId != value))
				{
					if (this._Login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginIdChanging(value);
					this.SendPropertyChanging();
					this._LoginId = value;
					this.SendPropertyChanged("LoginId");
					this.OnLoginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveKeyId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ActiveKeyId
		{
			get
			{
				return this._ActiveKeyId;
			}
			set
			{
				if ((this._ActiveKeyId != value))
				{
					if (this._ActiveKey.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActiveKeyIdChanging(value);
					this.SendPropertyChanging();
					this._ActiveKeyId = value;
					this.SendPropertyChanged("ActiveKeyId");
					this.OnActiveKeyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUsed", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime DateUsed
		{
			get
			{
				return this._DateUsed;
			}
			set
			{
				if ((this._DateUsed != value))
				{
					this.OnDateUsedChanging(value);
					this.SendPropertyChanging();
					this._DateUsed = value;
					this.SendPropertyChanged("DateUsed");
					this.OnDateUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActiveKey_UsedKey", Storage="_ActiveKey", ThisKey="ActiveKeyId", OtherKey="Id", IsForeignKey=true)]
		public ActiveKey ActiveKey
		{
			get
			{
				return this._ActiveKey.Entity;
			}
			set
			{
				ActiveKey previousValue = this._ActiveKey.Entity;
				if (((previousValue != value) 
							|| (this._ActiveKey.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActiveKey.Entity = null;
						previousValue.UsedKeys.Remove(this);
					}
					this._ActiveKey.Entity = value;
					if ((value != null))
					{
						value.UsedKeys.Add(this);
						this._ActiveKeyId = value.Id;
					}
					else
					{
						this._ActiveKeyId = default(int);
					}
					this.SendPropertyChanged("ActiveKey");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_UsedKey", Storage="_Login", ThisKey="LoginId", OtherKey="Id", IsForeignKey=true)]
		public Login Login
		{
			get
			{
				return this._Login.Entity;
			}
			set
			{
				Login previousValue = this._Login.Entity;
				if (((previousValue != value) 
							|| (this._Login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Login.Entity = null;
						previousValue.UsedKeys.Remove(this);
					}
					this._Login.Entity = value;
					if ((value != null))
					{
						value.UsedKeys.Add(this);
						this._LoginId = value.Id;
					}
					else
					{
						this._LoginId = default(int);
					}
					this.SendPropertyChanged("Login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ActiveKey = default(EntityRef<ActiveKey>);
			this._Login = default(EntityRef<Login>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Group]")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Tag;
		
		private bool _IsSquad;
		
		private System.DateTime _DateCreated;
		
		private EntitySet<Group_Alias_GroupRole> _Group_Alias_GroupRoles;
		
		private EntitySet<GroupMessage> _GroupMessages;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTagChanging(string value);
    partial void OnTagChanged();
    partial void OnIsSquadChanging(bool value);
    partial void OnIsSquadChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public Group()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tag", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Tag
		{
			get
			{
				return this._Tag;
			}
			set
			{
				if ((this._Tag != value))
				{
					this.OnTagChanging(value);
					this.SendPropertyChanging();
					this._Tag = value;
					this.SendPropertyChanged("Tag");
					this.OnTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSquad", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsSquad
		{
			get
			{
				return this._IsSquad;
			}
			set
			{
				if ((this._IsSquad != value))
				{
					this.OnIsSquadChanging(value);
					this.SendPropertyChanging();
					this._IsSquad = value;
					this.SendPropertyChanged("IsSquad");
					this.OnIsSquadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_Group_Alias_GroupRole", Storage="_Group_Alias_GroupRoles", ThisKey="Id", OtherKey="GroupId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<Group_Alias_GroupRole> Group_Alias_GroupRoles
		{
			get
			{
				if ((this.serializing 
							&& (this._Group_Alias_GroupRoles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Group_Alias_GroupRoles;
			}
			set
			{
				this._Group_Alias_GroupRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupMessage", Storage="_GroupMessages", ThisKey="Id", OtherKey="GroupId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<GroupMessage> GroupMessages
		{
			get
			{
				if ((this.serializing 
							&& (this._GroupMessages.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._GroupMessages;
			}
			set
			{
				this._GroupMessages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Group_Alias_GroupRoles(Group_Alias_GroupRole entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_Group_Alias_GroupRoles(Group_Alias_GroupRole entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
		
		private void attach_GroupMessages(GroupMessage entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_GroupMessages(GroupMessage entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
		
		private void Initialize()
		{
			this._Group_Alias_GroupRoles = new EntitySet<Group_Alias_GroupRole>(new Action<Group_Alias_GroupRole>(this.attach_Group_Alias_GroupRoles), new Action<Group_Alias_GroupRole>(this.detach_Group_Alias_GroupRoles));
			this._GroupMessages = new EntitySet<GroupMessage>(new Action<GroupMessage>(this.attach_GroupMessages), new Action<GroupMessage>(this.detach_GroupMessages));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Group_Alias_GroupRole")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Group_Alias_GroupRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupId;
		
		private int _AliasId;
		
		private int _GroupRoleId;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<GroupRole> _GroupRole;
		
		private EntityRef<Alias> _Alias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupIdChanging(int value);
    partial void OnGroupIdChanged();
    partial void OnAliasIdChanging(int value);
    partial void OnAliasIdChanged();
    partial void OnGroupRoleIdChanging(int value);
    partial void OnGroupRoleIdChanged();
    #endregion
		
		public Group_Alias_GroupRole()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AliasId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AliasId
		{
			get
			{
				return this._AliasId;
			}
			set
			{
				if ((this._AliasId != value))
				{
					if (this._Alias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAliasIdChanging(value);
					this.SendPropertyChanging();
					this._AliasId = value;
					this.SendPropertyChanged("AliasId");
					this.OnAliasIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupRoleId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int GroupRoleId
		{
			get
			{
				return this._GroupRoleId;
			}
			set
			{
				if ((this._GroupRoleId != value))
				{
					if (this._GroupRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupRoleIdChanging(value);
					this.SendPropertyChanging();
					this._GroupRoleId = value;
					this.SendPropertyChanged("GroupRoleId");
					this.OnGroupRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_Group_Alias_GroupRole", Storage="_Group", ThisKey="GroupId", OtherKey="Id", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.Group_Alias_GroupRoles.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.Group_Alias_GroupRoles.Add(this);
						this._GroupId = value.Id;
					}
					else
					{
						this._GroupId = default(int);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupRole_Group_Alias_GroupRole", Storage="_GroupRole", ThisKey="GroupRoleId", OtherKey="Id", IsForeignKey=true)]
		public GroupRole GroupRole
		{
			get
			{
				return this._GroupRole.Entity;
			}
			set
			{
				GroupRole previousValue = this._GroupRole.Entity;
				if (((previousValue != value) 
							|| (this._GroupRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GroupRole.Entity = null;
						previousValue.Group_Alias_GroupRoles.Remove(this);
					}
					this._GroupRole.Entity = value;
					if ((value != null))
					{
						value.Group_Alias_GroupRoles.Add(this);
						this._GroupRoleId = value.Id;
					}
					else
					{
						this._GroupRoleId = default(int);
					}
					this.SendPropertyChanged("GroupRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alias_Group_Alias_GroupRole", Storage="_Alias", ThisKey="AliasId", OtherKey="Id", IsForeignKey=true)]
		public Alias Alias
		{
			get
			{
				return this._Alias.Entity;
			}
			set
			{
				Alias previousValue = this._Alias.Entity;
				if (((previousValue != value) 
							|| (this._Alias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alias.Entity = null;
						previousValue.Group_Alias_GroupRoles.Remove(this);
					}
					this._Alias.Entity = value;
					if ((value != null))
					{
						value.Group_Alias_GroupRoles.Add(this);
						this._AliasId = value.Id;
					}
					else
					{
						this._AliasId = default(int);
					}
					this.SendPropertyChanged("Alias");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Group = default(EntityRef<Group>);
			this._GroupRole = default(EntityRef<GroupRole>);
			this._Alias = default(EntityRef<Alias>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupRequest")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class GroupRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _RequestTypeId;
		
		private int _AliasId;
		
		private int _GroupId;
		
		private System.DateTime _DateCreated;
		
		private EntityRef<GroupRequestType> _GroupRequestType;
		
		private EntityRef<Alias> _Alias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRequestTypeIdChanging(int value);
    partial void OnRequestTypeIdChanged();
    partial void OnAliasIdChanging(int value);
    partial void OnAliasIdChanged();
    partial void OnGroupIdChanging(int value);
    partial void OnGroupIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public GroupRequest()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTypeId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int RequestTypeId
		{
			get
			{
				return this._RequestTypeId;
			}
			set
			{
				if ((this._RequestTypeId != value))
				{
					if (this._GroupRequestType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestTypeIdChanging(value);
					this.SendPropertyChanging();
					this._RequestTypeId = value;
					this.SendPropertyChanged("RequestTypeId");
					this.OnRequestTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AliasId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int AliasId
		{
			get
			{
				return this._AliasId;
			}
			set
			{
				if ((this._AliasId != value))
				{
					if (this._Alias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAliasIdChanging(value);
					this.SendPropertyChanging();
					this._AliasId = value;
					this.SendPropertyChanged("AliasId");
					this.OnAliasIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupRequestType_GroupRequest", Storage="_GroupRequestType", ThisKey="RequestTypeId", OtherKey="Id", IsForeignKey=true)]
		public GroupRequestType GroupRequestType
		{
			get
			{
				return this._GroupRequestType.Entity;
			}
			set
			{
				GroupRequestType previousValue = this._GroupRequestType.Entity;
				if (((previousValue != value) 
							|| (this._GroupRequestType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GroupRequestType.Entity = null;
						previousValue.GroupRequests.Remove(this);
					}
					this._GroupRequestType.Entity = value;
					if ((value != null))
					{
						value.GroupRequests.Add(this);
						this._RequestTypeId = value.Id;
					}
					else
					{
						this._RequestTypeId = default(int);
					}
					this.SendPropertyChanged("GroupRequestType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alias_GroupRequest", Storage="_Alias", ThisKey="AliasId", OtherKey="Id", IsForeignKey=true)]
		public Alias Alias
		{
			get
			{
				return this._Alias.Entity;
			}
			set
			{
				Alias previousValue = this._Alias.Entity;
				if (((previousValue != value) 
							|| (this._Alias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alias.Entity = null;
						previousValue.GroupRequests.Remove(this);
					}
					this._Alias.Entity = value;
					if ((value != null))
					{
						value.GroupRequests.Add(this);
						this._AliasId = value.Id;
					}
					else
					{
						this._AliasId = default(int);
					}
					this.SendPropertyChanged("Alias");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._GroupRequestType = default(EntityRef<GroupRequestType>);
			this._Alias = default(EntityRef<Alias>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupRequestType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class GroupRequestType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<GroupRequest> _GroupRequests;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public GroupRequestType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupRequestType_GroupRequest", Storage="_GroupRequests", ThisKey="Id", OtherKey="RequestTypeId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<GroupRequest> GroupRequests
		{
			get
			{
				if ((this.serializing 
							&& (this._GroupRequests.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._GroupRequests;
			}
			set
			{
				this._GroupRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GroupRequests(GroupRequest entity)
		{
			this.SendPropertyChanging();
			entity.GroupRequestType = this;
		}
		
		private void detach_GroupRequests(GroupRequest entity)
		{
			this.SendPropertyChanging();
			entity.GroupRequestType = null;
		}
		
		private void Initialize()
		{
			this._GroupRequests = new EntitySet<GroupRequest>(new Action<GroupRequest>(this.attach_GroupRequests), new Action<GroupRequest>(this.detach_GroupRequests));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupRole")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class GroupRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<char> _Token;
		
		private EntitySet<Group_Alias_GroupRole> _Group_Alias_GroupRoles;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTokenChanging(System.Nullable<char> value);
    partial void OnTokenChanged();
    #endregion
		
		public GroupRole()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="NChar(1)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<char> Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupRole_Group_Alias_GroupRole", Storage="_Group_Alias_GroupRoles", ThisKey="Id", OtherKey="GroupRoleId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<Group_Alias_GroupRole> Group_Alias_GroupRoles
		{
			get
			{
				if ((this.serializing 
							&& (this._Group_Alias_GroupRoles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Group_Alias_GroupRoles;
			}
			set
			{
				this._Group_Alias_GroupRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Group_Alias_GroupRoles(Group_Alias_GroupRole entity)
		{
			this.SendPropertyChanging();
			entity.GroupRole = this;
		}
		
		private void detach_Group_Alias_GroupRoles(Group_Alias_GroupRole entity)
		{
			this.SendPropertyChanging();
			entity.GroupRole = null;
		}
		
		private void Initialize()
		{
			this._Group_Alias_GroupRoles = new EntitySet<Group_Alias_GroupRole>(new Action<Group_Alias_GroupRole>(this.attach_Group_Alias_GroupRoles), new Action<Group_Alias_GroupRole>(this.detach_Group_Alias_GroupRoles));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Login_Role")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Login_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoginId;
		
		private int _RoleId;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<Login> _Login;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginIdChanging(int value);
    partial void OnLoginIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    #endregion
		
		public Login_Role()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LoginId
		{
			get
			{
				return this._LoginId;
			}
			set
			{
				if ((this._LoginId != value))
				{
					if (this._Login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginIdChanging(value);
					this.SendPropertyChanging();
					this._LoginId = value;
					this.SendPropertyChanged("LoginId");
					this.OnLoginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Login_Role", Storage="_Role", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Login_Roles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Login_Roles.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Login_Role", Storage="_Login", ThisKey="LoginId", OtherKey="Id", IsForeignKey=true)]
		public Login Login
		{
			get
			{
				return this._Login.Entity;
			}
			set
			{
				Login previousValue = this._Login.Entity;
				if (((previousValue != value) 
							|| (this._Login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Login.Entity = null;
						previousValue.Login_Roles.Remove(this);
					}
					this._Login.Entity = value;
					if ((value != null))
					{
						value.Login_Roles.Add(this);
						this._LoginId = value.Id;
					}
					else
					{
						this._LoginId = default(int);
					}
					this.SendPropertyChanged("Login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Role = default(EntityRef<Role>);
			this._Login = default(EntityRef<Login>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MachineRecordType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MachineRecordType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<MachineRecord> _MachineRecords;
		
		private EntitySet<MachineRecordExclusion> _MachineRecordExclusions;
		
		private EntitySet<VirtualMachineMarker> _VirtualMachineMarkers;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public MachineRecordType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MachineRecordType_MachineRecord", Storage="_MachineRecords", ThisKey="Id", OtherKey="RecordTypeId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<MachineRecord> MachineRecords
		{
			get
			{
				if ((this.serializing 
							&& (this._MachineRecords.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MachineRecords;
			}
			set
			{
				this._MachineRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MachineRecordType_MachineRecordExclusion", Storage="_MachineRecordExclusions", ThisKey="Id", OtherKey="RecordTypeId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<MachineRecordExclusion> MachineRecordExclusions
		{
			get
			{
				if ((this.serializing 
							&& (this._MachineRecordExclusions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MachineRecordExclusions;
			}
			set
			{
				this._MachineRecordExclusions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MachineRecordType_VirtualMachineMarker", Storage="_VirtualMachineMarkers", ThisKey="Id", OtherKey="RecordTypeId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<VirtualMachineMarker> VirtualMachineMarkers
		{
			get
			{
				if ((this.serializing 
							&& (this._VirtualMachineMarkers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._VirtualMachineMarkers;
			}
			set
			{
				this._VirtualMachineMarkers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MachineRecords(MachineRecord entity)
		{
			this.SendPropertyChanging();
			entity.MachineRecordType = this;
		}
		
		private void detach_MachineRecords(MachineRecord entity)
		{
			this.SendPropertyChanging();
			entity.MachineRecordType = null;
		}
		
		private void attach_MachineRecordExclusions(MachineRecordExclusion entity)
		{
			this.SendPropertyChanging();
			entity.MachineRecordType = this;
		}
		
		private void detach_MachineRecordExclusions(MachineRecordExclusion entity)
		{
			this.SendPropertyChanging();
			entity.MachineRecordType = null;
		}
		
		private void attach_VirtualMachineMarkers(VirtualMachineMarker entity)
		{
			this.SendPropertyChanging();
			entity.MachineRecordType = this;
		}
		
		private void detach_VirtualMachineMarkers(VirtualMachineMarker entity)
		{
			this.SendPropertyChanging();
			entity.MachineRecordType = null;
		}
		
		private void Initialize()
		{
			this._MachineRecords = new EntitySet<MachineRecord>(new Action<MachineRecord>(this.attach_MachineRecords), new Action<MachineRecord>(this.detach_MachineRecords));
			this._MachineRecordExclusions = new EntitySet<MachineRecordExclusion>(new Action<MachineRecordExclusion>(this.attach_MachineRecordExclusions), new Action<MachineRecordExclusion>(this.detach_MachineRecordExclusions));
			this._VirtualMachineMarkers = new EntitySet<VirtualMachineMarker>(new Action<VirtualMachineMarker>(this.attach_VirtualMachineMarkers), new Action<VirtualMachineMarker>(this.detach_VirtualMachineMarkers));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<Login_Role> _Login_Roles;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Role()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Login_Role", Storage="_Login_Roles", ThisKey="Id", OtherKey="RoleId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<Login_Role> Login_Roles
		{
			get
			{
				if ((this.serializing 
							&& (this._Login_Roles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Login_Roles;
			}
			set
			{
				this._Login_Roles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Login_Roles(Login_Role entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Login_Roles(Login_Role entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void Initialize()
		{
			this._Login_Roles = new EntitySet<Login_Role>(new Action<Login_Role>(this.attach_Login_Roles), new Action<Login_Role>(this.detach_Login_Roles));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SessionStatus")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SessionStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<Session> _Sessions;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public SessionStatus()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SessionStatus_Session", Storage="_Sessions", ThisKey="Id", OtherKey="SessionStatusId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<Session> Sessions
		{
			get
			{
				if ((this.serializing 
							&& (this._Sessions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Sessions;
			}
			set
			{
				this._Sessions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sessions(Session entity)
		{
			this.SendPropertyChanging();
			entity.SessionStatus = this;
		}
		
		private void detach_Sessions(Session entity)
		{
			this.SendPropertyChanging();
			entity.SessionStatus = null;
		}
		
		private void Initialize()
		{
			this._Sessions = new EntitySet<Session>(new Action<Session>(this.attach_Sessions), new Action<Session>(this.detach_Sessions));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransformMethod")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class TransformMethod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Text;
		
		private EntitySet<ActiveKey> _ActiveKeys;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    #endregion
		
		public TransformMethod()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransformMethod_ActiveKey", Storage="_ActiveKeys", ThisKey="Id", OtherKey="TransformMethodId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<ActiveKey> ActiveKeys
		{
			get
			{
				if ((this.serializing 
							&& (this._ActiveKeys.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ActiveKeys;
			}
			set
			{
				this._ActiveKeys.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActiveKeys(ActiveKey entity)
		{
			this.SendPropertyChanging();
			entity.TransformMethod = this;
		}
		
		private void detach_ActiveKeys(ActiveKey entity)
		{
			this.SendPropertyChanging();
			entity.TransformMethod = null;
		}
		
		private void Initialize()
		{
			this._ActiveKeys = new EntitySet<ActiveKey>(new Action<ActiveKey>(this.attach_ActiveKeys), new Action<ActiveKey>(this.detach_ActiveKeys));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lobby")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Lobby : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Host;
		
		private string _BasePath;
		
		private bool _IsRestrictive;
		
		private bool _IsEnabled;
		
		private EntitySet<Lobby_Login> _Lobby_Logins;
		
		private EntitySet<AutoUpdateFile_Lobby> _AutoUpdateFile_Lobbies;
		
		private EntitySet<Motd> _Motds;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHostChanging(string value);
    partial void OnHostChanged();
    partial void OnBasePathChanging(string value);
    partial void OnBasePathChanged();
    partial void OnIsRestrictiveChanging(bool value);
    partial void OnIsRestrictiveChanged();
    partial void OnIsEnabledChanging(bool value);
    partial void OnIsEnabledChanged();
    #endregion
		
		public Lobby()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Host", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Host
		{
			get
			{
				return this._Host;
			}
			set
			{
				if ((this._Host != value))
				{
					this.OnHostChanging(value);
					this.SendPropertyChanging();
					this._Host = value;
					this.SendPropertyChanged("Host");
					this.OnHostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasePath", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string BasePath
		{
			get
			{
				return this._BasePath;
			}
			set
			{
				if ((this._BasePath != value))
				{
					this.OnBasePathChanging(value);
					this.SendPropertyChanging();
					this._BasePath = value;
					this.SendPropertyChanged("BasePath");
					this.OnBasePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRestrictive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsRestrictive
		{
			get
			{
				return this._IsRestrictive;
			}
			set
			{
				if ((this._IsRestrictive != value))
				{
					this.OnIsRestrictiveChanging(value);
					this.SendPropertyChanging();
					this._IsRestrictive = value;
					this.SendPropertyChanged("IsRestrictive");
					this.OnIsRestrictiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lobby_Lobby_Login", Storage="_Lobby_Logins", ThisKey="Id", OtherKey="LobbyId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<Lobby_Login> Lobby_Logins
		{
			get
			{
				if ((this.serializing 
							&& (this._Lobby_Logins.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Lobby_Logins;
			}
			set
			{
				this._Lobby_Logins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lobby_AutoUpdateFile_Lobby", Storage="_AutoUpdateFile_Lobbies", ThisKey="Id", OtherKey="LobbyId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<AutoUpdateFile_Lobby> AutoUpdateFile_Lobbies
		{
			get
			{
				if ((this.serializing 
							&& (this._AutoUpdateFile_Lobbies.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AutoUpdateFile_Lobbies;
			}
			set
			{
				this._AutoUpdateFile_Lobbies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lobby_Motd", Storage="_Motds", ThisKey="Id", OtherKey="LobbyId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<Motd> Motds
		{
			get
			{
				if ((this.serializing 
							&& (this._Motds.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Motds;
			}
			set
			{
				this._Motds.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lobby_Logins(Lobby_Login entity)
		{
			this.SendPropertyChanging();
			entity.Lobby = this;
		}
		
		private void detach_Lobby_Logins(Lobby_Login entity)
		{
			this.SendPropertyChanging();
			entity.Lobby = null;
		}
		
		private void attach_AutoUpdateFile_Lobbies(AutoUpdateFile_Lobby entity)
		{
			this.SendPropertyChanging();
			entity.Lobby = this;
		}
		
		private void detach_AutoUpdateFile_Lobbies(AutoUpdateFile_Lobby entity)
		{
			this.SendPropertyChanging();
			entity.Lobby = null;
		}
		
		private void attach_Motds(Motd entity)
		{
			this.SendPropertyChanging();
			entity.Lobby = this;
		}
		
		private void detach_Motds(Motd entity)
		{
			this.SendPropertyChanging();
			entity.Lobby = null;
		}
		
		private void Initialize()
		{
			this._Lobby_Logins = new EntitySet<Lobby_Login>(new Action<Lobby_Login>(this.attach_Lobby_Logins), new Action<Lobby_Login>(this.detach_Lobby_Logins));
			this._AutoUpdateFile_Lobbies = new EntitySet<AutoUpdateFile_Lobby>(new Action<AutoUpdateFile_Lobby>(this.attach_AutoUpdateFile_Lobbies), new Action<AutoUpdateFile_Lobby>(this.detach_AutoUpdateFile_Lobbies));
			this._Motds = new EntitySet<Motd>(new Action<Motd>(this.attach_Motds), new Action<Motd>(this.detach_Motds));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lobby_Login")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Lobby_Login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LobbyId;
		
		private int _LoginId;
		
		private EntityRef<Lobby> _Lobby;
		
		private EntityRef<Login> _Login;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLobbyIdChanging(int value);
    partial void OnLobbyIdChanged();
    partial void OnLoginIdChanging(int value);
    partial void OnLoginIdChanged();
    #endregion
		
		public Lobby_Login()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LobbyId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LobbyId
		{
			get
			{
				return this._LobbyId;
			}
			set
			{
				if ((this._LobbyId != value))
				{
					if (this._Lobby.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLobbyIdChanging(value);
					this.SendPropertyChanging();
					this._LobbyId = value;
					this.SendPropertyChanged("LobbyId");
					this.OnLobbyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int LoginId
		{
			get
			{
				return this._LoginId;
			}
			set
			{
				if ((this._LoginId != value))
				{
					if (this._Login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginIdChanging(value);
					this.SendPropertyChanging();
					this._LoginId = value;
					this.SendPropertyChanged("LoginId");
					this.OnLoginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lobby_Lobby_Login", Storage="_Lobby", ThisKey="LobbyId", OtherKey="Id", IsForeignKey=true)]
		public Lobby Lobby
		{
			get
			{
				return this._Lobby.Entity;
			}
			set
			{
				Lobby previousValue = this._Lobby.Entity;
				if (((previousValue != value) 
							|| (this._Lobby.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lobby.Entity = null;
						previousValue.Lobby_Logins.Remove(this);
					}
					this._Lobby.Entity = value;
					if ((value != null))
					{
						value.Lobby_Logins.Add(this);
						this._LobbyId = value.Id;
					}
					else
					{
						this._LobbyId = default(int);
					}
					this.SendPropertyChanged("Lobby");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Lobby_Login", Storage="_Login", ThisKey="LoginId", OtherKey="Id", IsForeignKey=true)]
		public Login Login
		{
			get
			{
				return this._Login.Entity;
			}
			set
			{
				Login previousValue = this._Login.Entity;
				if (((previousValue != value) 
							|| (this._Login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Login.Entity = null;
						previousValue.Lobby_Logins.Remove(this);
					}
					this._Login.Entity = value;
					if ((value != null))
					{
						value.Lobby_Logins.Add(this);
						this._LoginId = value.Id;
					}
					else
					{
						this._LoginId = default(int);
					}
					this.SendPropertyChanged("Login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Lobby = default(EntityRef<Lobby>);
			this._Login = default(EntityRef<Login>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Error")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Error : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _ExceptionType;
		
		private string _Message;
		
		private string _StackTrace;
		
		private string _InnerMessage;
		
		private System.DateTime _DateOccurred;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnExceptionTypeChanging(string value);
    partial void OnExceptionTypeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnStackTraceChanging(string value);
    partial void OnStackTraceChanged();
    partial void OnInnerMessageChanging(string value);
    partial void OnInnerMessageChanged();
    partial void OnDateOccurredChanging(System.DateTime value);
    partial void OnDateOccurredChanged();
    #endregion
		
		public Error()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionType", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string ExceptionType
		{
			get
			{
				return this._ExceptionType;
			}
			set
			{
				if ((this._ExceptionType != value))
				{
					this.OnExceptionTypeChanging(value);
					this.SendPropertyChanging();
					this._ExceptionType = value;
					this.SendPropertyChanged("ExceptionType");
					this.OnExceptionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StackTrace", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string StackTrace
		{
			get
			{
				return this._StackTrace;
			}
			set
			{
				if ((this._StackTrace != value))
				{
					this.OnStackTraceChanging(value);
					this.SendPropertyChanging();
					this._StackTrace = value;
					this.SendPropertyChanged("StackTrace");
					this.OnStackTraceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InnerMessage", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string InnerMessage
		{
			get
			{
				return this._InnerMessage;
			}
			set
			{
				if ((this._InnerMessage != value))
				{
					this.OnInnerMessageChanging(value);
					this.SendPropertyChanging();
					this._InnerMessage = value;
					this.SendPropertyChanged("InnerMessage");
					this.OnInnerMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOccurred", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime DateOccurred
		{
			get
			{
				return this._DateOccurred;
			}
			set
			{
				if ((this._DateOccurred != value))
				{
					this.OnDateOccurredChanging(value);
					this.SendPropertyChanging();
					this._DateOccurred = value;
					this.SendPropertyChanged("DateOccurred");
					this.OnDateOccurredChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Log]")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private byte _Type;
		
		private string _Message;
		
		private System.DateTime _DateOccurred;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTypeChanging(byte value);
    partial void OnTypeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnDateOccurredChanging(System.DateTime value);
    partial void OnDateOccurredChanged();
    #endregion
		
		public Log()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public byte Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOccurred", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime DateOccurred
		{
			get
			{
				return this._DateOccurred;
			}
			set
			{
				if ((this._DateOccurred != value))
				{
					this.OnDateOccurredChanging(value);
					this.SendPropertyChanging();
					this._DateOccurred = value;
					this.SendPropertyChanged("DateOccurred");
					this.OnDateOccurredChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AutoUpdateFile_Lobby")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AutoUpdateFile_Lobby : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AutoUpdateFileId;
		
		private int _LobbyId;
		
		private string _ValidChecksum;
		
		private string _CurrentVersion;
		
		private System.DateTime _DateCreated;
		
		private System.DateTime _DateModified;
		
		private EntityRef<Lobby> _Lobby;
		
		private EntityRef<AutoUpdateFile> _AutoUpdateFile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAutoUpdateFileIdChanging(int value);
    partial void OnAutoUpdateFileIdChanged();
    partial void OnLobbyIdChanging(int value);
    partial void OnLobbyIdChanged();
    partial void OnValidChecksumChanging(string value);
    partial void OnValidChecksumChanged();
    partial void OnCurrentVersionChanging(string value);
    partial void OnCurrentVersionChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public AutoUpdateFile_Lobby()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoUpdateFileId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AutoUpdateFileId
		{
			get
			{
				return this._AutoUpdateFileId;
			}
			set
			{
				if ((this._AutoUpdateFileId != value))
				{
					if (this._AutoUpdateFile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAutoUpdateFileIdChanging(value);
					this.SendPropertyChanging();
					this._AutoUpdateFileId = value;
					this.SendPropertyChanged("AutoUpdateFileId");
					this.OnAutoUpdateFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LobbyId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int LobbyId
		{
			get
			{
				return this._LobbyId;
			}
			set
			{
				if ((this._LobbyId != value))
				{
					if (this._Lobby.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLobbyIdChanging(value);
					this.SendPropertyChanging();
					this._LobbyId = value;
					this.SendPropertyChanged("LobbyId");
					this.OnLobbyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidChecksum", DbType="NChar(28)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ValidChecksum
		{
			get
			{
				return this._ValidChecksum;
			}
			set
			{
				if ((this._ValidChecksum != value))
				{
					this.OnValidChecksumChanging(value);
					this.SendPropertyChanging();
					this._ValidChecksum = value;
					this.SendPropertyChanged("ValidChecksum");
					this.OnValidChecksumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentVersion", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CurrentVersion
		{
			get
			{
				return this._CurrentVersion;
			}
			set
			{
				if ((this._CurrentVersion != value))
				{
					this.OnCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._CurrentVersion = value;
					this.SendPropertyChanged("CurrentVersion");
					this.OnCurrentVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lobby_AutoUpdateFile_Lobby", Storage="_Lobby", ThisKey="LobbyId", OtherKey="Id", IsForeignKey=true)]
		public Lobby Lobby
		{
			get
			{
				return this._Lobby.Entity;
			}
			set
			{
				Lobby previousValue = this._Lobby.Entity;
				if (((previousValue != value) 
							|| (this._Lobby.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lobby.Entity = null;
						previousValue.AutoUpdateFile_Lobbies.Remove(this);
					}
					this._Lobby.Entity = value;
					if ((value != null))
					{
						value.AutoUpdateFile_Lobbies.Add(this);
						this._LobbyId = value.Id;
					}
					else
					{
						this._LobbyId = default(int);
					}
					this.SendPropertyChanged("Lobby");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AutoUpdateFile_AutoUpdateFile_Lobby", Storage="_AutoUpdateFile", ThisKey="AutoUpdateFileId", OtherKey="Id", IsForeignKey=true)]
		public AutoUpdateFile AutoUpdateFile
		{
			get
			{
				return this._AutoUpdateFile.Entity;
			}
			set
			{
				AutoUpdateFile previousValue = this._AutoUpdateFile.Entity;
				if (((previousValue != value) 
							|| (this._AutoUpdateFile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AutoUpdateFile.Entity = null;
						previousValue.AutoUpdateFile_Lobbies.Remove(this);
					}
					this._AutoUpdateFile.Entity = value;
					if ((value != null))
					{
						value.AutoUpdateFile_Lobbies.Add(this);
						this._AutoUpdateFileId = value.Id;
					}
					else
					{
						this._AutoUpdateFileId = default(int);
					}
					this.SendPropertyChanged("AutoUpdateFile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Lobby = default(EntityRef<Lobby>);
			this._AutoUpdateFile = default(EntityRef<AutoUpdateFile>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Session")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Session : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private int _LoginId;
		
		private int _ActiveKeyId;
		
		private int _SessionStatusId;
		
		private System.DateTime _DateLastCheckIn;
		
		private string _IPAddress;
		
		private int _AliasId;
		
		private EntityRef<SessionStatus> _SessionStatus;
		
		private EntityRef<ActiveKey> _ActiveKey;
		
		private EntityRef<Alias> _Alias;
		
		private EntityRef<Login> _Login;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnLoginIdChanging(int value);
    partial void OnLoginIdChanged();
    partial void OnActiveKeyIdChanging(int value);
    partial void OnActiveKeyIdChanged();
    partial void OnSessionStatusIdChanging(int value);
    partial void OnSessionStatusIdChanged();
    partial void OnDateLastCheckInChanging(System.DateTime value);
    partial void OnDateLastCheckInChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnAliasIdChanging(int value);
    partial void OnAliasIdChanged();
    #endregion
		
		public Session()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int LoginId
		{
			get
			{
				return this._LoginId;
			}
			set
			{
				if ((this._LoginId != value))
				{
					if (this._Login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginIdChanging(value);
					this.SendPropertyChanging();
					this._LoginId = value;
					this.SendPropertyChanged("LoginId");
					this.OnLoginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveKeyId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int ActiveKeyId
		{
			get
			{
				return this._ActiveKeyId;
			}
			set
			{
				if ((this._ActiveKeyId != value))
				{
					if (this._ActiveKey.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActiveKeyIdChanging(value);
					this.SendPropertyChanging();
					this._ActiveKeyId = value;
					this.SendPropertyChanged("ActiveKeyId");
					this.OnActiveKeyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionStatusId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int SessionStatusId
		{
			get
			{
				return this._SessionStatusId;
			}
			set
			{
				if ((this._SessionStatusId != value))
				{
					if (this._SessionStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionStatusIdChanging(value);
					this.SendPropertyChanging();
					this._SessionStatusId = value;
					this.SendPropertyChanged("SessionStatusId");
					this.OnSessionStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastCheckIn", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime DateLastCheckIn
		{
			get
			{
				return this._DateLastCheckIn;
			}
			set
			{
				if ((this._DateLastCheckIn != value))
				{
					this.OnDateLastCheckInChanging(value);
					this.SendPropertyChanging();
					this._DateLastCheckIn = value;
					this.SendPropertyChanged("DateLastCheckIn");
					this.OnDateLastCheckInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AliasId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int AliasId
		{
			get
			{
				return this._AliasId;
			}
			set
			{
				if ((this._AliasId != value))
				{
					if (this._Alias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAliasIdChanging(value);
					this.SendPropertyChanging();
					this._AliasId = value;
					this.SendPropertyChanged("AliasId");
					this.OnAliasIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SessionStatus_Session", Storage="_SessionStatus", ThisKey="SessionStatusId", OtherKey="Id", IsForeignKey=true)]
		public SessionStatus SessionStatus
		{
			get
			{
				return this._SessionStatus.Entity;
			}
			set
			{
				SessionStatus previousValue = this._SessionStatus.Entity;
				if (((previousValue != value) 
							|| (this._SessionStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SessionStatus.Entity = null;
						previousValue.Sessions.Remove(this);
					}
					this._SessionStatus.Entity = value;
					if ((value != null))
					{
						value.Sessions.Add(this);
						this._SessionStatusId = value.Id;
					}
					else
					{
						this._SessionStatusId = default(int);
					}
					this.SendPropertyChanged("SessionStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActiveKey_Session", Storage="_ActiveKey", ThisKey="ActiveKeyId", OtherKey="Id", IsForeignKey=true)]
		public ActiveKey ActiveKey
		{
			get
			{
				return this._ActiveKey.Entity;
			}
			set
			{
				ActiveKey previousValue = this._ActiveKey.Entity;
				if (((previousValue != value) 
							|| (this._ActiveKey.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActiveKey.Entity = null;
						previousValue.Sessions.Remove(this);
					}
					this._ActiveKey.Entity = value;
					if ((value != null))
					{
						value.Sessions.Add(this);
						this._ActiveKeyId = value.Id;
					}
					else
					{
						this._ActiveKeyId = default(int);
					}
					this.SendPropertyChanged("ActiveKey");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alias_Session", Storage="_Alias", ThisKey="AliasId", OtherKey="Id", IsForeignKey=true)]
		public Alias Alias
		{
			get
			{
				return this._Alias.Entity;
			}
			set
			{
				Alias previousValue = this._Alias.Entity;
				if (((previousValue != value) 
							|| (this._Alias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alias.Entity = null;
						previousValue.Sessions.Remove(this);
					}
					this._Alias.Entity = value;
					if ((value != null))
					{
						value.Sessions.Add(this);
						this._AliasId = value.Id;
					}
					else
					{
						this._AliasId = default(int);
					}
					this.SendPropertyChanged("Alias");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Session", Storage="_Login", ThisKey="LoginId", OtherKey="Id", IsForeignKey=true)]
		public Login Login
		{
			get
			{
				return this._Login.Entity;
			}
			set
			{
				Login previousValue = this._Login.Entity;
				if (((previousValue != value) 
							|| (this._Login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Login.Entity = null;
						previousValue.Sessions.Remove(this);
					}
					this._Login.Entity = value;
					if ((value != null))
					{
						value.Sessions.Add(this);
						this._LoginId = value.Id;
					}
					else
					{
						this._LoginId = default(int);
					}
					this.SendPropertyChanged("Login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SessionStatus = default(EntityRef<SessionStatus>);
			this._ActiveKey = default(EntityRef<ActiveKey>);
			this._Alias = default(EntityRef<Alias>);
			this._Login = default(EntityRef<Login>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BanClass")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BanClass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<BanType> _BanTypes;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public BanClass()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BanClass_BanType", Storage="_BanTypes", ThisKey="Id", OtherKey="BanClassId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<BanType> BanTypes
		{
			get
			{
				if ((this.serializing 
							&& (this._BanTypes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BanTypes;
			}
			set
			{
				this._BanTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BanTypes(BanType entity)
		{
			this.SendPropertyChanging();
			entity.BanClass = this;
		}
		
		private void detach_BanTypes(BanType entity)
		{
			this.SendPropertyChanging();
			entity.BanClass = null;
		}
		
		private void Initialize()
		{
			this._BanTypes = new EntitySet<BanType>(new Action<BanType>(this.attach_BanTypes), new Action<BanType>(this.detach_BanTypes));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BanType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BanType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _RocNumber;
		
		private System.Nullable<int> _SrNumber;
		
		private string _Description;
		
		private int _BanClassId;
		
		private int _BaseTimeInMinutes;
		
		private System.Nullable<int> _InfractionsBeforePermanentBan;
		
		private bool _IsIncremental;
		
		private EntitySet<Ban> _Bans;
		
		private EntityRef<BanClass> _BanClass;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRocNumberChanging(System.Nullable<int> value);
    partial void OnRocNumberChanged();
    partial void OnSrNumberChanging(System.Nullable<int> value);
    partial void OnSrNumberChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnBanClassIdChanging(int value);
    partial void OnBanClassIdChanged();
    partial void OnBaseTimeInMinutesChanging(int value);
    partial void OnBaseTimeInMinutesChanged();
    partial void OnInfractionsBeforePermanentBanChanging(System.Nullable<int> value);
    partial void OnInfractionsBeforePermanentBanChanged();
    partial void OnIsIncrementalChanging(bool value);
    partial void OnIsIncrementalChanged();
    #endregion
		
		public BanType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RocNumber", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> RocNumber
		{
			get
			{
				return this._RocNumber;
			}
			set
			{
				if ((this._RocNumber != value))
				{
					this.OnRocNumberChanging(value);
					this.SendPropertyChanging();
					this._RocNumber = value;
					this.SendPropertyChanged("RocNumber");
					this.OnRocNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SrNumber", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> SrNumber
		{
			get
			{
				return this._SrNumber;
			}
			set
			{
				if ((this._SrNumber != value))
				{
					this.OnSrNumberChanging(value);
					this.SendPropertyChanging();
					this._SrNumber = value;
					this.SendPropertyChanged("SrNumber");
					this.OnSrNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BanClassId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int BanClassId
		{
			get
			{
				return this._BanClassId;
			}
			set
			{
				if ((this._BanClassId != value))
				{
					if (this._BanClass.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBanClassIdChanging(value);
					this.SendPropertyChanging();
					this._BanClassId = value;
					this.SendPropertyChanged("BanClassId");
					this.OnBanClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseTimeInMinutes", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int BaseTimeInMinutes
		{
			get
			{
				return this._BaseTimeInMinutes;
			}
			set
			{
				if ((this._BaseTimeInMinutes != value))
				{
					this.OnBaseTimeInMinutesChanging(value);
					this.SendPropertyChanging();
					this._BaseTimeInMinutes = value;
					this.SendPropertyChanged("BaseTimeInMinutes");
					this.OnBaseTimeInMinutesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfractionsBeforePermanentBan", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> InfractionsBeforePermanentBan
		{
			get
			{
				return this._InfractionsBeforePermanentBan;
			}
			set
			{
				if ((this._InfractionsBeforePermanentBan != value))
				{
					this.OnInfractionsBeforePermanentBanChanging(value);
					this.SendPropertyChanging();
					this._InfractionsBeforePermanentBan = value;
					this.SendPropertyChanged("InfractionsBeforePermanentBan");
					this.OnInfractionsBeforePermanentBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIncremental", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool IsIncremental
		{
			get
			{
				return this._IsIncremental;
			}
			set
			{
				if ((this._IsIncremental != value))
				{
					this.OnIsIncrementalChanging(value);
					this.SendPropertyChanging();
					this._IsIncremental = value;
					this.SendPropertyChanged("IsIncremental");
					this.OnIsIncrementalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BanType_Ban", Storage="_Bans", ThisKey="Id", OtherKey="BanTypeId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<Ban> Bans
		{
			get
			{
				if ((this.serializing 
							&& (this._Bans.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Bans;
			}
			set
			{
				this._Bans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BanClass_BanType", Storage="_BanClass", ThisKey="BanClassId", OtherKey="Id", IsForeignKey=true)]
		public BanClass BanClass
		{
			get
			{
				return this._BanClass.Entity;
			}
			set
			{
				BanClass previousValue = this._BanClass.Entity;
				if (((previousValue != value) 
							|| (this._BanClass.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BanClass.Entity = null;
						previousValue.BanTypes.Remove(this);
					}
					this._BanClass.Entity = value;
					if ((value != null))
					{
						value.BanTypes.Add(this);
						this._BanClassId = value.Id;
					}
					else
					{
						this._BanClassId = default(int);
					}
					this.SendPropertyChanged("BanClass");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bans(Ban entity)
		{
			this.SendPropertyChanging();
			entity.BanType = this;
		}
		
		private void detach_Bans(Ban entity)
		{
			this.SendPropertyChanging();
			entity.BanType = null;
		}
		
		private void Initialize()
		{
			this._Bans = new EntitySet<Ban>(new Action<Ban>(this.attach_Bans), new Action<Ban>(this.detach_Bans));
			this._BanClass = default(EntityRef<BanClass>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Login_UnlinkedLogin")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Login_UnlinkedLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _LoginId1;
		
		private int _LoginId2;
		
		private EntityRef<Login> _Login;
		
		private EntityRef<Login> _Login1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLoginId1Changing(int value);
    partial void OnLoginId1Changed();
    partial void OnLoginId2Changing(int value);
    partial void OnLoginId2Changed();
    #endregion
		
		public Login_UnlinkedLogin()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginId1", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int LoginId1
		{
			get
			{
				return this._LoginId1;
			}
			set
			{
				if ((this._LoginId1 != value))
				{
					if (this._Login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginId1Changing(value);
					this.SendPropertyChanging();
					this._LoginId1 = value;
					this.SendPropertyChanged("LoginId1");
					this.OnLoginId1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginId2", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int LoginId2
		{
			get
			{
				return this._LoginId2;
			}
			set
			{
				if ((this._LoginId2 != value))
				{
					if (this._Login1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginId2Changing(value);
					this.SendPropertyChanging();
					this._LoginId2 = value;
					this.SendPropertyChanged("LoginId2");
					this.OnLoginId2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Login_UnlinkedLogin", Storage="_Login", ThisKey="LoginId1", OtherKey="Id", IsForeignKey=true)]
		public Login Login
		{
			get
			{
				return this._Login.Entity;
			}
			set
			{
				Login previousValue = this._Login.Entity;
				if (((previousValue != value) 
							|| (this._Login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Login.Entity = null;
						previousValue.Login_UnlinkedLogins.Remove(this);
					}
					this._Login.Entity = value;
					if ((value != null))
					{
						value.Login_UnlinkedLogins.Add(this);
						this._LoginId1 = value.Id;
					}
					else
					{
						this._LoginId1 = default(int);
					}
					this.SendPropertyChanged("Login");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Login_UnlinkedLogin1", Storage="_Login1", ThisKey="LoginId2", OtherKey="Id", IsForeignKey=true)]
		public Login Login1
		{
			get
			{
				return this._Login1.Entity;
			}
			set
			{
				Login previousValue = this._Login1.Entity;
				if (((previousValue != value) 
							|| (this._Login1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Login1.Entity = null;
						previousValue.Login_UnlinkedLogins1.Remove(this);
					}
					this._Login1.Entity = value;
					if ((value != null))
					{
						value.Login_UnlinkedLogins1.Add(this);
						this._LoginId2 = value.Id;
					}
					else
					{
						this._LoginId2 = default(int);
					}
					this.SendPropertyChanged("Login1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Login = default(EntityRef<Login>);
			this._Login1 = default(EntityRef<Login>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Motd")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Motd : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Logo;
		
		private string _Banner;
		
		private string _PrimaryHeading;
		
		private string _PrimaryText;
		
		private string _SecondaryHeading;
		
		private string _SecondaryText;
		
		private string _Details;
		
		private int _PaddingCrCount;
		
		private System.DateTime _LastUpdated;
		
		private System.Nullable<int> _LobbyId;
		
		private EntityRef<Lobby> _Lobby;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLogoChanging(string value);
    partial void OnLogoChanged();
    partial void OnBannerChanging(string value);
    partial void OnBannerChanged();
    partial void OnPrimaryHeadingChanging(string value);
    partial void OnPrimaryHeadingChanged();
    partial void OnPrimaryTextChanging(string value);
    partial void OnPrimaryTextChanged();
    partial void OnSecondaryHeadingChanging(string value);
    partial void OnSecondaryHeadingChanged();
    partial void OnSecondaryTextChanging(string value);
    partial void OnSecondaryTextChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnPaddingCrCountChanging(int value);
    partial void OnPaddingCrCountChanged();
    partial void OnLastUpdatedChanging(System.DateTime value);
    partial void OnLastUpdatedChanged();
    partial void OnLobbyIdChanging(System.Nullable<int> value);
    partial void OnLobbyIdChanged();
    #endregion
		
		public Motd()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Banner", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Banner
		{
			get
			{
				return this._Banner;
			}
			set
			{
				if ((this._Banner != value))
				{
					this.OnBannerChanging(value);
					this.SendPropertyChanging();
					this._Banner = value;
					this.SendPropertyChanged("Banner");
					this.OnBannerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryHeading", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string PrimaryHeading
		{
			get
			{
				return this._PrimaryHeading;
			}
			set
			{
				if ((this._PrimaryHeading != value))
				{
					this.OnPrimaryHeadingChanging(value);
					this.SendPropertyChanging();
					this._PrimaryHeading = value;
					this.SendPropertyChanged("PrimaryHeading");
					this.OnPrimaryHeadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryText", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string PrimaryText
		{
			get
			{
				return this._PrimaryText;
			}
			set
			{
				if ((this._PrimaryText != value))
				{
					this.OnPrimaryTextChanging(value);
					this.SendPropertyChanging();
					this._PrimaryText = value;
					this.SendPropertyChanged("PrimaryText");
					this.OnPrimaryTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryHeading", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string SecondaryHeading
		{
			get
			{
				return this._SecondaryHeading;
			}
			set
			{
				if ((this._SecondaryHeading != value))
				{
					this.OnSecondaryHeadingChanging(value);
					this.SendPropertyChanging();
					this._SecondaryHeading = value;
					this.SendPropertyChanged("SecondaryHeading");
					this.OnSecondaryHeadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryText", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string SecondaryText
		{
			get
			{
				return this._SecondaryText;
			}
			set
			{
				if ((this._SecondaryText != value))
				{
					this.OnSecondaryTextChanging(value);
					this.SendPropertyChanging();
					this._SecondaryText = value;
					this.SendPropertyChanged("SecondaryText");
					this.OnSecondaryTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaddingCrCount", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int PaddingCrCount
		{
			get
			{
				return this._PaddingCrCount;
			}
			set
			{
				if ((this._PaddingCrCount != value))
				{
					this.OnPaddingCrCountChanging(value);
					this.SendPropertyChanging();
					this._PaddingCrCount = value;
					this.SendPropertyChanged("PaddingCrCount");
					this.OnPaddingCrCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.DateTime LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this.OnLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastUpdated = value;
					this.SendPropertyChanged("LastUpdated");
					this.OnLastUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LobbyId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> LobbyId
		{
			get
			{
				return this._LobbyId;
			}
			set
			{
				if ((this._LobbyId != value))
				{
					if (this._Lobby.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLobbyIdChanging(value);
					this.SendPropertyChanging();
					this._LobbyId = value;
					this.SendPropertyChanged("LobbyId");
					this.OnLobbyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lobby_Motd", Storage="_Lobby", ThisKey="LobbyId", OtherKey="Id", IsForeignKey=true)]
		public Lobby Lobby
		{
			get
			{
				return this._Lobby.Entity;
			}
			set
			{
				Lobby previousValue = this._Lobby.Entity;
				if (((previousValue != value) 
							|| (this._Lobby.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lobby.Entity = null;
						previousValue.Motds.Remove(this);
					}
					this._Lobby.Entity = value;
					if ((value != null))
					{
						value.Motds.Add(this);
						this._LobbyId = value.Id;
					}
					else
					{
						this._LobbyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Lobby");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Lobby = default(EntityRef<Lobby>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Captcha")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Captcha : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Answer;
		
		private System.DateTime _DateCreated;
		
		private string _IpAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnIpAddressChanging(string value);
    partial void OnIpAddressChanged();
    #endregion
		
		public Captcha()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IpAddress", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string IpAddress
		{
			get
			{
				return this._IpAddress;
			}
			set
			{
				if ((this._IpAddress != value))
				{
					this.OnIpAddressChanging(value);
					this.SendPropertyChanging();
					this._IpAddress = value;
					this.SendPropertyChanged("IpAddress");
					this.OnIpAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupMessage_Alias")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class GroupMessage_Alias : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupMessageId;
		
		private int _AliasId;
		
		private System.Nullable<System.DateTime> _DateViewed;
		
		private EntityRef<GroupMessage> _GroupMessage;
		
		private EntityRef<Alias> _Alias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupMessageIdChanging(int value);
    partial void OnGroupMessageIdChanged();
    partial void OnAliasIdChanging(int value);
    partial void OnAliasIdChanged();
    partial void OnDateViewedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateViewedChanged();
    #endregion
		
		public GroupMessage_Alias()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupMessageId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int GroupMessageId
		{
			get
			{
				return this._GroupMessageId;
			}
			set
			{
				if ((this._GroupMessageId != value))
				{
					if (this._GroupMessage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupMessageIdChanging(value);
					this.SendPropertyChanging();
					this._GroupMessageId = value;
					this.SendPropertyChanged("GroupMessageId");
					this.OnGroupMessageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AliasId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AliasId
		{
			get
			{
				return this._AliasId;
			}
			set
			{
				if ((this._AliasId != value))
				{
					if (this._Alias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAliasIdChanging(value);
					this.SendPropertyChanging();
					this._AliasId = value;
					this.SendPropertyChanged("AliasId");
					this.OnAliasIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateViewed", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> DateViewed
		{
			get
			{
				return this._DateViewed;
			}
			set
			{
				if ((this._DateViewed != value))
				{
					this.OnDateViewedChanging(value);
					this.SendPropertyChanging();
					this._DateViewed = value;
					this.SendPropertyChanged("DateViewed");
					this.OnDateViewedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupMessage_GroupMessage_Alias", Storage="_GroupMessage", ThisKey="GroupMessageId", OtherKey="Id", IsForeignKey=true)]
		public GroupMessage GroupMessage
		{
			get
			{
				return this._GroupMessage.Entity;
			}
			set
			{
				GroupMessage previousValue = this._GroupMessage.Entity;
				if (((previousValue != value) 
							|| (this._GroupMessage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GroupMessage.Entity = null;
						previousValue.GroupMessage_Alias.Remove(this);
					}
					this._GroupMessage.Entity = value;
					if ((value != null))
					{
						value.GroupMessage_Alias.Add(this);
						this._GroupMessageId = value.Id;
					}
					else
					{
						this._GroupMessageId = default(int);
					}
					this.SendPropertyChanged("GroupMessage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alias_GroupMessage_Alias", Storage="_Alias", ThisKey="AliasId", OtherKey="Id", IsForeignKey=true)]
		public Alias Alias
		{
			get
			{
				return this._Alias.Entity;
			}
			set
			{
				Alias previousValue = this._Alias.Entity;
				if (((previousValue != value) 
							|| (this._Alias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alias.Entity = null;
						previousValue.GroupMessage_Alias.Remove(this);
					}
					this._Alias.Entity = value;
					if ((value != null))
					{
						value.GroupMessage_Alias.Add(this);
						this._AliasId = value.Id;
					}
					else
					{
						this._AliasId = default(int);
					}
					this.SendPropertyChanged("Alias");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._GroupMessage = default(EntityRef<GroupMessage>);
			this._Alias = default(EntityRef<Alias>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PollVote")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PollVote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PollOptionId;
		
		private int _LoginId;
		
		private EntityRef<PollOption> _PollOption;
		
		private EntityRef<Login> _Login;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPollOptionIdChanging(int value);
    partial void OnPollOptionIdChanged();
    partial void OnLoginIdChanging(int value);
    partial void OnLoginIdChanged();
    #endregion
		
		public PollVote()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollOptionId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int PollOptionId
		{
			get
			{
				return this._PollOptionId;
			}
			set
			{
				if ((this._PollOptionId != value))
				{
					if (this._PollOption.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPollOptionIdChanging(value);
					this.SendPropertyChanging();
					this._PollOptionId = value;
					this.SendPropertyChanged("PollOptionId");
					this.OnPollOptionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int LoginId
		{
			get
			{
				return this._LoginId;
			}
			set
			{
				if ((this._LoginId != value))
				{
					if (this._Login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginIdChanging(value);
					this.SendPropertyChanging();
					this._LoginId = value;
					this.SendPropertyChanged("LoginId");
					this.OnLoginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PollOption_PollVote", Storage="_PollOption", ThisKey="PollOptionId", OtherKey="Id", IsForeignKey=true)]
		public PollOption PollOption
		{
			get
			{
				return this._PollOption.Entity;
			}
			set
			{
				PollOption previousValue = this._PollOption.Entity;
				if (((previousValue != value) 
							|| (this._PollOption.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PollOption.Entity = null;
						previousValue.PollVotes.Remove(this);
					}
					this._PollOption.Entity = value;
					if ((value != null))
					{
						value.PollVotes.Add(this);
						this._PollOptionId = value.Id;
					}
					else
					{
						this._PollOptionId = default(int);
					}
					this.SendPropertyChanged("PollOption");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_PollVote", Storage="_Login", ThisKey="LoginId", OtherKey="Id", IsForeignKey=true)]
		public Login Login
		{
			get
			{
				return this._Login.Entity;
			}
			set
			{
				Login previousValue = this._Login.Entity;
				if (((previousValue != value) 
							|| (this._Login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Login.Entity = null;
						previousValue.PollVotes.Remove(this);
					}
					this._Login.Entity = value;
					if ((value != null))
					{
						value.PollVotes.Add(this);
						this._LoginId = value.Id;
					}
					else
					{
						this._LoginId = default(int);
					}
					this.SendPropertyChanged("Login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._PollOption = default(EntityRef<PollOption>);
			this._Login = default(EntityRef<Login>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MachineRecord")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MachineRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _RecordTypeId;
		
		private string _Identifier;
		
		private int _LoginId;
		
		private EntityRef<MachineRecordType> _MachineRecordType;
		
		private EntityRef<Login> _Login;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnRecordTypeIdChanging(int value);
    partial void OnRecordTypeIdChanged();
    partial void OnIdentifierChanging(string value);
    partial void OnIdentifierChanged();
    partial void OnLoginIdChanging(int value);
    partial void OnLoginIdChanged();
    #endregion
		
		public MachineRecord()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordTypeId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int RecordTypeId
		{
			get
			{
				return this._RecordTypeId;
			}
			set
			{
				if ((this._RecordTypeId != value))
				{
					if (this._MachineRecordType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecordTypeIdChanging(value);
					this.SendPropertyChanging();
					this._RecordTypeId = value;
					this.SendPropertyChanged("RecordTypeId");
					this.OnRecordTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Identifier", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Identifier
		{
			get
			{
				return this._Identifier;
			}
			set
			{
				if ((this._Identifier != value))
				{
					this.OnIdentifierChanging(value);
					this.SendPropertyChanging();
					this._Identifier = value;
					this.SendPropertyChanged("Identifier");
					this.OnIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int LoginId
		{
			get
			{
				return this._LoginId;
			}
			set
			{
				if ((this._LoginId != value))
				{
					if (this._Login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginIdChanging(value);
					this.SendPropertyChanging();
					this._LoginId = value;
					this.SendPropertyChanged("LoginId");
					this.OnLoginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MachineRecordType_MachineRecord", Storage="_MachineRecordType", ThisKey="RecordTypeId", OtherKey="Id", IsForeignKey=true)]
		public MachineRecordType MachineRecordType
		{
			get
			{
				return this._MachineRecordType.Entity;
			}
			set
			{
				MachineRecordType previousValue = this._MachineRecordType.Entity;
				if (((previousValue != value) 
							|| (this._MachineRecordType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MachineRecordType.Entity = null;
						previousValue.MachineRecords.Remove(this);
					}
					this._MachineRecordType.Entity = value;
					if ((value != null))
					{
						value.MachineRecords.Add(this);
						this._RecordTypeId = value.Id;
					}
					else
					{
						this._RecordTypeId = default(int);
					}
					this.SendPropertyChanged("MachineRecordType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_MachineRecord", Storage="_Login", ThisKey="LoginId", OtherKey="Id", IsForeignKey=true)]
		public Login Login
		{
			get
			{
				return this._Login.Entity;
			}
			set
			{
				Login previousValue = this._Login.Entity;
				if (((previousValue != value) 
							|| (this._Login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Login.Entity = null;
						previousValue.MachineRecords.Remove(this);
					}
					this._Login.Entity = value;
					if ((value != null))
					{
						value.MachineRecords.Add(this);
						this._LoginId = value.Id;
					}
					else
					{
						this._LoginId = default(int);
					}
					this.SendPropertyChanged("Login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._MachineRecordType = default(EntityRef<MachineRecordType>);
			this._Login = default(EntityRef<Login>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersonalMessage")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PersonalMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Subject;
		
		private string _Message;
		
		private System.DateTime _DateCreated;
		
		private System.DateTime _DateToSend;
		
		private System.Nullable<System.DateTime> _DateExpires;
		
		private int _LoginId;
		
		private System.Nullable<System.DateTime> _DateViewed;
		
		private int _SenderAliasId;
		
		private EntityRef<Alias> _Alias;
		
		private EntityRef<Login> _Login;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateToSendChanging(System.DateTime value);
    partial void OnDateToSendChanged();
    partial void OnDateExpiresChanging(System.Nullable<System.DateTime> value);
    partial void OnDateExpiresChanged();
    partial void OnLoginIdChanging(int value);
    partial void OnLoginIdChanged();
    partial void OnDateViewedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateViewedChanged();
    partial void OnSenderAliasIdChanging(int value);
    partial void OnSenderAliasIdChanged();
    #endregion
		
		public PersonalMessage()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateToSend", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime DateToSend
		{
			get
			{
				return this._DateToSend;
			}
			set
			{
				if ((this._DateToSend != value))
				{
					this.OnDateToSendChanging(value);
					this.SendPropertyChanging();
					this._DateToSend = value;
					this.SendPropertyChanged("DateToSend");
					this.OnDateToSendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateExpires", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> DateExpires
		{
			get
			{
				return this._DateExpires;
			}
			set
			{
				if ((this._DateExpires != value))
				{
					this.OnDateExpiresChanging(value);
					this.SendPropertyChanging();
					this._DateExpires = value;
					this.SendPropertyChanged("DateExpires");
					this.OnDateExpiresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int LoginId
		{
			get
			{
				return this._LoginId;
			}
			set
			{
				if ((this._LoginId != value))
				{
					if (this._Login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginIdChanging(value);
					this.SendPropertyChanging();
					this._LoginId = value;
					this.SendPropertyChanged("LoginId");
					this.OnLoginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateViewed", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.DateTime> DateViewed
		{
			get
			{
				return this._DateViewed;
			}
			set
			{
				if ((this._DateViewed != value))
				{
					this.OnDateViewedChanging(value);
					this.SendPropertyChanging();
					this._DateViewed = value;
					this.SendPropertyChanged("DateViewed");
					this.OnDateViewedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderAliasId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int SenderAliasId
		{
			get
			{
				return this._SenderAliasId;
			}
			set
			{
				if ((this._SenderAliasId != value))
				{
					if (this._Alias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSenderAliasIdChanging(value);
					this.SendPropertyChanging();
					this._SenderAliasId = value;
					this.SendPropertyChanged("SenderAliasId");
					this.OnSenderAliasIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alias_PersonalMessage", Storage="_Alias", ThisKey="SenderAliasId", OtherKey="Id", IsForeignKey=true)]
		public Alias Alias
		{
			get
			{
				return this._Alias.Entity;
			}
			set
			{
				Alias previousValue = this._Alias.Entity;
				if (((previousValue != value) 
							|| (this._Alias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alias.Entity = null;
						previousValue.PersonalMessages.Remove(this);
					}
					this._Alias.Entity = value;
					if ((value != null))
					{
						value.PersonalMessages.Add(this);
						this._SenderAliasId = value.Id;
					}
					else
					{
						this._SenderAliasId = default(int);
					}
					this.SendPropertyChanged("Alias");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_PersonalMessage", Storage="_Login", ThisKey="LoginId", OtherKey="Id", IsForeignKey=true)]
		public Login Login
		{
			get
			{
				return this._Login.Entity;
			}
			set
			{
				Login previousValue = this._Login.Entity;
				if (((previousValue != value) 
							|| (this._Login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Login.Entity = null;
						previousValue.PersonalMessages.Remove(this);
					}
					this._Login.Entity = value;
					if ((value != null))
					{
						value.PersonalMessages.Add(this);
						this._LoginId = value.Id;
					}
					else
					{
						this._LoginId = default(int);
					}
					this.SendPropertyChanged("Login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Alias = default(EntityRef<Alias>);
			this._Login = default(EntityRef<Login>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActiveKey")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ActiveKey : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Token;
		
		private string _Filename;
		
		private System.DateTime _DateCreated;
		
		private System.Data.Linq.Binary _RSACspBlob;
		
		private int _TransformMethodId;
		
		private bool _IsValid;
		
		private EntitySet<UsedKey> _UsedKeys;
		
		private EntitySet<Session> _Sessions;
		
		private EntityRef<TransformMethod> _TransformMethod;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTokenChanging(string value);
    partial void OnTokenChanged();
    partial void OnFilenameChanging(string value);
    partial void OnFilenameChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnRSACspBlobChanging(System.Data.Linq.Binary value);
    partial void OnRSACspBlobChanged();
    partial void OnTransformMethodIdChanging(int value);
    partial void OnTransformMethodIdChanged();
    partial void OnIsValidChanging(bool value);
    partial void OnIsValidChanged();
    #endregion
		
		public ActiveKey()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="NVarChar(95) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filename", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Filename
		{
			get
			{
				return this._Filename;
			}
			set
			{
				if ((this._Filename != value))
				{
					this.OnFilenameChanging(value);
					this.SendPropertyChanging();
					this._Filename = value;
					this.SendPropertyChanged("Filename");
					this.OnFilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RSACspBlob", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Data.Linq.Binary RSACspBlob
		{
			get
			{
				return this._RSACspBlob;
			}
			set
			{
				if ((this._RSACspBlob != value))
				{
					this.OnRSACspBlobChanging(value);
					this.SendPropertyChanging();
					this._RSACspBlob = value;
					this.SendPropertyChanged("RSACspBlob");
					this.OnRSACspBlobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransformMethodId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int TransformMethodId
		{
			get
			{
				return this._TransformMethodId;
			}
			set
			{
				if ((this._TransformMethodId != value))
				{
					if (this._TransformMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransformMethodIdChanging(value);
					this.SendPropertyChanging();
					this._TransformMethodId = value;
					this.SendPropertyChanged("TransformMethodId");
					this.OnTransformMethodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsValid", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool IsValid
		{
			get
			{
				return this._IsValid;
			}
			set
			{
				if ((this._IsValid != value))
				{
					this.OnIsValidChanging(value);
					this.SendPropertyChanging();
					this._IsValid = value;
					this.SendPropertyChanged("IsValid");
					this.OnIsValidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActiveKey_UsedKey", Storage="_UsedKeys", ThisKey="Id", OtherKey="ActiveKeyId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<UsedKey> UsedKeys
		{
			get
			{
				if ((this.serializing 
							&& (this._UsedKeys.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UsedKeys;
			}
			set
			{
				this._UsedKeys.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActiveKey_Session", Storage="_Sessions", ThisKey="Id", OtherKey="ActiveKeyId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<Session> Sessions
		{
			get
			{
				if ((this.serializing 
							&& (this._Sessions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Sessions;
			}
			set
			{
				this._Sessions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransformMethod_ActiveKey", Storage="_TransformMethod", ThisKey="TransformMethodId", OtherKey="Id", IsForeignKey=true)]
		public TransformMethod TransformMethod
		{
			get
			{
				return this._TransformMethod.Entity;
			}
			set
			{
				TransformMethod previousValue = this._TransformMethod.Entity;
				if (((previousValue != value) 
							|| (this._TransformMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransformMethod.Entity = null;
						previousValue.ActiveKeys.Remove(this);
					}
					this._TransformMethod.Entity = value;
					if ((value != null))
					{
						value.ActiveKeys.Add(this);
						this._TransformMethodId = value.Id;
					}
					else
					{
						this._TransformMethodId = default(int);
					}
					this.SendPropertyChanged("TransformMethod");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UsedKeys(UsedKey entity)
		{
			this.SendPropertyChanging();
			entity.ActiveKey = this;
		}
		
		private void detach_UsedKeys(UsedKey entity)
		{
			this.SendPropertyChanging();
			entity.ActiveKey = null;
		}
		
		private void attach_Sessions(Session entity)
		{
			this.SendPropertyChanging();
			entity.ActiveKey = this;
		}
		
		private void detach_Sessions(Session entity)
		{
			this.SendPropertyChanging();
			entity.ActiveKey = null;
		}
		
		private void Initialize()
		{
			this._UsedKeys = new EntitySet<UsedKey>(new Action<UsedKey>(this.attach_UsedKeys), new Action<UsedKey>(this.detach_UsedKeys));
			this._Sessions = new EntitySet<Session>(new Action<Session>(this.attach_Sessions), new Action<Session>(this.detach_Sessions));
			this._TransformMethod = default(EntityRef<TransformMethod>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PollOption")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PollOption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PollId;
		
		private string _Option;
		
		private int _VoteCount;
		
		private EntitySet<PollVote> _PollVotes;
		
		private EntityRef<Poll> _Poll;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPollIdChanging(int value);
    partial void OnPollIdChanged();
    partial void OnOptionChanging(string value);
    partial void OnOptionChanged();
    partial void OnVoteCountChanging(int value);
    partial void OnVoteCountChanged();
    #endregion
		
		public PollOption()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int PollId
		{
			get
			{
				return this._PollId;
			}
			set
			{
				if ((this._PollId != value))
				{
					if (this._Poll.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPollIdChanging(value);
					this.SendPropertyChanging();
					this._PollId = value;
					this.SendPropertyChanged("PollId");
					this.OnPollIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Option]", Storage="_Option", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Option
		{
			get
			{
				return this._Option;
			}
			set
			{
				if ((this._Option != value))
				{
					this.OnOptionChanging(value);
					this.SendPropertyChanging();
					this._Option = value;
					this.SendPropertyChanged("Option");
					this.OnOptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoteCount", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int VoteCount
		{
			get
			{
				return this._VoteCount;
			}
			set
			{
				if ((this._VoteCount != value))
				{
					this.OnVoteCountChanging(value);
					this.SendPropertyChanging();
					this._VoteCount = value;
					this.SendPropertyChanged("VoteCount");
					this.OnVoteCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PollOption_PollVote", Storage="_PollVotes", ThisKey="Id", OtherKey="PollOptionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<PollVote> PollVotes
		{
			get
			{
				if ((this.serializing 
							&& (this._PollVotes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PollVotes;
			}
			set
			{
				this._PollVotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Poll_PollOption", Storage="_Poll", ThisKey="PollId", OtherKey="Id", IsForeignKey=true)]
		public Poll Poll
		{
			get
			{
				return this._Poll.Entity;
			}
			set
			{
				Poll previousValue = this._Poll.Entity;
				if (((previousValue != value) 
							|| (this._Poll.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Poll.Entity = null;
						previousValue.PollOptions.Remove(this);
					}
					this._Poll.Entity = value;
					if ((value != null))
					{
						value.PollOptions.Add(this);
						this._PollId = value.Id;
					}
					else
					{
						this._PollId = default(int);
					}
					this.SendPropertyChanged("Poll");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PollVotes(PollVote entity)
		{
			this.SendPropertyChanging();
			entity.PollOption = this;
		}
		
		private void detach_PollVotes(PollVote entity)
		{
			this.SendPropertyChanging();
			entity.PollOption = null;
		}
		
		private void Initialize()
		{
			this._PollVotes = new EntitySet<PollVote>(new Action<PollVote>(this.attach_PollVotes), new Action<PollVote>(this.detach_PollVotes));
			this._Poll = default(EntityRef<Poll>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Poll")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Poll : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Question;
		
		private System.DateTime _DateCreated;
		
		private System.DateTime _DateExpires;
		
		private System.DateTime _LastRecalculation;
		
		private EntitySet<PollOption> _PollOptions;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnQuestionChanging(string value);
    partial void OnQuestionChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateExpiresChanging(System.DateTime value);
    partial void OnDateExpiresChanged();
    partial void OnLastRecalculationChanging(System.DateTime value);
    partial void OnLastRecalculationChanged();
    #endregion
		
		public Poll()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Question
		{
			get
			{
				return this._Question;
			}
			set
			{
				if ((this._Question != value))
				{
					this.OnQuestionChanging(value);
					this.SendPropertyChanging();
					this._Question = value;
					this.SendPropertyChanged("Question");
					this.OnQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateExpires", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime DateExpires
		{
			get
			{
				return this._DateExpires;
			}
			set
			{
				if ((this._DateExpires != value))
				{
					this.OnDateExpiresChanging(value);
					this.SendPropertyChanging();
					this._DateExpires = value;
					this.SendPropertyChanged("DateExpires");
					this.OnDateExpiresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRecalculation", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime LastRecalculation
		{
			get
			{
				return this._LastRecalculation;
			}
			set
			{
				if ((this._LastRecalculation != value))
				{
					this.OnLastRecalculationChanging(value);
					this.SendPropertyChanging();
					this._LastRecalculation = value;
					this.SendPropertyChanged("LastRecalculation");
					this.OnLastRecalculationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Poll_PollOption", Storage="_PollOptions", ThisKey="Id", OtherKey="PollId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<PollOption> PollOptions
		{
			get
			{
				if ((this.serializing 
							&& (this._PollOptions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PollOptions;
			}
			set
			{
				this._PollOptions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PollOptions(PollOption entity)
		{
			this.SendPropertyChanging();
			entity.Poll = this;
		}
		
		private void detach_PollOptions(PollOption entity)
		{
			this.SendPropertyChanging();
			entity.Poll = null;
		}
		
		private void Initialize()
		{
			this._PollOptions = new EntitySet<PollOption>(new Action<PollOption>(this.attach_PollOptions), new Action<PollOption>(this.detach_PollOptions));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupMessage")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class GroupMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Subject;
		
		private string _Message;
		
		private System.Nullable<int> _GroupId;
		
		private System.DateTime _DateCreated;
		
		private System.DateTime _DateToSend;
		
		private System.Nullable<System.DateTime> _DateExpires;
		
		private int _SenderAliasId;
		
		private EntitySet<GroupMessage_Alias> _GroupMessage_Alias;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<Alias> _Alias;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnGroupIdChanging(System.Nullable<int> value);
    partial void OnGroupIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateToSendChanging(System.DateTime value);
    partial void OnDateToSendChanged();
    partial void OnDateExpiresChanging(System.Nullable<System.DateTime> value);
    partial void OnDateExpiresChanged();
    partial void OnSenderAliasIdChanging(int value);
    partial void OnSenderAliasIdChanged();
    #endregion
		
		public GroupMessage()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateToSend", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime DateToSend
		{
			get
			{
				return this._DateToSend;
			}
			set
			{
				if ((this._DateToSend != value))
				{
					this.OnDateToSendChanging(value);
					this.SendPropertyChanging();
					this._DateToSend = value;
					this.SendPropertyChanged("DateToSend");
					this.OnDateToSendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateExpires", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> DateExpires
		{
			get
			{
				return this._DateExpires;
			}
			set
			{
				if ((this._DateExpires != value))
				{
					this.OnDateExpiresChanging(value);
					this.SendPropertyChanging();
					this._DateExpires = value;
					this.SendPropertyChanged("DateExpires");
					this.OnDateExpiresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderAliasId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public int SenderAliasId
		{
			get
			{
				return this._SenderAliasId;
			}
			set
			{
				if ((this._SenderAliasId != value))
				{
					if (this._Alias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSenderAliasIdChanging(value);
					this.SendPropertyChanging();
					this._SenderAliasId = value;
					this.SendPropertyChanged("SenderAliasId");
					this.OnSenderAliasIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupMessage_GroupMessage_Alias", Storage="_GroupMessage_Alias", ThisKey="Id", OtherKey="GroupMessageId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<GroupMessage_Alias> GroupMessage_Alias
		{
			get
			{
				if ((this.serializing 
							&& (this._GroupMessage_Alias.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._GroupMessage_Alias;
			}
			set
			{
				this._GroupMessage_Alias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupMessage", Storage="_Group", ThisKey="GroupId", OtherKey="Id", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.GroupMessages.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.GroupMessages.Add(this);
						this._GroupId = value.Id;
					}
					else
					{
						this._GroupId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alias_GroupMessage", Storage="_Alias", ThisKey="SenderAliasId", OtherKey="Id", IsForeignKey=true)]
		public Alias Alias
		{
			get
			{
				return this._Alias.Entity;
			}
			set
			{
				Alias previousValue = this._Alias.Entity;
				if (((previousValue != value) 
							|| (this._Alias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alias.Entity = null;
						previousValue.GroupMessages.Remove(this);
					}
					this._Alias.Entity = value;
					if ((value != null))
					{
						value.GroupMessages.Add(this);
						this._SenderAliasId = value.Id;
					}
					else
					{
						this._SenderAliasId = default(int);
					}
					this.SendPropertyChanged("Alias");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GroupMessage_Alias(GroupMessage_Alias entity)
		{
			this.SendPropertyChanging();
			entity.GroupMessage = this;
		}
		
		private void detach_GroupMessage_Alias(GroupMessage_Alias entity)
		{
			this.SendPropertyChanging();
			entity.GroupMessage = null;
		}
		
		private void Initialize()
		{
			this._GroupMessage_Alias = new EntitySet<GroupMessage_Alias>(new Action<GroupMessage_Alias>(this.attach_GroupMessage_Alias), new Action<GroupMessage_Alias>(this.detach_GroupMessage_Alias));
			this._Group = default(EntityRef<Group>);
			this._Alias = default(EntityRef<Alias>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Identity]")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Identity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _DateLastLogin;
		
		private System.DateTime _LastGlobalMessageDelivery;
		
		private EntitySet<Login> _Logins;
		
		private EntitySet<LogIP> _LogIPs;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateLastLoginChanging(System.DateTime value);
    partial void OnDateLastLoginChanged();
    partial void OnLastGlobalMessageDeliveryChanging(System.DateTime value);
    partial void OnLastGlobalMessageDeliveryChanged();
    #endregion
		
		public Identity()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastLogin", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.DateTime DateLastLogin
		{
			get
			{
				return this._DateLastLogin;
			}
			set
			{
				if ((this._DateLastLogin != value))
				{
					this.OnDateLastLoginChanging(value);
					this.SendPropertyChanging();
					this._DateLastLogin = value;
					this.SendPropertyChanged("DateLastLogin");
					this.OnDateLastLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastGlobalMessageDelivery", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime LastGlobalMessageDelivery
		{
			get
			{
				return this._LastGlobalMessageDelivery;
			}
			set
			{
				if ((this._LastGlobalMessageDelivery != value))
				{
					this.OnLastGlobalMessageDeliveryChanging(value);
					this.SendPropertyChanging();
					this._LastGlobalMessageDelivery = value;
					this.SendPropertyChanged("LastGlobalMessageDelivery");
					this.OnLastGlobalMessageDeliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Identity_Login", Storage="_Logins", ThisKey="Id", OtherKey="IdentityId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<Login> Logins
		{
			get
			{
				if ((this.serializing 
							&& (this._Logins.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Logins;
			}
			set
			{
				this._Logins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Identity_LogIP", Storage="_LogIPs", ThisKey="Id", OtherKey="IdentityId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<LogIP> LogIPs
		{
			get
			{
				if ((this.serializing 
							&& (this._LogIPs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._LogIPs;
			}
			set
			{
				this._LogIPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Logins(Login entity)
		{
			this.SendPropertyChanging();
			entity.Identity = this;
		}
		
		private void detach_Logins(Login entity)
		{
			this.SendPropertyChanging();
			entity.Identity = null;
		}
		
		private void attach_LogIPs(LogIP entity)
		{
			this.SendPropertyChanging();
			entity.Identity = this;
		}
		
		private void detach_LogIPs(LogIP entity)
		{
			this.SendPropertyChanging();
			entity.Identity = null;
		}
		
		private void Initialize()
		{
			this._Logins = new EntitySet<Login>(new Action<Login>(this.attach_Logins), new Action<Login>(this.detach_Logins));
			this._LogIPs = new EntitySet<LogIP>(new Action<LogIP>(this.attach_LogIPs), new Action<LogIP>(this.detach_LogIPs));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Alias")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Alias : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _LoginId;
		
		private string _Callsign;
		
		private bool _IsDefault;
		
		private bool _IsActive;
		
		private System.DateTime _DateCreated;
		
		private EntitySet<Group_Alias_GroupRole> _Group_Alias_GroupRoles;
		
		private EntitySet<GroupRequest> _GroupRequests;
		
		private EntitySet<Session> _Sessions;
		
		private EntitySet<GroupMessage_Alias> _GroupMessage_Alias;
		
		private EntitySet<PersonalMessage> _PersonalMessages;
		
		private EntitySet<GroupMessage> _GroupMessages;
		
		private EntitySet<Ban> _Bans;
		
		private EntitySet<AliasBank> _AliasBanks;
		
		private EntityRef<Login> _Login;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLoginIdChanging(int value);
    partial void OnLoginIdChanged();
    partial void OnCallsignChanging(string value);
    partial void OnCallsignChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public Alias()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int LoginId
		{
			get
			{
				return this._LoginId;
			}
			set
			{
				if ((this._LoginId != value))
				{
					if (this._Login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginIdChanging(value);
					this.SendPropertyChanging();
					this._LoginId = value;
					this.SendPropertyChanged("LoginId");
					this.OnLoginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Callsign", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Callsign
		{
			get
			{
				return this._Callsign;
			}
			set
			{
				if ((this._Callsign != value))
				{
					this.OnCallsignChanging(value);
					this.SendPropertyChanging();
					this._Callsign = value;
					this.SendPropertyChanged("Callsign");
					this.OnCallsignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alias_Group_Alias_GroupRole", Storage="_Group_Alias_GroupRoles", ThisKey="Id", OtherKey="AliasId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<Group_Alias_GroupRole> Group_Alias_GroupRoles
		{
			get
			{
				if ((this.serializing 
							&& (this._Group_Alias_GroupRoles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Group_Alias_GroupRoles;
			}
			set
			{
				this._Group_Alias_GroupRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alias_GroupRequest", Storage="_GroupRequests", ThisKey="Id", OtherKey="AliasId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<GroupRequest> GroupRequests
		{
			get
			{
				if ((this.serializing 
							&& (this._GroupRequests.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._GroupRequests;
			}
			set
			{
				this._GroupRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alias_Session", Storage="_Sessions", ThisKey="Id", OtherKey="AliasId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<Session> Sessions
		{
			get
			{
				if ((this.serializing 
							&& (this._Sessions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Sessions;
			}
			set
			{
				this._Sessions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alias_GroupMessage_Alias", Storage="_GroupMessage_Alias", ThisKey="Id", OtherKey="AliasId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<GroupMessage_Alias> GroupMessage_Alias
		{
			get
			{
				if ((this.serializing 
							&& (this._GroupMessage_Alias.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._GroupMessage_Alias;
			}
			set
			{
				this._GroupMessage_Alias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alias_PersonalMessage", Storage="_PersonalMessages", ThisKey="Id", OtherKey="SenderAliasId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<PersonalMessage> PersonalMessages
		{
			get
			{
				if ((this.serializing 
							&& (this._PersonalMessages.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PersonalMessages;
			}
			set
			{
				this._PersonalMessages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alias_GroupMessage", Storage="_GroupMessages", ThisKey="Id", OtherKey="SenderAliasId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<GroupMessage> GroupMessages
		{
			get
			{
				if ((this.serializing 
							&& (this._GroupMessages.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._GroupMessages;
			}
			set
			{
				this._GroupMessages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alias_Ban", Storage="_Bans", ThisKey="Id", OtherKey="AliasID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<Ban> Bans
		{
			get
			{
				if ((this.serializing 
							&& (this._Bans.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Bans;
			}
			set
			{
				this._Bans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alias_AliasBank", Storage="_AliasBanks", ThisKey="Id", OtherKey="AliasId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<AliasBank> AliasBanks
		{
			get
			{
				if ((this.serializing 
							&& (this._AliasBanks.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AliasBanks;
			}
			set
			{
				this._AliasBanks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Alias", Storage="_Login", ThisKey="LoginId", OtherKey="Id", IsForeignKey=true)]
		public Login Login
		{
			get
			{
				return this._Login.Entity;
			}
			set
			{
				Login previousValue = this._Login.Entity;
				if (((previousValue != value) 
							|| (this._Login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Login.Entity = null;
						previousValue.Aliases.Remove(this);
					}
					this._Login.Entity = value;
					if ((value != null))
					{
						value.Aliases.Add(this);
						this._LoginId = value.Id;
					}
					else
					{
						this._LoginId = default(int);
					}
					this.SendPropertyChanged("Login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Group_Alias_GroupRoles(Group_Alias_GroupRole entity)
		{
			this.SendPropertyChanging();
			entity.Alias = this;
		}
		
		private void detach_Group_Alias_GroupRoles(Group_Alias_GroupRole entity)
		{
			this.SendPropertyChanging();
			entity.Alias = null;
		}
		
		private void attach_GroupRequests(GroupRequest entity)
		{
			this.SendPropertyChanging();
			entity.Alias = this;
		}
		
		private void detach_GroupRequests(GroupRequest entity)
		{
			this.SendPropertyChanging();
			entity.Alias = null;
		}
		
		private void attach_Sessions(Session entity)
		{
			this.SendPropertyChanging();
			entity.Alias = this;
		}
		
		private void detach_Sessions(Session entity)
		{
			this.SendPropertyChanging();
			entity.Alias = null;
		}
		
		private void attach_GroupMessage_Alias(GroupMessage_Alias entity)
		{
			this.SendPropertyChanging();
			entity.Alias = this;
		}
		
		private void detach_GroupMessage_Alias(GroupMessage_Alias entity)
		{
			this.SendPropertyChanging();
			entity.Alias = null;
		}
		
		private void attach_PersonalMessages(PersonalMessage entity)
		{
			this.SendPropertyChanging();
			entity.Alias = this;
		}
		
		private void detach_PersonalMessages(PersonalMessage entity)
		{
			this.SendPropertyChanging();
			entity.Alias = null;
		}
		
		private void attach_GroupMessages(GroupMessage entity)
		{
			this.SendPropertyChanging();
			entity.Alias = this;
		}
		
		private void detach_GroupMessages(GroupMessage entity)
		{
			this.SendPropertyChanging();
			entity.Alias = null;
		}
		
		private void attach_Bans(Ban entity)
		{
			this.SendPropertyChanging();
			entity.Alias = this;
		}
		
		private void detach_Bans(Ban entity)
		{
			this.SendPropertyChanging();
			entity.Alias = null;
		}
		
		private void attach_AliasBanks(AliasBank entity)
		{
			this.SendPropertyChanging();
			entity.Alias = this;
		}
		
		private void detach_AliasBanks(AliasBank entity)
		{
			this.SendPropertyChanging();
			entity.Alias = null;
		}
		
		private void Initialize()
		{
			this._Group_Alias_GroupRoles = new EntitySet<Group_Alias_GroupRole>(new Action<Group_Alias_GroupRole>(this.attach_Group_Alias_GroupRoles), new Action<Group_Alias_GroupRole>(this.detach_Group_Alias_GroupRoles));
			this._GroupRequests = new EntitySet<GroupRequest>(new Action<GroupRequest>(this.attach_GroupRequests), new Action<GroupRequest>(this.detach_GroupRequests));
			this._Sessions = new EntitySet<Session>(new Action<Session>(this.attach_Sessions), new Action<Session>(this.detach_Sessions));
			this._GroupMessage_Alias = new EntitySet<GroupMessage_Alias>(new Action<GroupMessage_Alias>(this.attach_GroupMessage_Alias), new Action<GroupMessage_Alias>(this.detach_GroupMessage_Alias));
			this._PersonalMessages = new EntitySet<PersonalMessage>(new Action<PersonalMessage>(this.attach_PersonalMessages), new Action<PersonalMessage>(this.detach_PersonalMessages));
			this._GroupMessages = new EntitySet<GroupMessage>(new Action<GroupMessage>(this.attach_GroupMessages), new Action<GroupMessage>(this.detach_GroupMessages));
			this._Bans = new EntitySet<Ban>(new Action<Ban>(this.attach_Bans), new Action<Ban>(this.detach_Bans));
			this._AliasBanks = new EntitySet<AliasBank>(new Action<AliasBank>(this.attach_AliasBanks), new Action<AliasBank>(this.detach_AliasBanks));
			this._Login = default(EntityRef<Login>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MachineRecordExclusions")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MachineRecordExclusion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _IdentifierMask;
		
		private int _RecordTypeId;
		
		private EntityRef<MachineRecordType> _MachineRecordType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdentifierMaskChanging(string value);
    partial void OnIdentifierMaskChanged();
    partial void OnRecordTypeIdChanging(int value);
    partial void OnRecordTypeIdChanged();
    #endregion
		
		public MachineRecordExclusion()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentifierMask", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string IdentifierMask
		{
			get
			{
				return this._IdentifierMask;
			}
			set
			{
				if ((this._IdentifierMask != value))
				{
					this.OnIdentifierMaskChanging(value);
					this.SendPropertyChanging();
					this._IdentifierMask = value;
					this.SendPropertyChanged("IdentifierMask");
					this.OnIdentifierMaskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordTypeId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int RecordTypeId
		{
			get
			{
				return this._RecordTypeId;
			}
			set
			{
				if ((this._RecordTypeId != value))
				{
					if (this._MachineRecordType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecordTypeIdChanging(value);
					this.SendPropertyChanging();
					this._RecordTypeId = value;
					this.SendPropertyChanged("RecordTypeId");
					this.OnRecordTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MachineRecordType_MachineRecordExclusion", Storage="_MachineRecordType", ThisKey="RecordTypeId", OtherKey="Id", IsForeignKey=true)]
		public MachineRecordType MachineRecordType
		{
			get
			{
				return this._MachineRecordType.Entity;
			}
			set
			{
				MachineRecordType previousValue = this._MachineRecordType.Entity;
				if (((previousValue != value) 
							|| (this._MachineRecordType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MachineRecordType.Entity = null;
						previousValue.MachineRecordExclusions.Remove(this);
					}
					this._MachineRecordType.Entity = value;
					if ((value != null))
					{
						value.MachineRecordExclusions.Add(this);
						this._RecordTypeId = value.Id;
					}
					else
					{
						this._RecordTypeId = default(int);
					}
					this.SendPropertyChanged("MachineRecordType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._MachineRecordType = default(EntityRef<MachineRecordType>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualMachineMarker")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class VirtualMachineMarker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _IdentifierMask;
		
		private int _RecordTypeId;
		
		private EntityRef<MachineRecordType> _MachineRecordType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdentifierMaskChanging(string value);
    partial void OnIdentifierMaskChanged();
    partial void OnRecordTypeIdChanging(int value);
    partial void OnRecordTypeIdChanged();
    #endregion
		
		public VirtualMachineMarker()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentifierMask", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string IdentifierMask
		{
			get
			{
				return this._IdentifierMask;
			}
			set
			{
				if ((this._IdentifierMask != value))
				{
					this.OnIdentifierMaskChanging(value);
					this.SendPropertyChanging();
					this._IdentifierMask = value;
					this.SendPropertyChanged("IdentifierMask");
					this.OnIdentifierMaskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordTypeId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int RecordTypeId
		{
			get
			{
				return this._RecordTypeId;
			}
			set
			{
				if ((this._RecordTypeId != value))
				{
					if (this._MachineRecordType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecordTypeIdChanging(value);
					this.SendPropertyChanging();
					this._RecordTypeId = value;
					this.SendPropertyChanged("RecordTypeId");
					this.OnRecordTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MachineRecordType_VirtualMachineMarker", Storage="_MachineRecordType", ThisKey="RecordTypeId", OtherKey="Id", IsForeignKey=true)]
		public MachineRecordType MachineRecordType
		{
			get
			{
				return this._MachineRecordType.Entity;
			}
			set
			{
				MachineRecordType previousValue = this._MachineRecordType.Entity;
				if (((previousValue != value) 
							|| (this._MachineRecordType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MachineRecordType.Entity = null;
						previousValue.VirtualMachineMarkers.Remove(this);
					}
					this._MachineRecordType.Entity = value;
					if ((value != null))
					{
						value.VirtualMachineMarkers.Add(this);
						this._RecordTypeId = value.Id;
					}
					else
					{
						this._RecordTypeId = default(int);
					}
					this.SendPropertyChanged("MachineRecordType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._MachineRecordType = default(EntityRef<MachineRecordType>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IPConverge")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class IPConverge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApiCode;
		
		private int _ProductId;
		
		private System.DateTime _Added;
		
		private string _IpAddress;
		
		private string _Url;
		
		private bool _Active;
		
		private string _HttpUser;
		
		private string _HttpPassword;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApiCodeChanging(string value);
    partial void OnApiCodeChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnAddedChanging(System.DateTime value);
    partial void OnAddedChanged();
    partial void OnIpAddressChanging(string value);
    partial void OnIpAddressChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnHttpUserChanging(string value);
    partial void OnHttpUserChanged();
    partial void OnHttpPasswordChanging(string value);
    partial void OnHttpPasswordChanged();
    #endregion
		
		public IPConverge()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApiCode", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string ApiCode
		{
			get
			{
				return this._ApiCode;
			}
			set
			{
				if ((this._ApiCode != value))
				{
					this.OnApiCodeChanging(value);
					this.SendPropertyChanging();
					this._ApiCode = value;
					this.SendPropertyChanged("ApiCode");
					this.OnApiCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Added", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime Added
		{
			get
			{
				return this._Added;
			}
			set
			{
				if ((this._Added != value))
				{
					this.OnAddedChanging(value);
					this.SendPropertyChanging();
					this._Added = value;
					this.SendPropertyChanged("Added");
					this.OnAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IpAddress", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string IpAddress
		{
			get
			{
				return this._IpAddress;
			}
			set
			{
				if ((this._IpAddress != value))
				{
					this.OnIpAddressChanging(value);
					this.SendPropertyChanging();
					this._IpAddress = value;
					this.SendPropertyChanged("IpAddress");
					this.OnIpAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HttpUser", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string HttpUser
		{
			get
			{
				return this._HttpUser;
			}
			set
			{
				if ((this._HttpUser != value))
				{
					this.OnHttpUserChanging(value);
					this.SendPropertyChanging();
					this._HttpUser = value;
					this.SendPropertyChanged("HttpUser");
					this.OnHttpUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HttpPassword", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string HttpPassword
		{
			get
			{
				return this._HttpPassword;
			}
			set
			{
				if ((this._HttpPassword != value))
				{
					this.OnHttpPasswordChanging(value);
					this.SendPropertyChanging();
					this._HttpPassword = value;
					this.SendPropertyChanged("HttpPassword");
					this.OnHttpPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Login")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Username;
		
		private string _Password;
		
		private string _Email;
		
		private System.DateTime _DateCreated;
		
		private int _IdentityId;
		
		private bool _AllowVirtualMachineLogin;
		
		private System.Nullable<System.Guid> _PasswordResetGuid;
		
		private System.Nullable<System.DateTime> _PasswordResetSendDate;
		
		private EntitySet<UsedKey> _UsedKeys;
		
		private EntitySet<Login_Role> _Login_Roles;
		
		private EntitySet<Lobby_Login> _Lobby_Logins;
		
		private EntitySet<Session> _Session;
		
		private EntitySet<Login_UnlinkedLogin> _Login_UnlinkedLogins;
		
		private EntitySet<Login_UnlinkedLogin> _Login_UnlinkedLogins1;
		
		private EntitySet<PollVote> _PollVotes;
		
		private EntitySet<MachineRecord> _MachineRecords;
		
		private EntitySet<PersonalMessage> _PersonalMessages;
		
		private EntitySet<Alias> _Alias;
		
		private EntitySet<Ban> _Bans;
		
		private EntitySet<Ban> _Bans1;
		
		private EntityRef<Identity> _Identity;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnIdentityIdChanging(int value);
    partial void OnIdentityIdChanged();
    partial void OnAllowVirtualMachineLoginChanging(bool value);
    partial void OnAllowVirtualMachineLoginChanged();
    partial void OnPasswordResetGuidChanging(System.Nullable<System.Guid> value);
    partial void OnPasswordResetGuidChanged();
    partial void OnPasswordResetSendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPasswordResetSendDateChanged();
    #endregion
		
		public Login()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int IdentityId
		{
			get
			{
				return this._IdentityId;
			}
			set
			{
				if ((this._IdentityId != value))
				{
					if (this._Identity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdentityIdChanging(value);
					this.SendPropertyChanging();
					this._IdentityId = value;
					this.SendPropertyChanged("IdentityId");
					this.OnIdentityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowVirtualMachineLogin", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool AllowVirtualMachineLogin
		{
			get
			{
				return this._AllowVirtualMachineLogin;
			}
			set
			{
				if ((this._AllowVirtualMachineLogin != value))
				{
					this.OnAllowVirtualMachineLoginChanging(value);
					this.SendPropertyChanging();
					this._AllowVirtualMachineLogin = value;
					this.SendPropertyChanged("AllowVirtualMachineLogin");
					this.OnAllowVirtualMachineLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordResetGuid", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.Guid> PasswordResetGuid
		{
			get
			{
				return this._PasswordResetGuid;
			}
			set
			{
				if ((this._PasswordResetGuid != value))
				{
					this.OnPasswordResetGuidChanging(value);
					this.SendPropertyChanging();
					this._PasswordResetGuid = value;
					this.SendPropertyChanged("PasswordResetGuid");
					this.OnPasswordResetGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordResetSendDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.DateTime> PasswordResetSendDate
		{
			get
			{
				return this._PasswordResetSendDate;
			}
			set
			{
				if ((this._PasswordResetSendDate != value))
				{
					this.OnPasswordResetSendDateChanging(value);
					this.SendPropertyChanging();
					this._PasswordResetSendDate = value;
					this.SendPropertyChanged("PasswordResetSendDate");
					this.OnPasswordResetSendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_UsedKey", Storage="_UsedKeys", ThisKey="Id", OtherKey="LoginId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<UsedKey> UsedKeys
		{
			get
			{
				if ((this.serializing 
							&& (this._UsedKeys.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UsedKeys;
			}
			set
			{
				this._UsedKeys.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Login_Role", Storage="_Login_Roles", ThisKey="Id", OtherKey="LoginId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<Login_Role> Login_Roles
		{
			get
			{
				if ((this.serializing 
							&& (this._Login_Roles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Login_Roles;
			}
			set
			{
				this._Login_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Lobby_Login", Storage="_Lobby_Logins", ThisKey="Id", OtherKey="LoginId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<Lobby_Login> Lobby_Logins
		{
			get
			{
				if ((this.serializing 
							&& (this._Lobby_Logins.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Lobby_Logins;
			}
			set
			{
				this._Lobby_Logins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Session", Storage="_Session", ThisKey="Id", OtherKey="LoginId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<Session> Sessions
		{
			get
			{
				if ((this.serializing 
							&& (this._Session.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Session;
			}
			set
			{
				this._Session.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Login_UnlinkedLogin", Storage="_Login_UnlinkedLogins", ThisKey="Id", OtherKey="LoginId1")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<Login_UnlinkedLogin> Login_UnlinkedLogins
		{
			get
			{
				if ((this.serializing 
							&& (this._Login_UnlinkedLogins.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Login_UnlinkedLogins;
			}
			set
			{
				this._Login_UnlinkedLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Login_UnlinkedLogin1", Storage="_Login_UnlinkedLogins1", ThisKey="Id", OtherKey="LoginId2")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<Login_UnlinkedLogin> Login_UnlinkedLogins1
		{
			get
			{
				if ((this.serializing 
							&& (this._Login_UnlinkedLogins1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Login_UnlinkedLogins1;
			}
			set
			{
				this._Login_UnlinkedLogins1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_PollVote", Storage="_PollVotes", ThisKey="Id", OtherKey="LoginId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<PollVote> PollVotes
		{
			get
			{
				if ((this.serializing 
							&& (this._PollVotes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PollVotes;
			}
			set
			{
				this._PollVotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_MachineRecord", Storage="_MachineRecords", ThisKey="Id", OtherKey="LoginId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<MachineRecord> MachineRecords
		{
			get
			{
				if ((this.serializing 
							&& (this._MachineRecords.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MachineRecords;
			}
			set
			{
				this._MachineRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_PersonalMessage", Storage="_PersonalMessages", ThisKey="Id", OtherKey="LoginId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<PersonalMessage> PersonalMessages
		{
			get
			{
				if ((this.serializing 
							&& (this._PersonalMessages.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PersonalMessages;
			}
			set
			{
				this._PersonalMessages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Alias", Storage="_Alias", ThisKey="Id", OtherKey="LoginId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<Alias> Aliases
		{
			get
			{
				if ((this.serializing 
							&& (this._Alias.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Alias;
			}
			set
			{
				this._Alias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Ban", Storage="_Bans", ThisKey="Id", OtherKey="BannedByLoginId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<Ban> IssuedBans
		{
			get
			{
				if ((this.serializing 
							&& (this._Bans.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Bans;
			}
			set
			{
				this._Bans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Ban1", Storage="_Bans1", ThisKey="Id", OtherKey="LoginId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21, EmitDefaultValue=false)]
		public EntitySet<Ban> Bans
		{
			get
			{
				if ((this.serializing 
							&& (this._Bans1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Bans1;
			}
			set
			{
				this._Bans1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Identity_Login", Storage="_Identity", ThisKey="IdentityId", OtherKey="Id", IsForeignKey=true)]
		public Identity Identity
		{
			get
			{
				return this._Identity.Entity;
			}
			set
			{
				Identity previousValue = this._Identity.Entity;
				if (((previousValue != value) 
							|| (this._Identity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Identity.Entity = null;
						previousValue.Logins.Remove(this);
					}
					this._Identity.Entity = value;
					if ((value != null))
					{
						value.Logins.Add(this);
						this._IdentityId = value.Id;
					}
					else
					{
						this._IdentityId = default(int);
					}
					this.SendPropertyChanged("Identity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UsedKeys(UsedKey entity)
		{
			this.SendPropertyChanging();
			entity.Login = this;
		}
		
		private void detach_UsedKeys(UsedKey entity)
		{
			this.SendPropertyChanging();
			entity.Login = null;
		}
		
		private void attach_Login_Roles(Login_Role entity)
		{
			this.SendPropertyChanging();
			entity.Login = this;
		}
		
		private void detach_Login_Roles(Login_Role entity)
		{
			this.SendPropertyChanging();
			entity.Login = null;
		}
		
		private void attach_Lobby_Logins(Lobby_Login entity)
		{
			this.SendPropertyChanging();
			entity.Login = this;
		}
		
		private void detach_Lobby_Logins(Lobby_Login entity)
		{
			this.SendPropertyChanging();
			entity.Login = null;
		}
		
		private void attach_Session(Session entity)
		{
			this.SendPropertyChanging();
			entity.Login = this;
		}
		
		private void detach_Session(Session entity)
		{
			this.SendPropertyChanging();
			entity.Login = null;
		}
		
		private void attach_Login_UnlinkedLogins(Login_UnlinkedLogin entity)
		{
			this.SendPropertyChanging();
			entity.Login = this;
		}
		
		private void detach_Login_UnlinkedLogins(Login_UnlinkedLogin entity)
		{
			this.SendPropertyChanging();
			entity.Login = null;
		}
		
		private void attach_Login_UnlinkedLogins1(Login_UnlinkedLogin entity)
		{
			this.SendPropertyChanging();
			entity.Login1 = this;
		}
		
		private void detach_Login_UnlinkedLogins1(Login_UnlinkedLogin entity)
		{
			this.SendPropertyChanging();
			entity.Login1 = null;
		}
		
		private void attach_PollVotes(PollVote entity)
		{
			this.SendPropertyChanging();
			entity.Login = this;
		}
		
		private void detach_PollVotes(PollVote entity)
		{
			this.SendPropertyChanging();
			entity.Login = null;
		}
		
		private void attach_MachineRecords(MachineRecord entity)
		{
			this.SendPropertyChanging();
			entity.Login = this;
		}
		
		private void detach_MachineRecords(MachineRecord entity)
		{
			this.SendPropertyChanging();
			entity.Login = null;
		}
		
		private void attach_PersonalMessages(PersonalMessage entity)
		{
			this.SendPropertyChanging();
			entity.Login = this;
		}
		
		private void detach_PersonalMessages(PersonalMessage entity)
		{
			this.SendPropertyChanging();
			entity.Login = null;
		}
		
		private void attach_Alias(Alias entity)
		{
			this.SendPropertyChanging();
			entity.Login = this;
		}
		
		private void detach_Alias(Alias entity)
		{
			this.SendPropertyChanging();
			entity.Login = null;
		}
		
		private void attach_Bans(Ban entity)
		{
			this.SendPropertyChanging();
			entity.BanningLogin = this;
		}
		
		private void detach_Bans(Ban entity)
		{
			this.SendPropertyChanging();
			entity.BanningLogin = null;
		}
		
		private void attach_Bans1(Ban entity)
		{
			this.SendPropertyChanging();
			entity.Login = this;
		}
		
		private void detach_Bans1(Ban entity)
		{
			this.SendPropertyChanging();
			entity.Login = null;
		}
		
		private void Initialize()
		{
			this._UsedKeys = new EntitySet<UsedKey>(new Action<UsedKey>(this.attach_UsedKeys), new Action<UsedKey>(this.detach_UsedKeys));
			this._Login_Roles = new EntitySet<Login_Role>(new Action<Login_Role>(this.attach_Login_Roles), new Action<Login_Role>(this.detach_Login_Roles));
			this._Lobby_Logins = new EntitySet<Lobby_Login>(new Action<Lobby_Login>(this.attach_Lobby_Logins), new Action<Lobby_Login>(this.detach_Lobby_Logins));
			this._Session = new EntitySet<Session>(new Action<Session>(this.attach_Session), new Action<Session>(this.detach_Session));
			this._Login_UnlinkedLogins = new EntitySet<Login_UnlinkedLogin>(new Action<Login_UnlinkedLogin>(this.attach_Login_UnlinkedLogins), new Action<Login_UnlinkedLogin>(this.detach_Login_UnlinkedLogins));
			this._Login_UnlinkedLogins1 = new EntitySet<Login_UnlinkedLogin>(new Action<Login_UnlinkedLogin>(this.attach_Login_UnlinkedLogins1), new Action<Login_UnlinkedLogin>(this.detach_Login_UnlinkedLogins1));
			this._PollVotes = new EntitySet<PollVote>(new Action<PollVote>(this.attach_PollVotes), new Action<PollVote>(this.detach_PollVotes));
			this._MachineRecords = new EntitySet<MachineRecord>(new Action<MachineRecord>(this.attach_MachineRecords), new Action<MachineRecord>(this.detach_MachineRecords));
			this._PersonalMessages = new EntitySet<PersonalMessage>(new Action<PersonalMessage>(this.attach_PersonalMessages), new Action<PersonalMessage>(this.detach_PersonalMessages));
			this._Alias = new EntitySet<Alias>(new Action<Alias>(this.attach_Alias), new Action<Alias>(this.detach_Alias));
			this._Bans = new EntitySet<Ban>(new Action<Ban>(this.attach_Bans), new Action<Ban>(this.detach_Bans));
			this._Bans1 = new EntitySet<Ban>(new Action<Ban>(this.attach_Bans1), new Action<Ban>(this.detach_Bans1));
			this._Identity = default(EntityRef<Identity>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ban")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Ban : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _LoginId;
		
		private int _BannedByLoginId;
		
		private string _Reason;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateExpires;
		
		private bool _InEffect;
		
		private System.Nullable<int> _BanTypeId;
		
		private System.Nullable<int> _AliasID;
		
		private EntityRef<Alias> _Alias;
		
		private EntityRef<BanType> _BanType;
		
		private EntityRef<Login> _Login;
		
		private EntityRef<Login> _Login1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLoginIdChanging(int value);
    partial void OnLoginIdChanged();
    partial void OnBannedByLoginIdChanging(int value);
    partial void OnBannedByLoginIdChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateExpiresChanging(System.Nullable<System.DateTime> value);
    partial void OnDateExpiresChanged();
    partial void OnInEffectChanging(bool value);
    partial void OnInEffectChanged();
    partial void OnBanTypeIdChanging(System.Nullable<int> value);
    partial void OnBanTypeIdChanged();
    partial void OnAliasIDChanging(System.Nullable<int> value);
    partial void OnAliasIDChanged();
    #endregion
		
		public Ban()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int LoginId
		{
			get
			{
				return this._LoginId;
			}
			set
			{
				if ((this._LoginId != value))
				{
					if (this._Login1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginIdChanging(value);
					this.SendPropertyChanging();
					this._LoginId = value;
					this.SendPropertyChanged("LoginId");
					this.OnLoginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BannedByLoginId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int BannedByLoginId
		{
			get
			{
				return this._BannedByLoginId;
			}
			set
			{
				if ((this._BannedByLoginId != value))
				{
					if (this._Login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBannedByLoginIdChanging(value);
					this.SendPropertyChanging();
					this._BannedByLoginId = value;
					this.SendPropertyChanged("BannedByLoginId");
					this.OnBannedByLoginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateExpires", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> DateExpires
		{
			get
			{
				return this._DateExpires;
			}
			set
			{
				if ((this._DateExpires != value))
				{
					this.OnDateExpiresChanging(value);
					this.SendPropertyChanging();
					this._DateExpires = value;
					this.SendPropertyChanged("DateExpires");
					this.OnDateExpiresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InEffect", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool InEffect
		{
			get
			{
				return this._InEffect;
			}
			set
			{
				if ((this._InEffect != value))
				{
					this.OnInEffectChanging(value);
					this.SendPropertyChanging();
					this._InEffect = value;
					this.SendPropertyChanged("InEffect");
					this.OnInEffectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BanTypeId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> BanTypeId
		{
			get
			{
				return this._BanTypeId;
			}
			set
			{
				if ((this._BanTypeId != value))
				{
					if (this._BanType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBanTypeIdChanging(value);
					this.SendPropertyChanging();
					this._BanTypeId = value;
					this.SendPropertyChanged("BanTypeId");
					this.OnBanTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AliasID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> AliasID
		{
			get
			{
				return this._AliasID;
			}
			set
			{
				if ((this._AliasID != value))
				{
					if (this._Alias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAliasIDChanging(value);
					this.SendPropertyChanging();
					this._AliasID = value;
					this.SendPropertyChanged("AliasID");
					this.OnAliasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alias_Ban", Storage="_Alias", ThisKey="AliasID", OtherKey="Id", IsForeignKey=true)]
		public Alias Alias
		{
			get
			{
				return this._Alias.Entity;
			}
			set
			{
				Alias previousValue = this._Alias.Entity;
				if (((previousValue != value) 
							|| (this._Alias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alias.Entity = null;
						previousValue.Bans.Remove(this);
					}
					this._Alias.Entity = value;
					if ((value != null))
					{
						value.Bans.Add(this);
						this._AliasID = value.Id;
					}
					else
					{
						this._AliasID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Alias");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BanType_Ban", Storage="_BanType", ThisKey="BanTypeId", OtherKey="Id", IsForeignKey=true)]
		public BanType BanType
		{
			get
			{
				return this._BanType.Entity;
			}
			set
			{
				BanType previousValue = this._BanType.Entity;
				if (((previousValue != value) 
							|| (this._BanType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BanType.Entity = null;
						previousValue.Bans.Remove(this);
					}
					this._BanType.Entity = value;
					if ((value != null))
					{
						value.Bans.Add(this);
						this._BanTypeId = value.Id;
					}
					else
					{
						this._BanTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("BanType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Ban", Storage="_Login", ThisKey="BannedByLoginId", OtherKey="Id", IsForeignKey=true)]
		public Login BanningLogin
		{
			get
			{
				return this._Login.Entity;
			}
			set
			{
				Login previousValue = this._Login.Entity;
				if (((previousValue != value) 
							|| (this._Login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Login.Entity = null;
						previousValue.IssuedBans.Remove(this);
					}
					this._Login.Entity = value;
					if ((value != null))
					{
						value.IssuedBans.Add(this);
						this._BannedByLoginId = value.Id;
					}
					else
					{
						this._BannedByLoginId = default(int);
					}
					this.SendPropertyChanged("BanningLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Ban1", Storage="_Login1", ThisKey="LoginId", OtherKey="Id", IsForeignKey=true)]
		public Login Login
		{
			get
			{
				return this._Login1.Entity;
			}
			set
			{
				Login previousValue = this._Login1.Entity;
				if (((previousValue != value) 
							|| (this._Login1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Login1.Entity = null;
						previousValue.Bans.Remove(this);
					}
					this._Login1.Entity = value;
					if ((value != null))
					{
						value.Bans.Add(this);
						this._LoginId = value.Id;
					}
					else
					{
						this._LoginId = default(int);
					}
					this.SendPropertyChanged("Login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Alias = default(EntityRef<Alias>);
			this._BanType = default(EntityRef<BanType>);
			this._Login = default(EntityRef<Login>);
			this._Login1 = default(EntityRef<Login>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogIP")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class LogIP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IPAddress;
		
		private int _IdentityId;
		
		private System.DateTime _LastAccessed;
		
		private EntityRef<Identity> _Identity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnIdentityIdChanging(int value);
    partial void OnIdentityIdChanged();
    partial void OnLastAccessedChanging(System.DateTime value);
    partial void OnLastAccessedChanged();
    #endregion
		
		public LogIP()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int IdentityId
		{
			get
			{
				return this._IdentityId;
			}
			set
			{
				if ((this._IdentityId != value))
				{
					if (this._Identity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdentityIdChanging(value);
					this.SendPropertyChanging();
					this._IdentityId = value;
					this.SendPropertyChanged("IdentityId");
					this.OnIdentityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAccessed", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime LastAccessed
		{
			get
			{
				return this._LastAccessed;
			}
			set
			{
				if ((this._LastAccessed != value))
				{
					this.OnLastAccessedChanging(value);
					this.SendPropertyChanging();
					this._LastAccessed = value;
					this.SendPropertyChanged("LastAccessed");
					this.OnLastAccessedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Identity_LogIP", Storage="_Identity", ThisKey="IdentityId", OtherKey="Id", IsForeignKey=true)]
		public Identity Identity
		{
			get
			{
				return this._Identity.Entity;
			}
			set
			{
				Identity previousValue = this._Identity.Entity;
				if (((previousValue != value) 
							|| (this._Identity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Identity.Entity = null;
						previousValue.LogIPs.Remove(this);
					}
					this._Identity.Entity = value;
					if ((value != null))
					{
						value.LogIPs.Add(this);
						this._IdentityId = value.Id;
					}
					else
					{
						this._IdentityId = default(int);
					}
					this.SendPropertyChanged("Identity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Identity = default(EntityRef<Identity>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AliasBank")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AliasBank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _AliasId;
		
		private string _Callsign;
		
		private System.DateTime _DateCreated;
		
		private EntityRef<Alias> _Alias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAliasIdChanging(int value);
    partial void OnAliasIdChanged();
    partial void OnCallsignChanging(string value);
    partial void OnCallsignChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public AliasBank()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AliasId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AliasId
		{
			get
			{
				return this._AliasId;
			}
			set
			{
				if ((this._AliasId != value))
				{
					if (this._Alias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAliasIdChanging(value);
					this.SendPropertyChanging();
					this._AliasId = value;
					this.SendPropertyChanged("AliasId");
					this.OnAliasIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Callsign", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Callsign
		{
			get
			{
				return this._Callsign;
			}
			set
			{
				if ((this._Callsign != value))
				{
					this.OnCallsignChanging(value);
					this.SendPropertyChanging();
					this._Callsign = value;
					this.SendPropertyChanged("Callsign");
					this.OnCallsignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alias_AliasBank", Storage="_Alias", ThisKey="AliasId", OtherKey="Id", IsForeignKey=true)]
		public Alias Alias
		{
			get
			{
				return this._Alias.Entity;
			}
			set
			{
				Alias previousValue = this._Alias.Entity;
				if (((previousValue != value) 
							|| (this._Alias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alias.Entity = null;
						previousValue.AliasBanks.Remove(this);
					}
					this._Alias.Entity = value;
					if ((value != null))
					{
						value.AliasBanks.Add(this);
						this._AliasId = value.Id;
					}
					else
					{
						this._AliasId = default(int);
					}
					this.SendPropertyChanged("Alias");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Alias = default(EntityRef<Alias>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AutoUpdateFile")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AutoUpdateFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Filename;
		
		private bool _IsProtected;
		
		private EntitySet<AutoUpdateFile_Lobby> _AutoUpdateFile_Lobbies;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFilenameChanging(string value);
    partial void OnFilenameChanged();
    partial void OnIsProtectedChanging(bool value);
    partial void OnIsProtectedChanged();
    #endregion
		
		public AutoUpdateFile()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filename", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Filename
		{
			get
			{
				return this._Filename;
			}
			set
			{
				if ((this._Filename != value))
				{
					this.OnFilenameChanging(value);
					this.SendPropertyChanging();
					this._Filename = value;
					this.SendPropertyChanged("Filename");
					this.OnFilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProtected", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool IsProtected
		{
			get
			{
				return this._IsProtected;
			}
			set
			{
				if ((this._IsProtected != value))
				{
					this.OnIsProtectedChanging(value);
					this.SendPropertyChanging();
					this._IsProtected = value;
					this.SendPropertyChanged("IsProtected");
					this.OnIsProtectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AutoUpdateFile_AutoUpdateFile_Lobby", Storage="_AutoUpdateFile_Lobbies", ThisKey="Id", OtherKey="AutoUpdateFileId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<AutoUpdateFile_Lobby> AutoUpdateFile_Lobbies
		{
			get
			{
				if ((this.serializing 
							&& (this._AutoUpdateFile_Lobbies.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AutoUpdateFile_Lobbies;
			}
			set
			{
				this._AutoUpdateFile_Lobbies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AutoUpdateFile_Lobbies(AutoUpdateFile_Lobby entity)
		{
			this.SendPropertyChanging();
			entity.AutoUpdateFile = this;
		}
		
		private void detach_AutoUpdateFile_Lobbies(AutoUpdateFile_Lobby entity)
		{
			this.SendPropertyChanging();
			entity.AutoUpdateFile = null;
		}
		
		private void Initialize()
		{
			this._AutoUpdateFile_Lobbies = new EntitySet<AutoUpdateFile_Lobby>(new Action<AutoUpdateFile_Lobby>(this.attach_AutoUpdateFile_Lobbies), new Action<AutoUpdateFile_Lobby>(this.detach_AutoUpdateFile_Lobbies));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AvailableKeyResult
	{
		
		private int _Id;
		
		private string _Token;
		
		private string _Filename;
		
		private System.DateTime _DateCreated;
		
		private int _TransformMethodId;
		
		private bool _IsValid;
		
		public AvailableKeyResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="NVarChar(95) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this._Token = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filename", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Filename
		{
			get
			{
				return this._Filename;
			}
			set
			{
				if ((this._Filename != value))
				{
					this._Filename = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this._DateCreated = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransformMethodId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int TransformMethodId
		{
			get
			{
				return this._TransformMethodId;
			}
			set
			{
				if ((this._TransformMethodId != value))
				{
					this._TransformMethodId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsValid", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsValid
		{
			get
			{
				return this._IsValid;
			}
			set
			{
				if ((this._IsValid != value))
				{
					this._IsValid = value;
				}
			}
		}
	}
	
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class FindAutoUpdateFilesResult
	{
		
		private int _AutoUpdateFileId;
		
		private int _LobbyId;
		
		private string _ValidChecksum;
		
		private string _CurrentVersion;
		
		private System.DateTime _DateCreated;
		
		private System.DateTime _DateModified;
		
		private string _Filename;
		
		private bool _IsProtected;
		
		public FindAutoUpdateFilesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoUpdateFileId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AutoUpdateFileId
		{
			get
			{
				return this._AutoUpdateFileId;
			}
			set
			{
				if ((this._AutoUpdateFileId != value))
				{
					this._AutoUpdateFileId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LobbyId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int LobbyId
		{
			get
			{
				return this._LobbyId;
			}
			set
			{
				if ((this._LobbyId != value))
				{
					this._LobbyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidChecksum", DbType="NChar(28)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ValidChecksum
		{
			get
			{
				return this._ValidChecksum;
			}
			set
			{
				if ((this._ValidChecksum != value))
				{
					this._ValidChecksum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentVersion", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CurrentVersion
		{
			get
			{
				return this._CurrentVersion;
			}
			set
			{
				if ((this._CurrentVersion != value))
				{
					this._CurrentVersion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this._DateCreated = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this._DateModified = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filename", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Filename
		{
			get
			{
				return this._Filename;
			}
			set
			{
				if ((this._Filename != value))
				{
					this._Filename = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProtected", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool IsProtected
		{
			get
			{
				return this._IsProtected;
			}
			set
			{
				if ((this._IsProtected != value))
				{
					this._IsProtected = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
